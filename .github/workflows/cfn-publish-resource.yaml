name: Atlas CFN Resource Publish
on:
  workflow_dispatch:
    inputs:
      regions:
        description: "comma seperated AWS regions.Default is all regions."
        default: "us-east-1,us-west-1,us-west-2,eu-west-1,eu-central-1,ap-southeast-1,ap-southeast-2,ap-northeast-1,ap-northeast-2,sa-east-1,ca-central-1,eu-west-2,eu-west-3,eu-north-1,ap-south-1,ap-east-1,me-south-1,af-south-1,us-east-2,us-west-1,us-west-2,eu-west-1,ap-southeast-1,ap-southeast-2,ap-northeast-1,ap-northeast-2,sa-east-1,ca-central-1,eu-west-2,eu-west-3,eu-north-1,ap-south-1,ap-east-1,me-south-1,af-south-1,us-east-2,ap-south-2,ap-southeast-4,eu-central-2, eu-south-2,me-central-1"
        required: true
      resourceNames:
        description: "the folder name of the Resource in this Repo."
        default: ""
        required: true
      otherParams:
        description: "Resource specific environment variables used for cfn test."
        default: ""
        required: false
      targetLocationsMaxConcurrency:
        description: "The maximum number of target locations to be updated concurrently. Default is 30."
        default: "30"
        required: false
      branchName:
        description: "The branch name to be used for the resource. Default is master."
        default: "master"
        required: false
jobs:
  publish-mongodb-atlas-resource:
    name: publish-mongodb-atlas-resource
    runs-on: ubuntu-20.04

    env:

      RESOURCES: ${{ github.event.inputs.resourceNames }}
      REGIONS: ${{ github.event.inputs.regions }}
      OTHER_PARAMS: ${{ github.event.inputs.otherParams }}
      TARGET_LOCATIONS_MAX_CONCURRENCY: ${{ github.event.inputs.targetLocationsMaxConcurrency }}
      BRANCH_NAME: ${{ github.event.inputs.branchName }}

      # Atlas Profile
      ATLAS_PUBLIC_KEY: ${{ secrets.ATLAS_PUBLIC_KEY }}
      ATLAS_PRIVATE_KEY: ${{ secrets.ATLAS_PRIVATE_KEY }}
      ATLAS_ORG_ID: ${{ secrets.ATLAS_ORG_ID }}

      # Organization
      ATLAS_ORG_OWNER_ID: ${{ secrets.ATLAS_ORG_OWNER_ID }}

      # federated_settings_org_role_mapping
      ATLAS_ORG_ID_FOR_FEDERATION: ${{ secrets.ATLAS_ORG_ID_FOR_FEDERATION }}
      ATLAS_PUBLIC_KEY_FOR_FEDERATION: ${{ secrets.ATLAS_PUBLIC_KEY_FOR_FEDERATION }}
      ATLAS_PRIVATE_KEY_FOR_FEDERATION: ${{ secrets.ATLAS_PRIVATE_KEY_FOR_FEDERATION }}
      ATLAS_FEDERATED_SETTINGS_ID: ${{ secrets.ATLAS_FEDERATED_SETTINGS_ID }}

      # AWS
      AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID}}

      # ldap-configuration
      LDAP_BIND_PASSWORD: ${{ secrets.LDAP_BIND_PASSWORD }}
      LDAP_HOST_NAME: ${{ secrets.LDAP_HOST_NAME }}
      LDAP_BIND_USER_NAME: ${{ secrets.LDAP_BIND_USER_NAME }}

      # third party integration
      WEBHOOK_CREATE_URL: ${{ secrets.WEBHOOK_CREATE_URL }}
      WEBHOOK_UPDATE_URL: ${{ secrets.WEBHOOK_UPDATE_URL }}
      WEBHOOK_UPDATE_SECRET: ${{ secrets.WEBHOOK_UPDATE_SECRET }}
      PROMETHEUS_USER_NAME: ${{ secrets.PROMETHEUS_USER_NAME }}
      PROMETHEUS_PASSWORD_NAME: ${{ secrets.PROMETHEUS_PASSWORD_NAME }}
      PAGER_DUTY_CREATE_SERVICE_KEY: ${{ secrets.PAGER_DUTY_CREATE_SERVICE_KEY }}
      PAGER_DUTY_UPDATE_SERVICE_KEY: ${{ secrets.PAGER_DUTY_UPDATE_SERVICE_KEY }}
      DATA_DOG_CREATE_API_KEY: ${{ secrets.DATA_DOG_CREATE_API_KEY }}
      DATA_DOG_UPDATE_API_KEY: ${{ secrets.DATA_DOG_UPDATE_API_KEY }}
      OPS_GENIE_API_KEY: ${{ secrets.OPS_GENIE_API_KEY }}
      MICROSOFT_TEAMS_WEBHOOK_CREATE_URL: ${{ secrets.MICROSOFT_TEAMS_WEBHOOK_CREATE_URL }}
      MICROSOFT_TEAMS_WEBHOOK_UPDATE_URL: ${{ secrets.MICROSOFT_TEAMS_WEBHOOK_UPDATE_URL }}

    steps:
      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          sudo pip3 install awscli
          aws --version
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run publishing script
        run: |
          chmod +x cfn-publish.sh
          ./cfn-publish.sh

