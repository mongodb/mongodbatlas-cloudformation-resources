// Generated by cdk-import
import * as cdk from 'aws-cdk-lib';
import * as constructs from 'constructs';

/**
 * Returns and edits database auditing settings for MongoDB Cloud projects.
 *
 * @schema CfnAuditingProps
 */
export interface CfnAuditingProps {
  /**
   * Profile used to provide credentials information, (a secret with the cfn/atlas/profile/{Profile}, is required), if not provided default is used
   *
   * @schema CfnAuditingProps#Profile
   */
  readonly profile?: string;

  /**
   * Unique 24-hexadecimal digit string that identifies your project.
   *
   * @schema CfnAuditingProps#GroupId
   */
  readonly groupId: string;

}

/**
 * Converts an object of type 'CfnAuditingProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnAuditingProps(obj: CfnAuditingProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Profile': obj.profile,
    'GroupId': obj.groupId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * A CloudFormation `MongoDB::Atlas::Auditing`
 *
 * @cloudformationResource MongoDB::Atlas::Auditing
 * @stability external
 */
export class CfnAuditing extends cdk.CfnResource {
  /**
  * The CloudFormation resource type name for this resource class.
  */
  public static readonly CFN_RESOURCE_TYPE_NAME = 'MongoDB::Atlas::Auditing';

  /**
   * Resource props.
   */
  public readonly props: CfnAuditingProps;

  /**
   * Attribute `MongoDB::Atlas::Auditing.AuditFilter`
   */
  public readonly attrAuditFilter: string;
  /**
   * Attribute `MongoDB::Atlas::Auditing.ConfigurationType`
   */
  public readonly attrConfigurationType: string;
  /**
   * Attribute `MongoDB::Atlas::Auditing.AuditAuthorizationSuccess`
   */
  public readonly attrAuditAuthorizationSuccess: cdk.IResolvable;

  /**
   * Create a new `MongoDB::Atlas::Auditing`.
   *
   * @param scope - scope in which this resource is defined
   * @param id    - scoped id of the resource
   * @param props - resource properties
   */
  constructor(scope: constructs.Construct, id: string, props: CfnAuditingProps) {
    super(scope, id, { type: CfnAuditing.CFN_RESOURCE_TYPE_NAME, properties: toJson_CfnAuditingProps(props)! });

    this.props = props;

    this.attrAuditFilter = cdk.Token.asString(this.getAtt('AuditFilter'));
    this.attrConfigurationType = cdk.Token.asString(this.getAtt('ConfigurationType'));
    this.attrAuditAuthorizationSuccess = this.getAtt('AuditAuthorizationSuccess');
  }
}