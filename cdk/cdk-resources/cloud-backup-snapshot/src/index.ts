// Generated by cdk-import
import * as cdk from 'aws-cdk-lib';
import * as constructs from 'constructs';

/**
 * Returns, takes, and removes Cloud Backup snapshots.
 *
 * @schema CfnCloudBackupSnapshotProps
 */
export interface CfnCloudBackupSnapshotProps {
  /**
   * @schema CfnCloudBackupSnapshotProps#ApiKeys
   */
  readonly apiKeys?: ApiKeyDefinition;

  /**
   * Human-readable label that identifies the cluster.
   *
   * @schema CfnCloudBackupSnapshotProps#ClusterName
   */
  readonly clusterName?: string;

  /**
   * Human-readable label that identifies the serverless instance.
   *
   * @schema CfnCloudBackupSnapshotProps#InstanceName
   */
  readonly instanceName?: string;

  /**
   * Human-readable phrase or sentence that explains the purpose of the snapshot. The resource returns this parameter when `"status": "onDemand"`.
   *
   * @schema CfnCloudBackupSnapshotProps#Description
   */
  readonly description?: string;

  /**
   * Unique 24-hexadecimal digit string that identifies your project.
   *
   * @schema CfnCloudBackupSnapshotProps#GroupId
   */
  readonly groupId?: string;

  /**
   * Flag that indicates whether the response returns the total number of items (**totalCount**) in the response.
   *
   * @schema CfnCloudBackupSnapshotProps#IncludeCount
   */
  readonly includeCount?: boolean;

  /**
   * Number of items that the response returns per page.
   *
   * @schema CfnCloudBackupSnapshotProps#ItemsPerPage
   */
  readonly itemsPerPage?: number;

  /**
   * Number of the page that displays the current set of the total objects that the response returns.
   *
   * @schema CfnCloudBackupSnapshotProps#PageNum
   */
  readonly pageNum?: number;

  /**
   * Number of days that MongoDB Cloud should retain the on-demand snapshot. Must be at least **1**
   *
   * @schema CfnCloudBackupSnapshotProps#RetentionInDays
   */
  readonly retentionInDays?: number;

}

/**
 * Converts an object of type 'CfnCloudBackupSnapshotProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnCloudBackupSnapshotProps(obj: CfnCloudBackupSnapshotProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'ApiKeys': toJson_ApiKeyDefinition(obj.apiKeys),
    'ClusterName': obj.clusterName,
    'InstanceName': obj.instanceName,
    'Description': obj.description,
    'GroupId': obj.groupId,
    'IncludeCount': obj.includeCount,
    'ItemsPerPage': obj.itemsPerPage,
    'PageNum': obj.pageNum,
    'RetentionInDays': obj.retentionInDays,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema apiKeyDefinition
 */
export interface ApiKeyDefinition {
  /**
   * @schema apiKeyDefinition#PrivateKey
   */
  readonly privateKey?: string;

  /**
   * @schema apiKeyDefinition#PublicKey
   */
  readonly publicKey?: string;

}

/**
 * Converts an object of type 'ApiKeyDefinition' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ApiKeyDefinition(obj: ApiKeyDefinition | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'PrivateKey': obj.privateKey,
    'PublicKey': obj.publicKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * A CloudFormation `MongoDB::Atlas::CloudBackupSnapshot`
 *
 * @cloudformationResource MongoDB::Atlas::CloudBackupSnapshot
 * @stability external
 */
export class CfnCloudBackupSnapshot extends cdk.CfnResource {
  /**
  * The CloudFormation resource type name for this resource class.
  */
  public static readonly CFN_RESOURCE_TYPE_NAME = 'MongoDB::Atlas::CloudBackupSnapshot';

  /**
   * Resource props.
   */
  public readonly props: CfnCloudBackupSnapshotProps;

  /**
   * Attribute `MongoDB::Atlas::CloudBackupSnapshot.SnapshotId`
   */
  public readonly attrSnapshotId: string;
  /**
   * Attribute `MongoDB::Atlas::CloudBackupSnapshot.SnapshotIds`
   */
  public readonly attrSnapshotIds: string[];
  /**
   * Attribute `MongoDB::Atlas::CloudBackupSnapshot.MasterKeyUUID`
   */
  public readonly attrMasterKeyUUID: string;
  /**
   * Attribute `MongoDB::Atlas::CloudBackupSnapshot.Results`
   */
  public readonly attrResults: any[];
  /**
   * Attribute `MongoDB::Atlas::CloudBackupSnapshot.Type`
   */
  public readonly attrType: string;
  /**
   * Attribute `MongoDB::Atlas::CloudBackupSnapshot.SnapshotType`
   */
  public readonly attrSnapshotType: string;
  /**
   * Attribute `MongoDB::Atlas::CloudBackupSnapshot.TotalCount`
   */
  public readonly attrTotalCount: number;
  /**
   * Attribute `MongoDB::Atlas::CloudBackupSnapshot.Members`
   */
  public readonly attrMembers: any[];
  /**
   * Attribute `MongoDB::Atlas::CloudBackupSnapshot.ExpiresAt`
   */
  public readonly attrExpiresAt: string;
  /**
   * Attribute `MongoDB::Atlas::CloudBackupSnapshot.StorageSizeBytes`
   */
  public readonly attrStorageSizeBytes: string;
  /**
   * Attribute `MongoDB::Atlas::CloudBackupSnapshot.PolicyItems`
   */
  public readonly attrPolicyItems: string[];
  /**
   * Attribute `MongoDB::Atlas::CloudBackupSnapshot.Id`
   */
  public readonly attrId: string;
  /**
   * Attribute `MongoDB::Atlas::CloudBackupSnapshot.CreatedAt`
   */
  public readonly attrCreatedAt: string;
  /**
   * Attribute `MongoDB::Atlas::CloudBackupSnapshot.Links`
   */
  public readonly attrLinks: any[];
  /**
   * Attribute `MongoDB::Atlas::CloudBackupSnapshot.CloudProvider`
   */
  public readonly attrCloudProvider: string;
  /**
   * Attribute `MongoDB::Atlas::CloudBackupSnapshot.MongodVersion`
   */
  public readonly attrMongodVersion: string;
  /**
   * Attribute `MongoDB::Atlas::CloudBackupSnapshot.FrequencyType`
   */
  public readonly attrFrequencyType: string;
  /**
   * Attribute `MongoDB::Atlas::CloudBackupSnapshot.ReplicaSetName`
   */
  public readonly attrReplicaSetName: string;
  /**
   * Attribute `MongoDB::Atlas::CloudBackupSnapshot.Status`
   */
  public readonly attrStatus: string;

  /**
   * Create a new `MongoDB::Atlas::CloudBackupSnapshot`.
   *
   * @param scope - scope in which this resource is defined
   * @param id    - scoped id of the resource
   * @param props - resource properties
   */
  constructor(scope: constructs.Construct, id: string, props: CfnCloudBackupSnapshotProps) {
    super(scope, id, { type: CfnCloudBackupSnapshot.CFN_RESOURCE_TYPE_NAME, properties: toJson_CfnCloudBackupSnapshotProps(props)! });

    this.props = props;

    this.attrSnapshotId = cdk.Token.asString(this.getAtt('SnapshotId'));
    this.attrSnapshotIds = cdk.Token.asList(this.getAtt('SnapshotIds'));
    this.attrMasterKeyUUID = cdk.Token.asString(this.getAtt('MasterKeyUUID'));
    this.attrResults = cdk.Token.asList(this.getAtt('Results'));
    this.attrType = cdk.Token.asString(this.getAtt('Type'));
    this.attrSnapshotType = cdk.Token.asString(this.getAtt('SnapshotType'));
    this.attrTotalCount = cdk.Token.asNumber(this.getAtt('TotalCount'));
    this.attrMembers = cdk.Token.asList(this.getAtt('Members'));
    this.attrExpiresAt = cdk.Token.asString(this.getAtt('ExpiresAt'));
    this.attrStorageSizeBytes = cdk.Token.asString(this.getAtt('StorageSizeBytes'));
    this.attrPolicyItems = cdk.Token.asList(this.getAtt('PolicyItems'));
    this.attrId = cdk.Token.asString(this.getAtt('Id'));
    this.attrCreatedAt = cdk.Token.asString(this.getAtt('CreatedAt'));
    this.attrLinks = cdk.Token.asList(this.getAtt('Links'));
    this.attrCloudProvider = cdk.Token.asString(this.getAtt('CloudProvider'));
    this.attrMongodVersion = cdk.Token.asString(this.getAtt('MongodVersion'));
    this.attrFrequencyType = cdk.Token.asString(this.getAtt('FrequencyType'));
    this.attrReplicaSetName = cdk.Token.asString(this.getAtt('ReplicaSetName'));
    this.attrStatus = cdk.Token.asString(this.getAtt('Status'));
  }
}