// Generated by cdk-import
import * as cdk from 'aws-cdk-lib';
import * as constructs from 'constructs';

/**
 * This resource allows you to create, cancel, get one or list all cloud provider snapshot restore jobs.
 *
 * @schema CfnCloudProviderSnapshotRestoreJobsProps
 */
export interface CfnCloudProviderSnapshotRestoreJobsProps {
  /**
   * The unique identifier of the project for the Atlas cluster.
   *
   * @schema CfnCloudProviderSnapshotRestoreJobsProps#ProjectId
   */
  readonly projectId: string;

  /**
   * The name of the Atlas cluster whose snapshot you want to restore or you want to retrieve restore jobs.
   *
   * @schema CfnCloudProviderSnapshotRestoreJobsProps#ClusterName
   */
  readonly clusterName: string;

  /**
   * Type of restore job to create.
   *
   * @schema CfnCloudProviderSnapshotRestoreJobsProps#DeliveryType
   */
  readonly deliveryType?: string;

  /**
   * One or more URLs for the compressed snapshot files for manual download. Only visible if deliveryType is download.
   *
   * @schema CfnCloudProviderSnapshotRestoreJobsProps#DeliveryUrl
   */
  readonly deliveryUrl?: string[];

  /**
   * Indicates whether the restore job was canceled.
   *
   * @schema CfnCloudProviderSnapshotRestoreJobsProps#Cancelled
   */
  readonly cancelled?: boolean;

  /**
   * UTC ISO 8601 formatted point in time when Atlas created the restore job.
   *
   * @schema CfnCloudProviderSnapshotRestoreJobsProps#CreatedAt
   */
  readonly createdAt?: string;

  /**
   * Indicates whether the restore job expired.
   *
   * @schema CfnCloudProviderSnapshotRestoreJobsProps#Expired
   */
  readonly expired?: boolean;

  /**
   * UTC ISO 8601 formatted point in time when the restore job expires.
   *
   * @schema CfnCloudProviderSnapshotRestoreJobsProps#ExpiresAt
   */
  readonly expiresAt?: string;

  /**
   * UTC ISO 8601 formatted point in time when the restore job completed.
   *
   * @schema CfnCloudProviderSnapshotRestoreJobsProps#FinishedAt
   */
  readonly finishedAt?: string;

  /**
   * Timestamp in ISO 8601 date and time format in UTC when the snapshot associated to snapshotId was taken.
   *
   * @schema CfnCloudProviderSnapshotRestoreJobsProps#Timestamp
   */
  readonly timestamp?: string;

  /**
   * Unique identifier of the source snapshot ID of the restore job.
   *
   * @schema CfnCloudProviderSnapshotRestoreJobsProps#SnapshotId
   */
  readonly snapshotId?: string;

  /**
   * One or more links to sub-resources and/or related resources.
   *
   * @schema CfnCloudProviderSnapshotRestoreJobsProps#Links
   */
  readonly links?: CfnCloudProviderSnapshotRestoreJobsPropsLinks[];

  /**
   * If you performed a Point-in-Time restores at a time specified by a timestamp from the oplog, oplogTs indicates the timestamp used.
   *
   * @schema CfnCloudProviderSnapshotRestoreJobsProps#OpLogTs
   */
  readonly opLogTs?: string;

  /**
   * If you performed a Point-in-Time restores at a time specified by a Unix time in seconds since epoch, pointInTimeUTCSeconds indicates the Unix time used.
   *
   * @schema CfnCloudProviderSnapshotRestoreJobsProps#PointInTimeUtcSeconds
   */
  readonly pointInTimeUtcSeconds?: number;

  /**
   * Name of the target Atlas project of the restore job. Only visible if deliveryType is automated.
   *
   * @schema CfnCloudProviderSnapshotRestoreJobsProps#TargetProjectId
   */
  readonly targetProjectId?: string;

  /**
   * Name of the target Atlas cluster to which the restore job restores the snapshot. Only visible if deliveryType is automated.
   *
   * @schema CfnCloudProviderSnapshotRestoreJobsProps#TargetClusterName
   */
  readonly targetClusterName?: string;

  /**
   * @schema CfnCloudProviderSnapshotRestoreJobsProps#ApiKeys
   */
  readonly apiKeys: ApiKeyDefinition;

}

/**
 * Converts an object of type 'CfnCloudProviderSnapshotRestoreJobsProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnCloudProviderSnapshotRestoreJobsProps(obj: CfnCloudProviderSnapshotRestoreJobsProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'ProjectId': obj.projectId,
    'ClusterName': obj.clusterName,
    'DeliveryType': obj.deliveryType,
    'DeliveryUrl': obj.deliveryUrl?.map(y => y),
    'Cancelled': obj.cancelled,
    'CreatedAt': obj.createdAt,
    'Expired': obj.expired,
    'ExpiresAt': obj.expiresAt,
    'FinishedAt': obj.finishedAt,
    'Timestamp': obj.timestamp,
    'SnapshotId': obj.snapshotId,
    'Links': obj.links?.map(y => toJson_CfnCloudProviderSnapshotRestoreJobsPropsLinks(y)),
    'OpLogTs': obj.opLogTs,
    'PointInTimeUtcSeconds': obj.pointInTimeUtcSeconds,
    'TargetProjectId': obj.targetProjectId,
    'TargetClusterName': obj.targetClusterName,
    'ApiKeys': toJson_ApiKeyDefinition(obj.apiKeys),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CfnCloudProviderSnapshotRestoreJobsPropsLinks
 */
export interface CfnCloudProviderSnapshotRestoreJobsPropsLinks {
  /**
   * @schema CfnCloudProviderSnapshotRestoreJobsPropsLinks#Rel
   */
  readonly rel?: string;

  /**
   * @schema CfnCloudProviderSnapshotRestoreJobsPropsLinks#Href
   */
  readonly href?: string;

}

/**
 * Converts an object of type 'CfnCloudProviderSnapshotRestoreJobsPropsLinks' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnCloudProviderSnapshotRestoreJobsPropsLinks(obj: CfnCloudProviderSnapshotRestoreJobsPropsLinks | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'Rel': obj.rel,
    'Href': obj.href,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema apiKeyDefinition
 */
export interface ApiKeyDefinition {
  /**
   * @schema apiKeyDefinition#PublicKey
   */
  readonly publicKey?: string;

  /**
   * @schema apiKeyDefinition#PrivateKey
   */
  readonly privateKey?: string;

}

/**
 * Converts an object of type 'ApiKeyDefinition' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ApiKeyDefinition(obj: ApiKeyDefinition | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'PublicKey': obj.publicKey,
    'PrivateKey': obj.privateKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * A CloudFormation `MongoDB::Atlas::CloudProviderSnapshotRestoreJobs`
 *
 * @cloudformationResource MongoDB::Atlas::CloudProviderSnapshotRestoreJobs
 * @stability external
 */
export class CfnCloudProviderSnapshotRestoreJobs extends cdk.CfnResource {
  /**
  * The CloudFormation resource type name for this resource class.
  */
  public static readonly CFN_RESOURCE_TYPE_NAME = 'MongoDB::Atlas::CloudProviderSnapshotRestoreJobs';

  /**
   * Resource props.
   */
  public readonly props: CfnCloudProviderSnapshotRestoreJobsProps;

  /**
   * Attribute `MongoDB::Atlas::CloudProviderSnapshotRestoreJobs.Id`
   */
  public readonly attrId: string;

  /**
   * Create a new `MongoDB::Atlas::CloudProviderSnapshotRestoreJobs`.
   *
   * @param scope - scope in which this resource is defined
   * @param id    - scoped id of the resource
   * @param props - resource properties
   */
  constructor(scope: constructs.Construct, id: string, props: CfnCloudProviderSnapshotRestoreJobsProps) {
    super(scope, id, { type: CfnCloudProviderSnapshotRestoreJobs.CFN_RESOURCE_TYPE_NAME, properties: toJson_CfnCloudProviderSnapshotRestoreJobsProps(props)! });

    this.props = props;

    this.attrId = cdk.Token.asString(this.getAtt('Id'));
  }
}