// Generated by cdk-import
import * as cdk from 'aws-cdk-lib';
import * as constructs from 'constructs';

/**
 * This resource allows to take one on-demand snapshot, get one or all cloud provider snapshot and delete one cloud provider snapshot.
 *
 * @schema CfnCloudProviderSnapshotsProps
 */
export interface CfnCloudProviderSnapshotsProps {
  /**
   * The unique identifier of the project for the Atlas cluster.
   *
   * @schema CfnCloudProviderSnapshotsProps#ProjectId
   */
  readonly projectId: string;

  /**
   * The name of the Atlas cluster that contains the snapshots you want to retrieve.
   *
   * @schema CfnCloudProviderSnapshotsProps#ClusterName
   */
  readonly clusterName: string;

  /**
   * Description of the on-demand snapshot.
   *
   * @schema CfnCloudProviderSnapshotsProps#Description
   */
  readonly description?: string;

  /**
   * The number of days that Atlas should retain the on-demand snapshot.
   *
   * @schema CfnCloudProviderSnapshotsProps#RetentionInDays
   */
  readonly retentionInDays?: number;

  /**
   * UTC ISO 8601, formatted point in time when Atlas took the snapshot.
   *
   * @schema CfnCloudProviderSnapshotsProps#CreatedAt
   */
  readonly createdAt?: Date;

  /**
   * Unique ID of the AWS KMS Customer Master Key used to encrypt the snapshot.
   *
   * @schema CfnCloudProviderSnapshotsProps#MasterKeyUuid
   */
  readonly masterKeyUuid?: string;

  /**
   * Version of the MongoDB server.
   *
   * @schema CfnCloudProviderSnapshotsProps#MongoVersion
   */
  readonly mongoVersion?: string;

  /**
   * Specified the type of snapshot.
   *
   * @schema CfnCloudProviderSnapshotsProps#SnapshotType
   */
  readonly snapshotType?: string;

  /**
   * Current status of the snapshot.
   *
   * @schema CfnCloudProviderSnapshotsProps#Status
   */
  readonly status?: string;

  /**
   * Specifies the size of the snapshot in bytes.
   *
   * @schema CfnCloudProviderSnapshotsProps#StorageSizeBytes
   */
  readonly storageSizeBytes?: number;

  /**
   * Specifies the type of cluster.
   *
   * @schema CfnCloudProviderSnapshotsProps#Type
   */
  readonly type?: string;

  /**
   * @schema CfnCloudProviderSnapshotsProps#ApiKeys
   */
  readonly apiKeys: ApiKeyDefinition;

}

/**
 * Converts an object of type 'CfnCloudProviderSnapshotsProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnCloudProviderSnapshotsProps(obj: CfnCloudProviderSnapshotsProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'ProjectId': obj.projectId,
    'ClusterName': obj.clusterName,
    'Description': obj.description,
    'RetentionInDays': obj.retentionInDays,
    'CreatedAt': obj.createdAt?.toISOString(),
    'MasterKeyUuid': obj.masterKeyUuid,
    'MongoVersion': obj.mongoVersion,
    'SnapshotType': obj.snapshotType,
    'Status': obj.status,
    'StorageSizeBytes': obj.storageSizeBytes,
    'Type': obj.type,
    'ApiKeys': toJson_ApiKeyDefinition(obj.apiKeys),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema apiKeyDefinition
 */
export interface ApiKeyDefinition {
  /**
   * @schema apiKeyDefinition#PublicKey
   */
  readonly publicKey?: string;

  /**
   * @schema apiKeyDefinition#PrivateKey
   */
  readonly privateKey?: string;

}

/**
 * Converts an object of type 'ApiKeyDefinition' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ApiKeyDefinition(obj: ApiKeyDefinition | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'PublicKey': obj.publicKey,
    'PrivateKey': obj.privateKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * A CloudFormation `MongoDB::Atlas::CloudProviderSnapshots`
 *
 * @cloudformationResource MongoDB::Atlas::CloudProviderSnapshots
 * @stability external
 */
export class CfnCloudProviderSnapshots extends cdk.CfnResource {
  /**
  * The CloudFormation resource type name for this resource class.
  */
  public static readonly CFN_RESOURCE_TYPE_NAME = 'MongoDB::Atlas::CloudProviderSnapshots';

  /**
   * Resource props.
   */
  public readonly props: CfnCloudProviderSnapshotsProps;

  /**
   * Attribute `MongoDB::Atlas::CloudProviderSnapshots.Id`
   */
  public readonly attrId: string;

  /**
   * Create a new `MongoDB::Atlas::CloudProviderSnapshots`.
   *
   * @param scope - scope in which this resource is defined
   * @param id    - scoped id of the resource
   * @param props - resource properties
   */
  constructor(scope: constructs.Construct, id: string, props: CfnCloudProviderSnapshotsProps) {
    super(scope, id, { type: CfnCloudProviderSnapshots.CFN_RESOURCE_TYPE_NAME, properties: toJson_CfnCloudProviderSnapshotsProps(props)! });

    this.props = props;

    this.attrId = cdk.Token.asString(this.getAtt('Id'));
  }
}