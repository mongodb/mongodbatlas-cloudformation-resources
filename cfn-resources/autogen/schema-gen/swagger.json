{
  "openapi": "3.0.1",
  "info": {
    "contact": {
      "name": "MongoDB Cloud Support",
      "url": "https://www.mongodb.com/support/get-started"
    },
    "description": "The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas.\nTo learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/).\nThis OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.\n\n# Authentication\n\n<!-- ReDoc-Inject: <security-definitions> -->",
    "license": {
      "name": "SSPL",
      "url": "https://www.mongodb.com/licensing/server-side-public-license"
    },
    "termsOfService": "https://www.mongodb.com/mongodb-management-service-terms-and-conditions",
    "title": "MongoDB Atlas Administration API",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://cloud.mongodb.com"
    }
  ],
  "tags": [
    {
      "description": "Returns access logs for authentication attempts made to MongoDB Cloud database deployments.",
      "name": "Access Tracking"
    },
    {
      "description": "Returns and edits the conditions that trigger alerts and how MongoDB Cloud notifies users. This collection remains under revision and may change. Refer to the legacy documentation for this collection in the following link.",
      "externalDocs": {
        "description": "Alert Configurations API Legacy Documentation",
        "url": "https://www.mongodb.com/docs/atlas/reference/api/alert-configurations/"
      },
      "name": "Alert Configurations"
    },
    {
      "description": "Returns and acknowledges alerts that MongoDB Cloud triggers based on the alert conditions that you define. This collection remains under revision and may change. Refer to the legacy documentation for this collection in the following link.",
      "externalDocs": {
        "description": "Alerts API Legacy Documentation",
        "url": "https://www.mongodb.com/docs/atlas/reference/api/alerts/"
      },
      "name": "Alerts"
    },
    {
      "description": "Returns, adds, edits, and removes Atlas Search indexes. Also returns and updates user-defined analyzers.",
      "name": "Atlas Search"
    },
    {
      "description": "Returns and edits database auditing settings for MongoDB Cloud projects.",
      "name": "Auditing"
    },
    {
      "description": "Returns, takes, and removes Cloud Backup snapshots.",
      "name": "Cloud Backups"
    },
    {
      "description": "Returns, adds, and removes Cloud Backup snapshot export buckets. Also returns and adds Cloud Backup export jobs.",
      "name": "Cloud Backup Export"
    },
    {
      "description": "Returns, starts, and cancels Cloud Backup restore jobs.",
      "name": "Cloud Backup Restore Jobs"
    },
    {
      "description": "Returns, edits, and removes Cloud Backup schedules.",
      "name": "Cloud Backup Schedule"
    },
    {
      "description": "Manages the Cloud Migration Service.",
      "name": "Cloud Migration Service"
    },
    {
      "description": "Returns, adds, authorizes, and removes AWS IAM roles in Atlas.",
      "name": "Cloud Provider Access"
    },
    {
      "description": "Returns, adds, edits, and removes database deployments.",
      "name": "Clusters"
    },
    {
      "description": "Returns and edits custom DNS configurations for Atlas database deployments on AWS.",
      "name": "Custom DNS for Atlas Clusters Deployed to AWS"
    },
    {
      "description": "Returns, adds, edits, and removes custom database user privilege roles.",
      "name": "Custom Database Roles"
    },
    {
      "description": "Returns, adds, edits, and removes database users.",
      "name": "Database Users"
    },
    {
      "description": "Returns, adds, edits, and removes Federated Database Instances.",
      "name": "Data Federation"
    },
    {
      "description": "Returns, adds, and removes all private endpoints for Federated Database Instances and Online Archives in the specified project.",
      "name": "Data Federation Private Networks"
    },
    {
      "description": "Returns and edits the Encryption at Rest using Customer Key Management configuration.",
      "name": "Encryption at Rest using Customer Key Management"
    },
    {
      "description": "Returns events. This collection remains under revision and may change. Refer to the legacy documentation for this collection in the following link.",
      "externalDocs": {
        "description": "Events API Legacy Documentation",
        "url": "https://www.mongodb.com/docs/atlas/reference/api/events/"
      },
      "name": "Events"
    },
    {
      "description": "Returns, adds, edits, and removes federation-related features such as role mappings and connected organization configurations.",
      "name": "Federated Authentication"
    },
    {
      "description": "Returns, adds, and removes Global Cluster managed namespaces and custom zone mappings.",
      "name": "Global Clusters"
    },
    {
      "description": "Returns invoices.",
      "name": "Invoices"
    },
    {
      "description": "Returns, edits, verifies, and removes LDAP configurations.",
      "name": "LDAP Configuration"
    },
    {
      "description": "Returns, removes, and edits the expiration date of Legacy Backup snapshots.",
      "name": "Legacy Backup Snapshots"
    },
    {
      "description": "Returns and adds restore jobs for database deployments that use Legacy Backups.",
      "name": "Legacy Backup Restore Jobs"
    },
    {
      "description": "Returns Legacy Backup Checkpoint metadata. Checkpoints serve as additional restore points for sharded clusters at points in time between regular snapshots.",
      "name": "Legacy Backup Checkpoints"
    },
    {
      "description": "Returns and edits Legacy Backup snapshot schedules.",
      "name": "Legacy Backup Snapshot Schedule"
    },
    {
      "description": "Returns, edits, and removes maintenance windows.",
      "name": "Maintenance Windows"
    },
    {
      "description": "Returns, adds, and edits MongoDB Cloud users.",
      "name": "MongoDB Cloud Users"
    },
    {
      "description": "Returns database deployment monitoring and logging data.",
      "name": "Monitoring and Logs"
    },
    {
      "description": "Returns, adds, edits, or removes multi-cloud clusters.",
      "name": "Multi-Cloud Clusters"
    },
    {
      "description": "Returns, adds, edits, and removes network peering containers and peering connections.",
      "name": "Network Peering"
    },
    {
      "description": "Returns, adds, edits, and removes network peering connections.",
      "name": "Network Peering Connections"
    },
    {
      "description": "Returns, adds, edits, and removes network peering containers.",
      "name": "Network Peering Containers"
    },
    {
      "description": "Returns, adds, edits, or removes an online archive.",
      "name": "Online Archive"
    },
    {
      "description": "Returns, adds, and edits organizational units in MongoDB Cloud.",
      "name": "Organizations"
    },
    {
      "description": "Returns suggested indexes and slow query data for a database deployment. Also enables or disables MongoDB Cloud-managed slow operation thresholds.",
      "name": "Performance Advisor"
    },
    {
      "description": "Returns, adds, edits, and removes private endpoint services.",
      "name": "Private Endpoint Services"
    },
    {
      "description": "Returns, adds, edits, and removes access tokens to use the MongoDB Cloud API. MongoDB Cloud applies these keys to organizations. These resources can return, assign, or revoke use of these keys within a specified project.",
      "name": "Programmatic API Keys"
    },
    {
      "description": "Returns, adds, edits, and removes network access limits to database deployments in MongoDB Cloud.",
      "name": "Project IP Access List"
    },
    {
      "description": "Returns, adds, and edits collections of clusters and users in MongoDB Cloud.",
      "name": "Projects"
    },
    {
      "description": "Creates one index to a database deployment in a rolling manner.",
      "name": "Rolling Index"
    },
    {
      "description": "Returns details that describe the MongoDB Cloud build and the access token that requests this resource. This starts the MongoDB Cloud API.",
      "name": "Root"
    },
    {
      "description": "Returns, adds, edits, and removes serverless instances.",
      "name": "Serverless Instances"
    },
    {
      "description": "Returns, adds, edits, and removes private endpoints for serverless instances. To learn more, see the Atlas Administration API tab on the following tutorial.",
      "externalDocs": {
        "description": "Set Up a Private Endpoint for a Serverless Instance Tutorial",
        "url": "https://dochub.mongodb.org/core/serverless-private-endpoint"
      },
      "name": "Serverless Private Endpoints"
    },
    {
      "description": "Returns and adds restore jobs for shared-tier database deployments.",
      "name": "Shared-Tier Restore Jobs"
    },
    {
      "description": "Returns and requests to download shared-tier database deployment snapshots.",
      "name": "Shared-Tier Snapshots"
    },
    {
      "description": "Returns, adds, edits, or removes teams.",
      "name": "Teams"
    },
    {
      "description": "Returns, adds, edits, and removes third-party service integration configurations. MongoDB Cloud sends alerts to each third-party service that you configure.",
      "name": "Third-Party Service Integrations"
    },
    {
      "description": "Returns, edits, and removes user-managed X.509 configurations. Also returns and generates MongoDB Cloud-managed X.509 certificates for database users. The following resources help manage database users who authenticate using X.509 certificates. You can manage these X.509 certificates or let MongoDB Cloud do it for you. If MongoDB Cloud manages your certificates, it also manages your Certificate Authority and can generate certificates for your database users. No additional X.509 configuration is required. If you manage your certificates, you must provide a Certificate Authority and generate certificates for your database users.",
      "externalDocs": {
        "description": "Self-Managed X.509 Certificates",
        "url": "https://www.mongodb.com/docs/atlas/security-self-managed-x509/"
      },
      "name": "X.509 Authentication for Database Users"
    }
  ],
  "paths": {
    "/api/atlas/v1.0/groups": {
      "get": {
        "description": "Returns details about all projects. Projects group clusters into logical collections that support an application environment, workload, or both. Each project can have its own users, teams, security, and alert settings. To use this resource, the requesting API Key must have the Read Write role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAllProjects",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAtlasGroupView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Projects",
        "tags": [
          "Projects"
        ]
      },
      "post": {
        "description": "Creates one project. Projects group clusters into logical collections that support an application environment, workload, or both. Each project can have its own users, teams, security, and alert settings. To use this resource, the requesting API Key must have the Read Write role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "createOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the MongoDB Cloud user to whom to grant the Project Owner role on the specified project. If you set this parameter, it overrides the default value of the oldest Organization Owner. ",
            "in": "query",
            "name": "projectOwnerId",
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasGroupView"
              }
            }
          },
          "description": "Creates one project.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasGroupView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Create One Project",
        "tags": [
          "Projects"
        ]
      }
    },
    "/api/atlas/v1.0/groups/byName/{groupName}": {
      "get": {
        "description": "Returns details about the specified project. Projects group clusters into logical collections that support an application environment, workload, or both. Each project can have its own users, teams, security, and alert settings. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOneProjectUsingItsName",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies this project. ",
            "in": "path",
            "name": "groupName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasGroupView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Project using Its Name",
        "tags": [
          "Projects"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}": {
      "delete": {
        "description": "Removes the specified project. Projects group clusters into logical collections that support an application environment, workload, or both. Each project can have its own users, teams, security, and alert settings. To use this resource, the requesting API Key must have the Project Owner role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "removeOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Remove One Project",
        "tags": [
          "Projects"
        ]
      },
      "get": {
        "description": "Returns details about the specified project. Projects group clusters into logical collections that support an application environment, workload, or both. Each project can have its own users, teams, security, and alert settings. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasGroupView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Project",
        "tags": [
          "Projects"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/accessList": {
      "get": {
        "description": "Returns all access list entries from the specified project's IP access list. Each entry in the project's IP access list contains either one IP address or one CIDR-notated block of IP addresses. MongoDB Cloud only allows client connections to the cluster from entries in the project's IP access list. To use this resource, the requesting API Key must have the Project Read Only or Project Charts Admin roles. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "IP access list",
          "url": "https://docs.atlas.mongodb.com/security/ip-access-list/#std-label-access-list"
        },
        "operationId": "returnProjectIpAccessList",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedNetworkAccessView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return Project IP Access List",
        "tags": [
          "Project IP Access List"
        ]
      },
      "post": {
        "description": "Adds one or more access list entries to the specified project. MongoDB Cloud only allows client connections to the cluster from entries in the project's IP access list. Write each entry as either one IP address or one CIDR-notated block of IP addresses. To use this resource, the requesting API Key must have the Project Atlas Admin or Project Charts Admin roles. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "IP access list",
          "url": "https://docs.atlas.mongodb.com/security/ip-access-list/#std-label-access-list"
        },
        "operationId": "addEntriesToProjectIpAccessList",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ApiAtlasNetworkPermissionEntryView"
                }
              }
            }
          },
          "description": "One or more access list entries to add to the specified project.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedNetworkAccessView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Add Entries to Project IP Access List",
        "tags": [
          "Project IP Access List"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/accessList/{entryValue}": {
      "delete": {
        "description": "Removes one access list entry from the specified project's IP access list. Each entry in the project's IP access list contains one IP address, one CIDR-notated block of IP addresses, or one AWS Security Group ID. MongoDB Cloud only allows client connections to the cluster from entries in the project's IP access list. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "IP access list",
          "url": "https://docs.atlas.mongodb.com/security/ip-access-list/#std-label-access-list"
        },
        "operationId": "removeOneEntryFromOneProjectIpAccessList",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Access list entry that you want to remove from the project's IP access list. This value can use one of the following: one AWS security group ID, one IP address, or one CIDR block of addresses. For CIDR blocks that use a subnet mask, replace the forward slash (`/`) with its URL-encoded value (`%2F`). When you remove an entry from the IP access list, existing connections from the removed address or addresses may remain open for a variable amount of time. The amount of time it takes MongoDB Cloud to close the connection depends upon several factors, including:\n\n- how your application established the connection,\n- how MongoDB Cloud or the driver using the address behaves, and\n- which protocol (like TCP or UDP) the connection uses.",
            "in": "path",
            "name": "entryValue",
            "required": true,
            "schema": {
              "type": "string",
              "example": "IPv4: 192.0.2.0%2F24 or IPv6: 2001:db8:85a3:8d3:1319:8a2e:370:7348 or IPv4 CIDR: 198.51.100.0%2f24 or IPv6 CIDR: 2001:db8::%2f58 or AWS SG: sg-903004f8",
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\\:){7}[0-9a-f]{1,4}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\\:){1,6}\\:(%2[fF][0-9]{1,3})|(sg\\-[a-f0-9]{8})?$"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Remove One Entry from One Project IP Access List",
        "tags": [
          "Project IP Access List"
        ]
      },
      "get": {
        "description": "Returns one access list entry from the specified project's IP access list. The project's IP access list entry contains either one IP address or one CIDR-notated block of IP addresses. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "IP access list",
          "url": "https://docs.atlas.mongodb.com/security/ip-access-list/#std-label-access-list"
        },
        "operationId": "returnOneProjectIpAccessListEntry",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Access list entry that you want to return from the project's IP access list. This value can use one of the following: one AWS security group ID, one IP address, or one CIDR block of addresses. For CIDR blocks that use a subnet mask, replace the forward slash (`/`) with its URL-encoded value (`%2F`).",
            "in": "path",
            "name": "entryValue",
            "required": true,
            "schema": {
              "type": "string",
              "example": "IPv4: 192.0.2.0%2F24 or IPv6: 2001:db8:85a3:8d3:1319:8a2e:370:7348 or IPv4 CIDR: 198.51.100.0%2f24 or IPv6 CIDR: 2001:db8::%2f58 or AWS SG: sg-903004f8",
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\\:){7}[0-9a-f]{1,4}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\\:){1,6}\\:(%2[fF][0-9]{1,3})|(sg\\-[a-f0-9]{8})?$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasNetworkPermissionEntryView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Project IP Access List Entry",
        "tags": [
          "Project IP Access List"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/accessList/{entryValue}/status": {
      "get": {
        "description": "Returns the status of one project IP access list entry. This resource checks if the provided project IP access list entry applies to all cloud providers serving clusters from the specified project.",
        "operationId": "getAtlasNetworkPermissionEntryStatus",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Network address or cloud provider security construct that identifies which project access list entry to be verified.",
            "in": "path",
            "name": "entryValue",
            "required": true,
            "schema": {
              "type": "string",
              "example": "IPv4: 192.0.2.0%2F24 or IPv6: 2001:db8:85a3:8d3:1319:8a2e:370:7348 or IPv4 CIDR: 198.51.100.0%2f24 or IPv6 CIDR: 2001:db8::%2f58 or AWS SG: sg-903004f8",
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\\:){7}[0-9a-f]{1,4}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\\:){1,6}\\:(%2[fF][0-9]{1,3})|(sg\\-[a-f0-9]{8})?$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasNetworkPermissionEntryStatusView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return Status of One Project IP Access List Entry",
        "tags": [
          "Project IP Access List"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/auditLog": {
      "get": {
        "description": "Returns the auditing configuration for the specified project. The auditing configuration defines the events that MongoDB Cloud records in the audit log. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOneAuditingConfigurationForOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasAuditLogView"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return the Auditing Configuration for One Project",
        "tags": [
          "Auditing"
        ]
      },
      "patch": {
        "description": "Updates the auditing configuration for the specified project. The auditing configuration defines the events that MongoDB Cloud records in the audit log. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "updateAuditingConfigurationForOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasAuditLogView"
              }
            }
          },
          "description": "Updated auditing configuration for the specified project.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasAuditLogView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Update Auditing Configuration for One Project",
        "tags": [
          "Auditing"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/awsCustomDNS": {
      "get": {
        "description": "Returns the custom DNS configuration for AWS clusters in the specified project. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOneCustomDnsConfigurationForAtlasClustersOnAws",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AWSCustomDNSEnabledView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Custom DNS Configuration for Atlas Clusters on AWS",
        "tags": [
          "Custom DNS for Atlas Clusters Deployed to AWS"
        ]
      },
      "patch": {
        "description": "Enables or disables the custom DNS configuration for AWS clusters in the specified project. Enable custom DNS if you use AWS VPC peering and use your own DNS servers. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "toggleOneStateOfOneCustomDnsConfigurationForAtlasClustersOnAws",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AWSCustomDNSEnabledView"
              }
            }
          },
          "description": "Enables or disables the custom DNS configuration for AWS clusters in the specified project.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AWSCustomDNSEnabledView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Toggle State of One Custom DNS Configuration for Atlas Clusters on AWS",
        "tags": [
          "Custom DNS for Atlas Clusters Deployed to AWS"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/backup/exportBuckets": {
      "get": {
        "description": "Returns all AWS S3 buckets associated with the specified project. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAllAwsS3BucketsUsedForCloudBackupSnapshotExports",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedBackupSnapshotExportBucketView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All AWS S3 Buckets Used for Cloud Backup Snapshot Exports",
        "tags": [
          "Cloud Backup Export"
        ]
      },
      "post": {
        "description": "Grants MongoDB Cloud access to the specified AWS S3 bucket. This enables this bucket to receive Atlas Cloud Backup snapshots. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "grantAccessToAwsS3BucketForCloudBackupSnapshotExports",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasDiskBackupSnapshotAWSExportBucketView"
              }
            }
          },
          "description": "Grants MongoDB Cloud access to the specified AWS S3 bucket.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasDiskBackupSnapshotAWSExportBucketView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Grant Access to AWS S3 Bucket for Cloud Backup Snapshot Exports",
        "tags": [
          "Cloud Backup Export"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/backup/exportBuckets/{exportBucketId}": {
      "delete": {
        "description": "Revoke MongoDB Cloud access to the specified AWS S3 bucket. This prevents this bucket to receive Atlas Cloud Backup snapshots. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "revokeAccessToAwsS3BucketForCloudBackupSnapshotExports",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Unique string that identifies the AWS S3 bucket to which you export your snapshots.",
            "in": "path",
            "name": "exportBucketId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^((?!xn--)(?!.*-s3alias)[a-z0-9][a-z0-9-]{1,61}[a-z0-9])$"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Revoke Access to AWS S3 Bucket for Cloud Backup Snapshot Exports",
        "tags": [
          "Cloud Backup Export"
        ]
      },
      "get": {
        "description": "Returns one AWS S3 bucket associated with the specified project. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOneAwsS3BucketUsedForCloudBackupSnapshotExports",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Unique string that identifies the AWS S3 bucket to which you export your snapshots.",
            "in": "path",
            "name": "exportBucketId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^((?!xn--)(?!.*-s3alias)[a-z0-9][a-z0-9-]{1,61}[a-z0-9])$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasDiskBackupSnapshotAWSExportBucketView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One AWS S3 Bucket Used for Cloud Backup Snapshot Exports",
        "tags": [
          "Cloud Backup Export"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/cloudProviderAccess": {
      "get": {
        "description": "Returns all Amazon Web Services (AWS) Identity and Access Management (IAM) roles with access to the specified project. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAllCloudProviderAccessRoles",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasCloudProviderAccessView"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Cloud Provider Access Roles",
        "tags": [
          "Cloud Provider Access"
        ]
      },
      "post": {
        "description": "Creates one Amazon Web Services (AWS) Identity and Access Management (IAM) role. Some MongoDB Cloud features use AWS IAM roles for authentication. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.\n\nAfter a successful request to this API endpoint, you can add the **atlasAWSAccountArn** and **atlasAssumedRoleExternalId** values to the trust policy in your AWS console to create an IAM Assumed Amazon Resource Name (ARN).",
        "externalDocs": {
          "description": "Set Up Unified AWS Access",
          "url": "https://www.mongodb.com/docs/atlas/security/set-up-unified-aws-access/#std-label-set-up-unified-aws-access"
        },
        "operationId": "createOneCloudProviderAccessRole",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AWS"
              }
            }
          },
          "description": "Creates one AWS IAM role.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AWS"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Create One Cloud Provider Access Role",
        "tags": [
          "Cloud Provider Access"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/cloudProviderAccess/{cloudProvider}/{roleId}": {
      "delete": {
        "description": "Revokes access to the specified project for the specified AWS IAM role. To use this resource,the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "deauthorizeOneCloudProviderAccessRole",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cloud provider of the role to deauthorize.",
            "in": "path",
            "name": "cloudProvider",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "AWS"
              ]
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the role.",
            "in": "path",
            "name": "roleId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Deauthorize One Cloud Provider Access Role",
        "tags": [
          "Cloud Provider Access"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/cloudProviderAccess/{roleId}": {
      "patch": {
        "description": "Grants access to the specified project for the specified Amazon Web Services (AWS) Identity and Access Management (IAM) role. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Set Up Unified AWS Access",
          "url": "https://www.mongodb.com/docs/atlas/security/set-up-unified-aws-access/#std-label-set-up-unified-aws-access"
        },
        "operationId": "authorizeOneCloudProviderAccessRole",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the role.",
            "in": "path",
            "name": "roleId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AWS"
              }
            }
          },
          "description": "Grants access to the specified project for the specified AWS IAM role.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AWS"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Authorize One Cloud Provider Access Role",
        "tags": [
          "Cloud Provider Access"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters": {
      "get": {
        "description": "Returns the details for all clusters in the specific project to which you have access. Clusters contain a group of hosts that maintain the same data set. The response does not include multi-cloud clusters. To return multi-cloud clusters, use Get All Advanced Clusters. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAllClusters",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedLegacyClusterView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Clusters in One Project",
        "tags": [
          "Clusters"
        ]
      },
      "post": {
        "description": "Creates one cluster in the specific project. Clusters contain a group of hosts that maintain the same data set. This resource does not create multi-cloud clusters. To create a multi-cloud cluster, use Create One Advanced Cluster. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "createOneCluster",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasLegacyClusterDescriptionView"
              }
            }
          },
          "description": "Details to create for one cluster in the specified project.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasLegacyClusterDescriptionView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "402": {
            "$ref": "#/components/responses/paymentRequired"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          }
        },
        "summary": "Create One Cluster",
        "tags": [
          "Clusters"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters/provider/regions": {
      "get": {
        "description": "Returns the list of regions available for the specified cloud provider at the specified tier. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAllCloudProviderRegions",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Cloud providers whose regions to retrieve. When you specify multiple providers, the response can return only tiers and regions that support multi-cloud clusters.",
            "in": "query",
            "name": "providers",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Cluster tier for which to retrieve the regions.",
            "in": "query",
            "name": "tier",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiAtlasProviderRegionsView"
                  }
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Cloud Provider Regions",
        "tags": [
          "Clusters"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters/tenantUpgrade": {
      "post": {
        "description": "Upgrade a shared-tier cluster in the specified project. To use this resource, the requesting API key must have the Project Cluster Manager role. This resource doesn't require the API key to have an Access List.",
        "operationId": "upgradeOneTenantCluster",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasLegacyClusterDescriptionView"
              }
            }
          },
          "description": "Details of the tenant upgrade in the specified project.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasLegacyClusterDescriptionView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "402": {
            "$ref": "#/components/responses/paymentRequired"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Upgrade One Shared-tier Cluster",
        "tags": [
          "Clusters"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters/{clusterName}/backup/exports": {
      "get": {
        "description": "Returns all Cloud Backup snapshot export jobs associated with the specified Atlas cluster. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAllCloudBackupSnapshotExportJobs",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiAtlasDiskBackupExportJobView"
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Cloud Backup Snapshot Export Jobs",
        "tags": [
          "Cloud Backup Export"
        ]
      },
      "post": {
        "description": "Exports one backup snapshot for dedicated Atlas cluster using Cloud Backups to an AWS bucket. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "createOneCloudBackupSnapshotExportJob",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasDiskBackupExportJobRequestView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasDiskBackupExportJobView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Create One Cloud Backup Snapshot Export Job",
        "tags": [
          "Cloud Backup Export"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters/{clusterName}/backup/exports/{exportId}": {
      "get": {
        "description": "Returns one Cloud Backup snapshot export job associated with the specified Atlas cluster. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOneCloudBackupSnapshotExportJob",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          },
          {
            "description": "Unique string that identifies the AWS S3 bucket to which you export your snapshots.",
            "in": "path",
            "name": "exportId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasDiskBackupExportJobView"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Cloud Backup Snapshot Export Job",
        "tags": [
          "Cloud Backup Export"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters/{clusterName}/backup/restoreJobs": {
      "get": {
        "deprecated": true,
        "description": "Returns all cloud backup restore jobs for one cluster from the specified project. To use this resource, the requesting API Key must have the Project Atlas Admin role and an entry for the project access list.",
        "operationId": "returnAllRestoreJobsForOneCluster",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster with the restore jobs you want to return.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedCloudBackupRestoreJobView"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Restore Jobs for One Cluster",
        "tags": [
          "Cloud Backup Restore Jobs"
        ]
      },
      "post": {
        "deprecated": true,
        "description": "Restores one snapshot of one cluster from the specified project. To use this resource, the requesting API Key must have the Project Atlas Admin role and an entry for the project access list.",
        "operationId": "restoreOneSnapshotOfOneCluster",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasDiskBackupRestoreJobView"
              }
            }
          },
          "description": "Restores one snapshot of one cluster from the specified project.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasDiskBackupRestoreJobView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Restore One Snapshot of One Cluster",
        "tags": [
          "Cloud Backup Restore Jobs"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters/{clusterName}/backup/restoreJobs/{restoreJobId}": {
      "delete": {
        "deprecated": true,
        "description": "Cancels one cloud backup restore job of one cluster from the specified project. To use this resource, the requesting API Key must have the Project Atlas Admin role and an entry for the project access list.",
        "operationId": "cancelOneRestoreJobOfOneCluster",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the restore job to remove.",
            "in": "path",
            "name": "restoreJobId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "405": {
            "$ref": "#/components/responses/methodNotAllowed"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Cancel One Restore Job of One Cluster",
        "tags": [
          "Cloud Backup Restore Jobs"
        ]
      },
      "get": {
        "deprecated": true,
        "description": "Returns one cloud backup restore job for one cluster from the specified project. To use this resource, the requesting API Key must have the Project Atlas Admin role and an entry for the project access list.",
        "operationId": "returnOneRestoreJobOfOneCluster",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster with the restore jobs you want to return.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the restore job to return.",
            "in": "path",
            "name": "restoreJobId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasDiskBackupRestoreJobView"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Restore Job of One Cluster",
        "tags": [
          "Cloud Backup Restore Jobs"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters/{clusterName}/backup/schedule": {
      "delete": {
        "deprecated": true,
        "description": "Removes all cloud backup schedules for the specified cluster. This schedule defines when MongoDB Cloud takes scheduled snapshots and how long it stores those snapshots. To use this resource, the requesting API Key must have the Project Atlas Admin role and an entry for the project access list.",
        "operationId": "removeAllCloudBackupSchedules",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasDiskBackupSnapshotScheduleView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Remove All Cloud Backup Schedules",
        "tags": [
          "Cloud Backup Schedule"
        ]
      },
      "get": {
        "description": "Returns the cloud backup schedule for the specified cluster within the specified project. This schedule defines when MongoDB Cloud takes scheduled snapshots and how long it stores those snapshots. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOneCloudBackupSchedule",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasDiskBackupSnapshotScheduleView"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Cloud Backup Schedule",
        "tags": [
          "Cloud Backup Schedule"
        ]
      },
      "patch": {
        "deprecated": true,
        "description": "Updates the cloud backup schedule for one cluster within the specified project. This schedule defines when MongoDB Cloud takes scheduled snapshots and how long it stores those snapshots. To use this resource, the requesting API Key must have the Project Atlas Admin role and an entry for the project access list.",
        "operationId": "updateCloudBackupBackupPolicyForOneCluster",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasDiskBackupSnapshotScheduleView"
              }
            }
          },
          "description": "Updates the cloud backup schedule for one cluster within the specified project.\n\n**Note**: In the request body, provide only the fields that you want to update.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasDiskBackupSnapshotScheduleView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Update Cloud Backup Schedule for One Cluster",
        "tags": [
          "Cloud Backup Schedule"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters/{clusterName}/backup/snapshots": {
      "get": {
        "description": "Returns all snapshots of one cluster from the specified project. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAllReplicaSetCloudBackups",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedCloudBackupReplicaSetView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Replica Set Cloud Backups",
        "tags": [
          "Cloud Backups"
        ]
      },
      "post": {
        "deprecated": true,
        "description": "Takes one on-demand snapshot for the specified cluster. To use this resource, the requesting API Key must have the Project Atlas Admin role and an entry for the project access list.",
        "operationId": "takeOneOn-DemandSnapshot",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasDiskBackupOnDemandSnapshotRequestView"
              }
            }
          },
          "description": "Takes one on-demand snapshot.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Database type to be backed up.",
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ApiAtlasDiskBackupReplicaSetView"
                    },
                    {
                      "$ref": "#/components/schemas/ApiAtlasDiskBackupShardedClusterSnapshotView"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Take One On-Demand Snapshot",
        "tags": [
          "Cloud Backups"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters/{clusterName}/backup/snapshots/shardedCluster/{snapshotId}": {
      "delete": {
        "deprecated": true,
        "description": "Removes one snapshot of one sharded cluster from the specified project. To use this resource, the requesting API Key must have the Project Atlas Admin role and an entry for the project access list.",
        "operationId": "removeOneShardedClusterCloudBackup",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the desired snapshot.",
            "in": "path",
            "name": "snapshotId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Remove One Sharded Cluster Cloud Backup",
        "tags": [
          "Cloud Backups"
        ]
      },
      "get": {
        "description": "Returns one snapshot of one sharded cluster from the specified project. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOneShardedClusterCloudBackup",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the desired snapshot.",
            "in": "path",
            "name": "snapshotId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasDiskBackupShardedClusterSnapshotView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Sharded Cluster Cloud Backup",
        "tags": [
          "Cloud Backups"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters/{clusterName}/backup/snapshots/shardedClusters": {
      "get": {
        "description": "Returns all snapshots of one sharded cluster from the specified project. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAllShardedClusterCloudBackups",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedCloudBackupShardedClusterSnapshotView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Sharded Cluster Cloud Backups",
        "tags": [
          "Cloud Backups"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters/{clusterName}/backup/snapshots/{snapshotId}": {
      "delete": {
        "deprecated": true,
        "description": "Removes rhe specified snapshot. To use this resource, the requesting API Key must have the Project Atlas Admin role and an entry for the project access list.",
        "operationId": "removeOneReplicaSetCloudBackup",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the desired snapshot.",
            "in": "path",
            "name": "snapshotId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Remove One Replica Set Cloud Backup",
        "tags": [
          "Cloud Backups"
        ]
      },
      "get": {
        "description": "Returns one snapshot from the specified cluster. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOneReplicaSetCloudBackup",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the desired snapshot.",
            "in": "path",
            "name": "snapshotId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasDiskBackupReplicaSetView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Replica Set Cloud Backup",
        "tags": [
          "Cloud Backups"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters/{clusterName}/backup/tenant/download": {
      "post": {
        "description": "Requests one snapshot for the specified shared cluster. This resource returns a `snapshotURL` that you can use to download the snapshot. This `snapshotURL` remains active for four hours after you make the request. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "downloadOneM2OrM5ClusterSnapshot",
        "parameters": [
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasTenantRestoreView"
              }
            }
          },
          "description": "Snapshot to be downloaded.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasTenantRestoreView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Download One M2 or M5 Cluster Snapshot",
        "tags": [
          "Shared-Tier Snapshots"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters/{clusterName}/backup/tenant/restore": {
      "post": {
        "description": "Restores the specified cluster. MongoDB Cloud limits which clusters can be the target clusters of a restore. The target cluster can't use encryption at rest, run a major release MongoDB version different than the snapshot, or receive client requests during restores. MongoDB Cloud deletes all existing data on the target cluster prior to the restore operation. To use this resource, the requesting API Key must have the Atlas Project Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "createOneRestoreJobFromOneM2OrM5Cluster",
        "parameters": [
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasTenantRestoreView"
              }
            }
          },
          "description": "The restore job details.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasTenantRestoreView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Create One Restore Job from One M2 or M5 Cluster",
        "tags": [
          "Shared-Tier Restore Jobs"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters/{clusterName}/backup/tenant/restores": {
      "get": {
        "description": "Returns all restore jobs for the specified M2 or M5 cluster. Restore jobs restore a cluster using a snapshot. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAllRestoreJobsForOneM2OrM5Cluster",
        "parameters": [
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedTenantRestoreView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Restore Jobs for One M2 or M5 Cluster",
        "tags": [
          "Shared-Tier Restore Jobs"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters/{clusterName}/backup/tenant/restores/{restoreId}": {
      "get": {
        "description": "Returns the specified restore job. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOneRestoreJobForOneM2OrM5Cluster",
        "parameters": [
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the restore job to return.",
            "in": "path",
            "name": "restoreId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasTenantRestoreView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Restore Job for One M2 or M5 Cluster",
        "tags": [
          "Shared-Tier Restore Jobs"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters/{clusterName}/backup/tenant/snapshots": {
      "get": {
        "description": "Returns details for all snapshots for the specified shared cluster. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAllSnapshotsForOneM2OrM5Cluster",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedTenantSnapshotView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Snapshots for One M2 or M5 Cluster",
        "tags": [
          "Shared-Tier Snapshots"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters/{clusterName}/backup/tenant/snapshots/{snapshotId}": {
      "get": {
        "description": "Returns details for one snapshot for the specified shared cluster. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOneSnapshotForOneM2OrM5Cluster",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the desired snapshot.",
            "in": "path",
            "name": "snapshotId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasTenantSnapshotView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Snapshot for One M2 or M5 Cluster",
        "tags": [
          "Shared-Tier Snapshots"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters/{clusterName}/backupCheckpoints": {
      "get": {
        "deprecated": true,
        "description": "Returns all legacy backup checkpoints for one cluster in the specified project. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAllLegacyBackupCheckpoints",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster that contains the checkpoints that you want to return.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiAtlasCheckpointView"
                  }
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Legacy Backup Checkpoints",
        "tags": [
          "Legacy Backup Checkpoints"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters/{clusterName}/backupCheckpoints/{checkpointId}": {
      "get": {
        "deprecated": true,
        "description": "Returns one legacy backup checkpoint for one cluster in the specified project. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOneLegacyBackupCheckpoint",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the checkpoint.",
            "in": "path",
            "name": "checkpointId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          },
          {
            "description": "Human-readable label that identifies the cluster that contains the checkpoints that you want to return.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasCheckpointView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Legacy Backup Checkpoint",
        "tags": [
          "Legacy Backup Checkpoints"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters/{clusterName}/fts/analyzers": {
      "get": {
        "description": "Returns all Atlas Search custom analyzers that the specified cluster uses in the specified project. Custom analyzers define the operations to perform to index a field. To use this resource, the requesting API Key must have the Project Data Access Read Write role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Custom Analyzers",
          "url": "https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/"
        },
        "operationId": "returnAllUser-DefinedAnalyzersForOneCluster",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Name of the cluster that contains the collection with one or more Atlas Search indexes.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiAtlasFTSAnalyzersViewManual"
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All User-Defined Analyzers for One Cluster",
        "tags": [
          "Atlas Search"
        ]
      },
      "put": {
        "description": "Updates one or more Atlas Search custom analyzers on the specified cluster. Custom analyzers define the operations to perform to index a field. To use this resource, the requesting API Key must have the Project Data Access Admin role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Custom Analyzers",
          "url": "https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/"
        },
        "operationId": "updateAllUser-DefinedAnalyzersForOneCluster",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Name of the cluster that contains the collection with one or more Atlas Search indexes.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ApiAtlasFTSAnalyzersViewManual"
                }
              }
            }
          },
          "description": "Updates one or more Atlas Search custom analyzers on the specified cluster.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiAtlasFTSAnalyzersViewManual"
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Update All User-Defined Analyzers for One Cluster",
        "tags": [
          "Atlas Search"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters/{clusterName}/fts/indexes": {
      "post": {
        "description": "Creates one Atlas Search index on the specified collection. Atlas Search indexes define the fields on which to create the index and the analyzers to use when creating the index. Only clusters running MongoDB v4.2 or later can use Atlas Search. To use this resource, the requesting API Key must have the Project Data Access Admin role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Atlas Search Indexes",
          "url": "https://docs.atlas.mongodb.com/reference/atlas-search/index-definitions/"
        },
        "operationId": "createOneAtlasSearchIndex",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Name of the cluster that contains the collection on which to create an Atlas Search index.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasFTSIndexView"
              }
            }
          },
          "description": "Creates one Atlas Search index on the specified collection.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasFTSIndexView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Create One Atlas Search Index",
        "tags": [
          "Atlas Search"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters/{clusterName}/fts/indexes/{databaseName}/{collectionName}": {
      "get": {
        "description": "Returns all Atlas Search indexes on the specified collection. Atlas Search indexes contain the indexed fields and the analyzers used to create the indexes. To use this resource, the requesting API Key must have the Project Data Access Read Write role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Atlas Search Indexes",
          "url": "https://docs.atlas.mongodb.com/reference/atlas-search/index-definitions/"
        },
        "operationId": "returnAllAtlasSearchIndexesForOneCollection",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Name of the cluster that contains the collection with one or more Atlas Search indexes.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          },
          {
            "description": "Name of the collection that contains one or more Atlas Search indexes.",
            "in": "path",
            "name": "collectionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Human-readable label that identifies the database that contains the collection with one or more Atlas Search indexes.",
            "in": "path",
            "name": "databaseName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiAtlasFTSIndexView"
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Atlas Search Indexes for One Collection",
        "tags": [
          "Atlas Search"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters/{clusterName}/fts/indexes/{indexId}": {
      "delete": {
        "description": "Removes one Atlas Search index that you identified with its unique ID. To use this resource, the requesting API Key must have the Project Data Access Admin role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Atlas Search Indexes",
          "url": "https://docs.atlas.mongodb.com/reference/atlas-search/index-definitions/"
        },
        "operationId": "removeOneAtlasSearchIndex",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Name of the cluster that contains the database and collection with one or more Application Search indexes.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the Atlas Search index. Use the [Get All Atlas Search Indexes for a Collection API](https://docs.atlas.mongodb.com/reference/api/fts-indexes-get-all/) endpoint to find the IDs of all Atlas Search indexes.",
            "in": "path",
            "name": "indexId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Remove One Atlas Search Index",
        "tags": [
          "Atlas Search"
        ]
      },
      "get": {
        "description": "Returns one Atlas Search index in the specified project. You identify this index using its unique ID. Atlas Search index contains the indexed fields and the analyzers used to create the index. To use this resource, the requesting API Key must have the Project Data Access Read Write role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Atlas Search Indexes",
          "url": "https://docs.atlas.mongodb.com/reference/atlas-search/index-definitions/"
        },
        "operationId": "returnOneAtlasSearchIndex",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Name of the cluster that contains the collection with one or more Atlas Search indexes.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the Application Search [index](https://docs.atlas.mongodb.com/reference/atlas-search/index-definitions/). Use the [Get All Application Search Indexes for a Collection API](https://docs.atlas.mongodb.com/reference/api/fts-indexes-get-all/) endpoint to find the IDs of all Application Search indexes.",
            "in": "path",
            "name": "indexId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasFTSIndexView"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Atlas Search Index",
        "tags": [
          "Atlas Search"
        ]
      },
      "patch": {
        "description": "Updates one Atlas Search index that you identified with its unique ID. Atlas Search indexes define the fields on which to create the index and the analyzers to use when creating the index. To use this resource, the requesting API Key must have the Project Data Access Admin role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Atlas Search Indexes",
          "url": "https://docs.atlas.mongodb.com/reference/atlas-search/index-definitions/"
        },
        "operationId": "updateOneAtlasSearchIndex",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Name of the cluster that contains the collection whose Atlas Search index to update.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the Atlas Search [index](https://docs.atlas.mongodb.com/reference/atlas-search/index-definitions/). Use the [Get All Atlas Search Indexes for a Collection API](https://docs.atlas.mongodb.com/reference/api/fts-indexes-get-all/) endpoint to find the IDs of all Atlas Search indexes.",
            "in": "path",
            "name": "indexId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasFTSIndexView"
              }
            }
          },
          "description": "Details to update on the Atlas Search index.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasFTSIndexView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Update One Atlas Search Index",
        "tags": [
          "Atlas Search"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters/{clusterName}/globalWrites": {
      "get": {
        "description": "Returns all managed namespaces and custom zone mappings for the specified global cluster. Managed namespaces identify collections using the database name, the dot separator, and the collection name. Custom zone mappings matches ISO 3166-2 location codes to zones in your global cluster. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Global Clusters",
          "url": "https://www.mongodb.com/docs/atlas/global-clusters/"
        },
        "operationId": "returnAllGlobalClustersData",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies this global cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasGeoShardingView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Global Clusters Data",
        "tags": [
          "Global Clusters"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters/{clusterName}/globalWrites/customZoneMapping": {
      "delete": {
        "description": "Removes all custom zone mappings for the specified global cluster. A custom zone mapping matches one ISO 3166-2 location code to a zone in your global cluster. Removing the custom zone mappings restores the default mapping. By default, MongoDB Cloud maps each location code to the closest geographical zone. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Global Clusters",
          "url": "https://www.mongodb.com/docs/atlas/global-clusters/"
        },
        "operationId": "removeAllCustomZoneMappingsFromOneGlobalCluster",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies this global cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasGeoShardingView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Remove All Custom Zone Mappings from One Global Cluster",
        "tags": [
          "Global Clusters"
        ]
      },
      "post": {
        "description": "Add one or more custom zone mappings to the specified global cluster. A custom zone mapping matches one ISO 3166-2 location code to a zone in your global cluster. By default, MongoDB Cloud maps each location code to the closest geographical zone. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Global Clusters",
          "url": "https://www.mongodb.com/docs/atlas/global-clusters/"
        },
        "operationId": "addOneCustomZoneMappingToOneGlobalCluster",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies this global cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasCustomZoneMappingsView"
              }
            }
          },
          "description": "Custom zone mapping to add to the specified global cluster.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasGeoShardingView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Add Custom Zone Mappings to One Global Cluster",
        "tags": [
          "Global Clusters"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters/{clusterName}/globalWrites/managedNamespaces": {
      "delete": {
        "description": "Removes one managed namespace within the specified global cluster. A managed namespace identifies a collection using the database name, the dot separator, and the collection name. Deleting a managed namespace does not remove the associated collection or data. To use this resource, the requesting API Key must have the Project Data Access Admin role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Global Clusters",
          "url": "https://www.mongodb.com/docs/atlas/global-clusters/"
        },
        "operationId": "removeOneManagedNamespaceFromOneGlobalCluster",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies this global cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          },
          {
            "description": "Human-readable label that identifies the database that contains the collection.",
            "in": "query",
            "name": "db",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Human-readable label that identifies the collection associated with the managed namespace.",
            "in": "query",
            "name": "collection",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasGeoShardingView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Remove One Managed Namespace from One Global Cluster",
        "tags": [
          "Global Clusters"
        ]
      },
      "post": {
        "description": "Creates one managed namespace within the specified global cluster. A managed namespace identifies a collection using the database name, the dot separator, and the collection name. To use this resource, the requesting API Key must have the Project Data Access Admin role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Global Clusters",
          "url": "https://www.mongodb.com/docs/atlas/global-clusters/"
        },
        "operationId": "createOneManagedNamespaceInOneGlobalCluster",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies this global cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasManagedNamespacesView"
              }
            }
          },
          "description": "Managed namespace to create within the specified global cluster.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasGeoShardingView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "405": {
            "$ref": "#/components/responses/methodNotAllowed"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Create One Managed Namespace in One Global Cluster",
        "tags": [
          "Global Clusters"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters/{clusterName}/index": {
      "post": {
        "description": "Creates an index on the cluster identified by its name in a rolling manner. Creating the index in this way allows index builds on one replica set member as a standalone at a time, starting with the secondary members. Creating indexes in this way requires at least one replica set election. To use this resource, the requesting API Key must have the Project Data Access Admin role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Rolling Index Builds on Replica Sets",
          "url": "https://docs.mongodb.com/manual/tutorial/build-indexes-on-replica-sets/"
        },
        "operationId": "createOneRollingIndex",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster on which MongoDB Cloud creates an index.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiIndexRequestView"
              }
            }
          },
          "description": "Rolling index to create on the specified cluster.",
          "required": true
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Create One Rolling Index",
        "tags": [
          "Rolling Index"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters/{clusterName}/onlineArchives": {
      "get": {
        "description": "Returns details of all online archives. This archive stores data from one cluster within one project. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Online Archive",
          "url": "https://docs.atlas.mongodb.com/online-archive/manage-online-archive/#std-label-manage-online-archive"
        },
        "operationId": "returnAllOnlineArchivesForOneCluster",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster that contains the collection for which you want to return the online archives.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedOnlineArchiveView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Online Archives for One Cluster",
        "tags": [
          "Online Archive"
        ]
      },
      "post": {
        "description": "Creates one online archive. This archive stores data from one cluster within one project. To use this resource, the requesting API Key must have the Project Data Access Admin role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Online Archive",
          "url": "https://docs.atlas.mongodb.com/online-archive/manage-online-archive/#std-label-manage-online-archive"
        },
        "operationId": "createOneOnlineArchive",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster that contains the collection for which you want to create one online archive.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasOnlineArchiveView"
              }
            }
          },
          "description": "Creates one online archive.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasOnlineArchiveView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Create One Online Archive",
        "tags": [
          "Online Archive"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters/{clusterName}/onlineArchives/queryLogs.gz": {
      "get": {
        "description": "Downloads query logs for the specified online archive. To use this resource, the requesting API Key must have the Project Data Access Read Only or higher role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Online Archive",
          "url": "https://docs.atlas.mongodb.com/online-archive/manage-online-archive/#std-label-manage-online-archive"
        },
        "operationId": "downloadOnlineArchiveQueryLogs",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Date and time that specifies the starting point for the range of log messages to return. This resource expresses this value in the number of seconds that have elapsed since the [UNIX epoch](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "startDate",
            "schema": {
              "type": "number",
              "example": 1636481348,
              "minimum": 1199145600
            }
          },
          {
            "description": "Date and time that specifies the end point for the range of log messages to return. This resource expresses this value in the number of seconds that have elapsed since the [UNIX epoch](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "endDate",
            "schema": {
              "type": "number",
              "example": 1636481348,
              "minimum": 1199145600
            }
          },
          {
            "description": "Human-readable label that identifies the cluster that contains the collection for which you want to return the query logs from one online archive.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          },
          {
            "description": "Flag that indicates whether to download logs for queries against your online archive only or both your online archive and cluster.",
            "in": "query",
            "name": "archiveOnly",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasOnlineArchiveView"
              }
            }
          },
          "description": "Downloads query logs for the specified online archive.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/gzip": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "description": "This resource downloads a compressed log file to your current working directory. You can specify its name using the `--output` option or use the default filename using the `-OJ` option. The default filename varies based on whether you download logs for queries of your online archive only or both your online archive and cluster."
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Download Online Archive Query Logs",
        "tags": [
          "Online Archive"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters/{clusterName}/onlineArchives/{archiveId}": {
      "delete": {
        "description": "Removes one online archive. This archive stores data from one cluster within one project. To use this resource, the requesting API Key must have the Project Data Access Admin role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Online Archive",
          "url": "https://docs.atlas.mongodb.com/online-archive/manage-online-archive/#std-label-manage-online-archive"
        },
        "operationId": "removeOneOnlineArchive",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the online archive to delete.",
            "in": "path",
            "name": "archiveId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          },
          {
            "description": "Human-readable label that identifies the cluster that contains the collection from which you want to remove an online archive.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Remove One Online Archive",
        "tags": [
          "Online Archive"
        ]
      },
      "get": {
        "description": "Returns one online archive for one cluster. This archive stores data from one cluster within one project. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Online Archive",
          "url": "https://docs.atlas.mongodb.com/online-archive/manage-online-archive/#std-label-manage-online-archive"
        },
        "operationId": "returnOneOnlineArchive",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the online archive to return.",
            "in": "path",
            "name": "archiveId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          },
          {
            "description": "Human-readable label that identifies the cluster that contains the specified collection from which Application created the online archive.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasOnlineArchiveView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Online Archive",
        "tags": [
          "Online Archive"
        ]
      },
      "patch": {
        "description": "Updates, pauses, or resumes one online archive. This archive stores data from one cluster within one project. To use this resource, the requesting API Key must have the Project Data Access Admin role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Online Archive",
          "url": "https://docs.atlas.mongodb.com/online-archive/manage-online-archive/#std-label-manage-online-archive"
        },
        "operationId": "updateOneOnlineArchive",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the online archive to update.",
            "in": "path",
            "name": "archiveId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          },
          {
            "description": "Human-readable label that identifies the cluster that contains the specified collection from which Application created the online archive.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasOnlineArchiveView"
              }
            }
          },
          "description": "Updates, pauses, or resumes one online archive.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasOnlineArchiveView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Update One Online Archive",
        "tags": [
          "Online Archive"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters/{clusterName}/processArgs": {
      "get": {
        "description": "Returns the advanced configuration details for one cluster in the specified project. Clusters contain a group of hosts that maintain the same data set. Advanced configuration details include the read/write concern, index and oplog limits, and other database settings.\n\nShared-tier clusters can't use this resource.\n\nTo use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Global Clusters",
          "url": "https://www.mongodb.com/docs/atlas/global-clusters/"
        },
        "operationId": "returnOneAdvancedConfigurationOptionsForOneCluster",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasClusterDescriptionProcessArgsView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Advanced Configuration Options for One Cluster",
        "tags": [
          "Clusters"
        ]
      },
      "patch": {
        "description": "Updates the advanced configuration details for one cluster in the specified project. Clusters contain a group of hosts that maintain the same data set. Advanced configuration details include the read/write concern, index and oplog limits, and other database settings. To use this resource, the requesting API Key must have the Project Cluster Manager role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Global Clusters",
          "url": "https://www.mongodb.com/docs/atlas/global-clusters/"
        },
        "operationId": "updateAdvancedConfigurationOptionsForOneCluster",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasClusterDescriptionProcessArgsView"
              }
            }
          },
          "description": "Advanced configuration details to add for one cluster in the specified project.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasClusterDescriptionProcessArgsView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Update Advanced Configuration Options for One Cluster",
        "tags": [
          "Clusters"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters/{clusterName}/restartPrimaries": {
      "post": {
        "description": "Starts a failover test for the specified cluster in the specified project. Clusters contain a group of hosts that maintain the same data set. A failover test checks how MongoDB Cloud handles the failure of the cluster's primary node. During the test, MongoDB Cloud shuts down the primary node and elects a new primary. To use this resource, the requesting API Key must have the Project Cluster Manager role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "testFailoverForOneCluster",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/noBody"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Test Failover for One Cluster",
        "tags": [
          "Clusters"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters/{clusterName}/restoreJobs": {
      "get": {
        "deprecated": true,
        "description": "Returns all legacy backup restore jobs for one cluster in the specified project. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAllLegacyBackupRestoreJobs",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the batch of restore jobs to return. Timestamp in ISO 8601 date and time format in UTC when creating a restore job for a sharded cluster, Application creates a separate job for each shard, plus another for the config host. Each of these jobs comprise one batch. A restore job for a replica set can't be part of a batch.",
            "in": "query",
            "name": "batchId",
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          },
          {
            "description": "Human-readable label that identifies the cluster with the snapshot you want to return.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedRestoreJobView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Legacy Backup Restore Jobs",
        "tags": [
          "Legacy Backup Restore Jobs"
        ]
      },
      "post": {
        "deprecated": true,
        "description": "Restores one legacy backup for one cluster in the specified project. To use this resource, the requesting API Key must have the Project Atlas Admin role and an entry for the project access list.",
        "operationId": "createOneLegacyBackupRestoreJob",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster with the snapshot you want to return.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRestoreJobView"
              }
            }
          },
          "description": "Legacy backup to restore to one cluster in the specified project.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedRestoreJobView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Create One Legacy Backup Restore Job",
        "tags": [
          "Legacy Backup Restore Jobs"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters/{clusterName}/restoreJobs/{jobId}": {
      "get": {
        "deprecated": true,
        "description": "Returns one legacy backup restore job for one cluster in the specified project. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOneLegacyBackupRestoreJob",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster with the snapshot you want to return.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the restore job.",
            "in": "path",
            "name": "jobId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRestoreJobView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Legacy Backup Restore Job",
        "tags": [
          "Legacy Backup Restore Jobs"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters/{clusterName}/snapshotSchedule": {
      "get": {
        "deprecated": true,
        "description": "Returns the snapshot schedule for one cluster in the specified project. To use this resource, the requesting API Key must have the Project Read Only role.",
        "operationId": "returnOneSnapshotSchedule",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster with the snapshot you want to return.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasSnapshotScheduleView"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Snapshot Schedule",
        "tags": [
          "Legacy Backup Snapshot Schedule"
        ]
      },
      "patch": {
        "deprecated": true,
        "description": "Update the snapshot schedule for one cluster in the specified project. To use this resource, the requesting API Key must have the Project Atlas Admin role.",
        "operationId": "updateSnapshotScheduleForOneCluster",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the cluster with the snapshot you want to return.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasSnapshotScheduleView"
              }
            }
          },
          "description": "Update the snapshot schedule for one cluster in the specified project.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasSnapshotScheduleView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Update Snapshot Schedule for One Cluster",
        "tags": [
          "Legacy Backup Snapshot Schedule"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters/{clusterName}/snapshots": {
      "get": {
        "deprecated": true,
        "description": "Returns all legacy backup snapshots for one cluster in the specified project. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAllLegacyBackupSnapshots",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedSnapshotView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Legacy Backup Snapshots",
        "tags": [
          "Legacy Backup Snapshots"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters/{clusterName}/snapshots/{snapshotId}": {
      "delete": {
        "deprecated": true,
        "description": "Removes one legacy backup snapshot for one cluster in the specified project. To use this resource, the requesting API Key must have the Project Atlas Admin role and an entry for the project access list.",
        "operationId": "removeOneLegacyBackupSnapshot",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the desired snapshot.",
            "in": "path",
            "name": "snapshotId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Remove One Legacy Backup Snapshot",
        "tags": [
          "Legacy Backup Snapshots"
        ]
      },
      "get": {
        "deprecated": true,
        "description": "Returns one legacy backup snapshot for one cluster in the specified project. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOneLegacyBackupSnapshot",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the desired snapshot.",
            "in": "path",
            "name": "snapshotId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSnapshotView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Legacy Backup Snapshot",
        "tags": [
          "Legacy Backup Snapshots"
        ]
      },
      "patch": {
        "deprecated": true,
        "description": "Changes the expiration date for one legacy backup snapshot for one cluster in the specified project. To use this resource, the requesting API Key must have the Project Atlas Admin role and an entry for the project access list.",
        "operationId": "changeOneLegacyBackupSnapshotExpiration",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the desired snapshot.",
            "in": "path",
            "name": "snapshotId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiSnapshotView"
              }
            }
          },
          "description": "Changes One Legacy Backup Snapshot Expiration.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSnapshotView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Change One Legacy Backup Snapshot Expiration",
        "tags": [
          "Legacy Backup Snapshots"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters/{clusterName}/status": {
      "get": {
        "description": "Returns the status of all changes that you made to the specified cluster in the specified project. Use this resource to check the progress MongoDB Cloud has made in processing your changes. The response does not include the deployment of new dedicated clusters. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOneStatusOfAllClusterOperations",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasClusterStatusView"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return Status of All Cluster Operations",
        "tags": [
          "Clusters"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters/{hostName}/logs/{logName}.gz": {
      "get": {
        "description": "Returns a compressed (.gz) log file that contains a range of log messages for the specified host for the specified project. To use this resource, the requesting API Key must have the Project Atlas Admin or Project Data Access Read Write roles. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Global Clusters",
          "url": "https://www.mongodb.com/docs/atlas/global-clusters/"
        },
        "operationId": "downloadLogsForOneClusterHostInOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Date and time when the period specifies the inclusive ending point for the range of log messages to retrieve. This parameter expresses its value in the number of seconds that have elapsed since the UNIX epoch.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "type": "number",
              "minimum": 1199145600
            }
          },
          {
            "description": "Human-readable label that identifies the host that stores the log files that you want to download.",
            "in": "path",
            "name": "hostName",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?$"
            }
          },
          {
            "description": "Human-readable label that identifies the log file that you want to return. To return audit logs, enable *Database Auditing* for the specified project.",
            "in": "path",
            "name": "logName",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "mongodb",
                "mongos",
                "mongodb-audit-log",
                "mongos-audit-log"
              ],
              "externalDocs": {
                "description": "Set up Database Auditing",
                "url": "https://docs.atlas.mongodb.com/database-auditing/"
              }
            }
          },
          {
            "description": "Date and time when the period specifies the inclusive starting point for the range of log messages to retrieve. This parameter expresses its value in the number of seconds that have elapsed since the UNIX epoch.",
            "in": "query",
            "name": "startDate",
            "schema": {
              "type": "number",
              "minimum": 1199145600
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "description": "Compressed (.gz) log file that contains a range of log messages for the specified host for the specified project"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Download Logs for One Cluster Host in One Project",
        "tags": [
          "Monitoring and Logs"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/clusters/{name}": {
      "delete": {
        "description": "Removes one cluster in the specific project. Clusters contain a group of hosts that maintain the same data set. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Global Clusters",
          "url": "https://www.mongodb.com/docs/atlas/global-clusters/"
        },
        "operationId": "removeOneCluster",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Remove One Cluster",
        "tags": [
          "Clusters"
        ]
      },
      "get": {
        "description": "Returns the details for one cluster in the specified project. Clusters contain a group of hosts that maintain the same data set. The response does not include multi-cloud clusters. To return a multi-cloud cluster, use Get One Advanced Cluster. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOneCluster",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasLegacyClusterDescriptionView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Cluster in One Project",
        "tags": [
          "Clusters"
        ]
      },
      "patch": {
        "description": "Update the details for one cluster in the specified project. Clusters contain a group of hosts that maintain the same data set. This resource does not update multi-cloud clusters. To update a multi-cloud cluster, use Update One Advanced Cluster. To use this resource, the requesting API Key must have the Project Cluster Manager role.  This resource doesn't require the API Key to have an Access List.",
        "operationId": "updateConfigurationOfOneCluster",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasLegacyClusterDescriptionView"
              }
            }
          },
          "description": "Details to update for one cluster in the specified project.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasLegacyClusterDescriptionView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Update Configuration of One Cluster",
        "tags": [
          "Clusters"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/containers": {
      "get": {
        "description": "Returns details about all network peering containers in the specified project for the specified cloud provider. If you do not specify the cloud provider, MongoDB Cloud returns details about all network peering containers in the project for Amazon Web Services (AWS). To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAllNetworkPeeringContainersInOneProjectForOneCloudProvider",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Cloud service provider that serves the desired network peering containers.",
            "in": "query",
            "name": "providerName",
            "required": true,
            "schema": {
              "type": "string",
              "default": "AWS",
              "enum": [
                "AWS",
                "AZURE",
                "GCP"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedCloudProviderContainerView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Network Peering Containers in One Project for One Cloud Provider",
        "tags": [
          "Network Peering Containers"
        ]
      },
      "post": {
        "description": "Creates one new network peering container in the specified project. MongoDB Cloud can deploy Network Peering connections in a network peering container. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "createOneNewNetworkPeeringContainer",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasCloudProviderContainerView"
              }
            }
          },
          "description": "Creates one new network peering container in the specified project.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasCloudProviderContainerView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Create One New Network Peering Container",
        "tags": [
          "Network Peering Containers"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/containers/all": {
      "get": {
        "description": "Returns details about all network peering containers in the specified project. Network peering containers contain network peering connections. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAllNetworkPeeringContainersInOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedCloudProviderContainerView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Network Peering Containers in One Project",
        "tags": [
          "Network Peering Containers"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/containers/{containerId}": {
      "delete": {
        "description": "Removes one network peering container in the specified project. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "removeOneNetworkPeeringContainer",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the MongoDB Cloud network container that you want to remove.",
            "in": "path",
            "name": "containerId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2f3ed24096c4b70db8993cb7",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Remove One Network Peering Container",
        "tags": [
          "Network Peering Containers"
        ]
      },
      "get": {
        "description": "Returns details about one network peering container in one specified project. Network peering containers contain network peering connections. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOneNetworkPeeringContainer",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the MongoDB Cloud network container that you want to remove.",
            "in": "path",
            "name": "containerId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2f3ed24096c4b70db8993cb7",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasCloudProviderContainerView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Network Peering Container",
        "tags": [
          "Network Peering Containers"
        ]
      },
      "patch": {
        "description": "Updates the network details and labels of one specified network peering container in the specified project. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "updateOneNetworkPeeringContainer",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the MongoDB Cloud network container that you want to remove.",
            "in": "path",
            "name": "containerId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2f3ed24096c4b70db8993cb7",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasCloudProviderContainerView"
              }
            }
          },
          "description": "Updates the network details and labels of one specified network peering container in the specified project.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasCloudProviderContainerView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Update One Network Peering Container",
        "tags": [
          "Network Peering Containers"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/customDBRoles/roles": {
      "get": {
        "description": "Returns all custom roles for the specified project. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAllCustomRolesInOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiAtlasCustomDBRoleView"
                  }
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Custom Roles in One Project",
        "tags": [
          "Custom Database Roles"
        ]
      },
      "post": {
        "description": "Creates one custom role in the specified project. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "createOneCustomRole",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasCustomDBRoleView"
              }
            }
          },
          "description": "Creates one custom role in the specified project.",
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasCustomDBRoleView"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Create One Custom Role",
        "tags": [
          "Custom Database Roles"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/customDBRoles/roles/{roleName}": {
      "delete": {
        "description": "Removes one custom role from the specified project. You can't remove a custom role that would leave one or more child roles with no parent roles or actions. You also can't remove a custom role that would leave one or more database users without roles. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "removeOneCustomRoleFromOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the role for the request. This name must be unique for this custom role in this project.",
            "in": "path",
            "name": "roleName",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\b(?!xgen-)([0-9A-Za-z_\\-]+)\\b(?<!\\atlasAdmin|read|readWrite|dbAdmin|dbOwner|userAdmin|clusterAdmin|clusterManager|clusterMonitor|hostManager|backup|restore|readAnyDatabase|readWriteAnyDatabase|userAdminAnyDatabase|dbAdminAnyDatabase|root|__system)$"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Remove One Custom Role from One Project",
        "tags": [
          "Custom Database Roles"
        ]
      },
      "get": {
        "description": "Returns one custom role for the specified project. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOneCustomRoleInOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the role for the request. This name must be unique for this custom role in this project.",
            "in": "path",
            "name": "roleName",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\b(?!xgen-)([0-9A-Za-z_\\-]+)\\b(?<!\\atlasAdmin|read|readWrite|dbAdmin|dbOwner|userAdmin|clusterAdmin|clusterManager|clusterMonitor|hostManager|backup|restore|readAnyDatabase|readWriteAnyDatabase|userAdminAnyDatabase|dbAdminAnyDatabase|root|__system)$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasCustomDBRoleView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Custom Role in One Project",
        "tags": [
          "Custom Database Roles"
        ]
      },
      "patch": {
        "description": "Updates one custom role in the specified project. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "updateOneCustomRoleInOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the role for the request. This name must beunique for this custom role in this project.",
            "in": "path",
            "name": "roleName",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\b(?!xgen-)([0-9A-Za-z_\\-]+)\\b(?<!\\atlasAdmin|read|readWrite|dbAdmin|dbOwner|userAdmin|clusterAdmin|clusterManager|clusterMonitor|hostManager|backup|restore|readAnyDatabase|readWriteAnyDatabase|userAdminAnyDatabase|dbAdminAnyDatabase|root|__system)$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasCustomDBRoleView"
              }
            }
          },
          "description": "Updates one custom role in the specified project.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasCustomDBRoleView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Update One Custom Role in One Project",
        "tags": [
          "Custom Database Roles"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/dataFederation": {
      "get": {
        "description": "Returns the details of all Federated Databases in the specified project. To use this resource, the requesting API Key must have the Project Read Only or higher role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAllFederatedDatabasesInOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NDSDataLakeTenantView"
                  }
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Federated Databases in One Project",
        "tags": [
          "Data Federation"
        ]
      },
      "post": {
        "description": "Creates one Federated Database in the specified project. To use this resource, the requesting API Key must have the Project Atlas Admin or Project Charts Admin roles. This resource doesn't require the API Key to have an Access List.",
        "operationId": "createOneFederatedDatabaseInOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasDataLakeTenantView"
              }
            }
          },
          "description": "Details to create one Federated Database in the specified project.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NDSDataLakeTenantView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Create One Federated Database in One Project",
        "tags": [
          "Data Federation"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/dataFederation/{tenantName}": {
      "delete": {
        "description": "Removes one Federated Database from the specified project. To use this resource, the requesting API Key must have the Project Atlas Admin or Project Charts Admin roles. This resource doesn't require the API Key to have an Access List.",
        "operationId": "removeOneFederatedDatabaseFromOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the Federated Database to remove.",
            "in": "path",
            "name": "tenantName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Remove One Federated Database from One Project",
        "tags": [
          "Data Federation"
        ]
      },
      "get": {
        "description": "Returns the details of one Federated Database within the specified project. To use this resource, the requesting API Key must have the Project Read Only or Project Charts Admin roles. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOneFederatedDatabaseInOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the Federated Database to return.",
            "in": "path",
            "name": "tenantName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasDataLakeTenantView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Federated Database in One Project",
        "tags": [
          "Data Federation"
        ]
      },
      "patch": {
        "description": "Updates the details of one Federated Database in the specified project. To use this resource, the requesting API Key must have the Project Atlas Admin or higher role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "updateOneFederatedDatabaseInOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the Federated Database to update.",
            "in": "path",
            "name": "tenantName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Flag that indicates whether this request should check if the requesting IAM role can read from the S3 bucket. AWS checks if the role can list the objects in the bucket before writing to it. Some IAM roles only need write permissions. This flag allows you to skip that check.",
            "in": "query",
            "name": "skipRoleValidation",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasDataLakeTenantView"
              }
            }
          },
          "description": "Details of one Federated Database to update in the specified project.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasDataLakeTenantView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Update One Federated Database in One Project",
        "tags": [
          "Data Federation"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/dataFederation/{tenantName}/queryLogs.gz": {
      "get": {
        "description": "Downloads the query logs for the specified Federated Database. To use this resource, the requesting API Key must have the Project Atlas Admin or Project Data Access Read Write roles. This resource doesn't require the API Key to have an Access List.",
        "operationId": "downloadQueryLogsForOneFederatedDatabase",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Timestamp that specifies the end point for the range of log messages to download.  MongoDB Cloud expresses this timestamp in the number of seconds that have elapsed since the UNIX epoch.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "type": "number",
              "example": 1636481348,
              "pattern": "1199145600"
            }
          },
          {
            "description": "Timestamp that specifies the starting point for the range of log messages to download. MongoDB Cloud expresses this timestamp in the number of seconds that have elapsed since the UNIX epoch.",
            "in": "query",
            "name": "startDate",
            "schema": {
              "type": "number",
              "example": 1636466948,
              "pattern": "1199145600"
            }
          },
          {
            "description": "Human-readable label that identifies the Federated Database for which you want to download query logs.",
            "in": "path",
            "name": "tenantName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/gzip": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "description": "Compressed archive labeled `queryLogs.gz` downloads"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Download Query Logs for One Federated Database",
        "tags": [
          "Data Federation"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/databaseUsers": {
      "get": {
        "description": "Returns all database users that belong to the specified project. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAllDatabaseUsersFromOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedDatabaseUserView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Database Users from One Project",
        "tags": [
          "Database Users"
        ]
      },
      "post": {
        "description": "Creates one database user in the specified project. This MongoDB Cloud supports a maximum of 100 database users per project. If you require more than 100 database users on a project, contact [Support](https://cloud.mongodb.com/support). To use this resource, the requesting API Key must have the Project Atlas Admin or Project Charts Admin roles. This resource doesn't require the API Key to have an Access List.",
        "operationId": "createOneDatabaseUserInOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasDatabaseUserViewManual"
              }
            }
          },
          "description": "Creates one database user in the specified project.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasDatabaseUserViewManual"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Create One Database User in One Project",
        "tags": [
          "Database Users"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/databaseUsers/{databaseName}/{username}": {
      "delete": {
        "description": "Removes one database user from the specified project. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "removeOneDatabaseUserFromOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the database against which the database user authenticates. Database users must provide both a username and authentication database to log into MongoDB. If the user authenticates with AWS IAM, x.509, or LDAP, this value should be `$external`. If the user authenticates with SCRAM-SHA, this value should be `admin`.",
            "in": "path",
            "name": "databaseName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Human-readable label that represents the user that authenticates to MongoDB. The format of this label depends on the method of authentication:\n\n| Authentication Method | Parameter Needed | Parameter Value | username Format |\n|---|---|---|---|\n| AWS IAM | awsType | ROLE | <abbr title=\"Amazon Resource Name\">ARN</abbr> |\n| AWS IAM | awsType | USER | <abbr title=\"Amazon Resource Name\">ARN</abbr> |\n| x.509 | x509Type | CUSTOMER | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |\n| x.509 | x509Type | MANAGED | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |\n| LDAP | ldapAuthType | USER | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |\n| LDAP | ldapAuthType | GROUP | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |\n| SCRAM-SHA | awsType, x509Type, ldapAuthType | NONE | Alphanumeric string |\n",
            "in": "path",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string",
              "example": "SCRAM-SHA: dylan or AWS IAM: arn:aws:iam::123456789012:user/sales/enterprise/DylanBloggs orx.509 or LDAP: CN=Dylan Bloggs,OU=Enterprise,OU=Sales,DC=Example,DC=COM"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Remove One Database User from One Project",
        "tags": [
          "Database Users"
        ]
      },
      "get": {
        "description": "Returns one database user that belong to the specified project. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOneDatabaseUserFromOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the database against which the database user authenticates. Database users must provide both a username and authentication database to log into MongoDB. If the user authenticates with AWS IAM, x.509, or LDAP, this value should be `$external`. If the user authenticates with SCRAM-SHA, this value should be `admin`.",
            "in": "path",
            "name": "databaseName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Human-readable label that represents the user that authenticates to MongoDB. The format of this label depends on the method of authentication:\n\n| Authentication Method | Parameter Needed | Parameter Value | username Format |\n|---|---|---|---|\n| AWS IAM | awsType | ROLE | <abbr title=\"Amazon Resource Name\">ARN</abbr> |\n| AWS IAM | awsType | USER | <abbr title=\"Amazon Resource Name\">ARN</abbr> |\n| x.509 | x509Type | CUSTOMER | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |\n| x.509 | x509Type | MANAGED | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |\n| LDAP | ldapAuthType | USER | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |\n| LDAP | ldapAuthType | GROUP | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |\n| SCRAM-SHA | awsType, x509Type, ldapAuthType | NONE | Alphanumeric string |\n",
            "in": "path",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string",
              "example": "SCRAM-SHA: dylan or AWS IAM: arn:aws:iam::123456789012:user/sales/enterprise/DylanBloggs orx.509 or LDAP: CN=Dylan Bloggs,OU=Enterprise,OU=Sales,DC=Example,DC=COM"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasDatabaseUserViewManual"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Database User from One Project",
        "tags": [
          "Database Users"
        ]
      },
      "patch": {
        "description": "Updates one database user that belongs to the specified project. To use this resource, the requesting API Key must have the Project Atlas Admin or Project Charts Admin roles. This resource doesn't require the API Key to have an Access List.",
        "operationId": "updateOneDatabaseUserInOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the database against which the database user authenticates. Database users must provide both a username and authentication database to log into MongoDB. If the user authenticates with AWS IAM, x.509, or LDAP, this value should be `$external`. If the user authenticates with SCRAM-SHA, this value should be `admin`.",
            "in": "path",
            "name": "databaseName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Human-readable label that represents the user that authenticates to MongoDB. The format of this label depends on the method of authentication:\n\n| Authentication Method | Parameter Needed | Parameter Value | username Format |\n|---|---|---|---|\n| AWS IAM | awsType | ROLE | <abbr title=\"Amazon Resource Name\">ARN</abbr> |\n| AWS IAM | awsType | USER | <abbr title=\"Amazon Resource Name\">ARN</abbr> |\n| x.509 | x509Type | CUSTOMER | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |\n| x.509 | x509Type | MANAGED | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |\n| LDAP | ldapAuthType | USER | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |\n| LDAP | ldapAuthType | GROUP | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |\n| SCRAM-SHA | awsType, x509Type, ldapAuthType | NONE | Alphanumeric string |\n",
            "in": "path",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string",
              "example": "SCRAM-SHA: dylan or AWS IAM: arn:aws:iam::123456789012:user/sales/enterprise/DylanBloggs orx.509 or LDAP: CN=Dylan Bloggs,OU=Enterprise,OU=Sales,DC=Example,DC=COM"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasDatabaseUserViewManual"
              }
            }
          },
          "description": "Updates one database user that belongs to the specified project.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasDatabaseUserViewManual"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Update One Database User in One Project",
        "tags": [
          "Database Users"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/databaseUsers/{username}/certs": {
      "get": {
        "description": "Returns all unexpired X.509 certificates for the specified MongoDB user. This MongoDB user belongs to one project. Atlas manages these certificates and the MongoDB user. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAllX.509CertificatesAssignedToOneMongodbUser",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that represents the MongoDB database user account whose certificates you want to return.",
            "in": "path",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedUserCertView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All X.509 Certificates Assigned to One MongoDB User",
        "tags": [
          "X.509 Authentication for Database Users"
        ]
      },
      "post": {
        "description": "Generates one X.509 certificate for the specified MongoDB user. Atlas manages the certificate and MongoDB user that belong to one project. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.\n\nTo get MongoDB Cloud to generate a managed certificate for a database user, set `\"x509Type\" : \"MANAGED\"` on the desired MongoDB Database User.\n\nIf you are managing your own Certificate Authority (CA) in Self-Managed X.509 mode, you must generate certificates for database users using your own CA.",
        "externalDocs": {
          "description": "Self-Managed X.509",
          "url": "https://www.mongodb.com/docs/atlas/security-self-managed-x509/#std-label-self-managed-x509"
        },
        "operationId": "createOneX.509CertificateForOneMongodbUser",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that represents the MongoDB database user account for whom to create a certificate.",
            "in": "path",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasUserCertView"
              }
            }
          },
          "description": "Generates one X.509 certificate for the specified MongoDB user.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasUserCertView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Create One X.509 Certificate for One MongoDB User",
        "tags": [
          "X.509 Authentication for Database Users"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/dbAccessHistory/clusters/{clusterName}": {
      "get": {
        "description": "Returns the access logs of one cluster identified by the cluster's name. Access logs contain a list of authentication requests made against your cluster. You can't use this feature on tenant-tier clusters (M0, M2, M5). To use this resource, the requesting API Key must have the Project Monitoring Admin role.",
        "externalDocs": {
          "description": "Database Access History",
          "url": "https://docs.atlas.mongodb.com/access-tracking/"
        },
        "operationId": "returnDatabaseAccessHistoryForOneClusterUsingItsClusterName",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Flag that indicates whether the response returns the successful authentication attempts only.",
            "in": "query",
            "name": "authResult",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          },
          {
            "description": "Date and time when to stop retrieving database history. If you specify **end**, you must also specify **start**. This parameter uses the ISO 8601 timestamp format in UTC.",
            "in": "query",
            "name": "end",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "One Internet Protocol address that attempted to authenticate with the database.",
            "in": "query",
            "name": "ipAddress",
            "schema": {
              "type": "string",
              "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}\\:){7}[0-9a-f]{1,4}$"
            }
          },
          {
            "description": "Maximum number of lines from the log to return.",
            "in": "query",
            "name": "nLogs",
            "schema": {
              "type": "number",
              "default": 20000,
              "maximum": 20000,
              "minimum": 0
            }
          },
          {
            "description": "Date and time when MongoDB Cloud begins retrieving database history. If you specify **start**, you must also specify **end**. This parameter uses the ISO 8601 timestamp format in UTC.",
            "in": "query",
            "name": "start",
            "schema": {
              "type": "string",
              "format": "date-time",
              "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMongoDBAccessLogsListView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return Database Access History for One Cluster using Its Cluster Name",
        "tags": [
          "Access Tracking"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/dbAccessHistory/processes/{hostname}": {
      "get": {
        "description": "Returns the access logs of one cluster identified by the cluster's hostname. Access logs contain a list of authentication requests made against your clusters. You can't use this feature on tenant-tier clusters (M0, M2, M5). To use this resource, the requesting API Key must have the Project Monitoring Admin role.",
        "externalDocs": {
          "description": "Database Access History",
          "url": "https://docs.atlas.mongodb.com/access-tracking/"
        },
        "operationId": "returnDatabaseAccessHistoryForOneClusterUsingItsHostname",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Flag that indicates whether the response returns the successful authentication attempts only.",
            "in": "query",
            "name": "authResult",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Date and time when to stop retrieving database history. If you specify **end**, you must also specify **start**. This parameter uses the ISO 8601 timestamp format in UTC.",
            "in": "query",
            "name": "end",
            "schema": {
              "type": "string",
              "format": "date-time",
              "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$"
            }
          },
          {
            "description": "Fully qualified domain name or IP address of the MongoDB host that stores the log files that you want to download.",
            "in": "path",
            "name": "hostname",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "One Internet Protocol address that attempted to authenticate with the database.",
            "in": "query",
            "name": "ipAddress",
            "schema": {
              "type": "string",
              "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}\\:){7}[0-9a-f]{1,4}$"
            }
          },
          {
            "description": "Maximum number of lines from the log to return.",
            "in": "query",
            "name": "nLogs",
            "schema": {
              "type": "number",
              "default": 20000,
              "maximum": 20000,
              "minimum": 0
            }
          },
          {
            "description": "Date and time when MongoDB Cloud begins retrieving database history. If you specify **start**, you must also specify **end**. This parameter uses the ISO 8601 timestamp format in UTC.",
            "in": "query",
            "name": "start",
            "schema": {
              "type": "string",
              "format": "date-time",
              "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMongoDBAccessLogsListView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return Database Access History for One Cluster using Its Hostname",
        "tags": [
          "Access Tracking"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/encryptionAtRest": {
      "get": {
        "description": "Returns the configuration for encryption at rest using the keys you manage through your cloud provider. MongoDB Cloud encrypts all storage even if you don't use your own key management. This resource requires the requesting API Key to have the Project Atlas Admin role.\n\n**LIMITED TO M10 OR GREATER:** MongoDB Cloud limits this feature to dedicated cluster tiers of M10 and greater.",
        "operationId": "returnOneConfigurationForEncryptionAtRestUsingCustomer-ManagedKeysForOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasEncryptionAtRestView"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Configuration for Encryption at Rest using Customer-Managed Keys for One Project",
        "tags": [
          "Encryption at Rest using Customer Key Management"
        ]
      },
      "patch": {
        "description": "Updates the configuration for encryption at rest using the keys you manage through your cloud provider. MongoDB Cloud encrypts all storage even if you don't use your own key management. This resource requires the requesting API Key to have the Project Atlas Admin role.\n\n**LIMITED TO M10 OR GREATER:** MongoDB Cloud limits this feature to dedicated cluster tiers of M10 and greater.",
        "operationId": "updateConfigurationForEncryptionAtRestUsingCustomer-ManagedKeysForOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasEncryptionAtRestView"
              }
            }
          },
          "description": "Required parameters depend on whether someone has enabled Encryption at Rest using Customer Key Management:\n\nIf you have enabled Encryption at Rest using Customer Key Management (CMK), Atlas requires all of the parameters for the desired encryption provider.\n\n- To use AWS Key Management Service (KMS), MongoDB Cloud requires all the fields in the **awsKms** object.\n- To use Azure Key Vault, MongoDB Cloud requires all the fields in the **azureKeyVault** object.\n- To use Google Cloud Key Management Service (KMS), MongoDB Cloud requires all the fields in the **googleCloudKms** object.\n\nIf you enabled Encryption at Rest using Customer Key  Management, administrators can pass only the changed fields for the **awsKms**, **azureKeyVault**, or **googleCloudKms** object to update the configuration to this endpoint.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasEncryptionAtRestView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Update Configuration for Encryption at Rest using Customer-Managed Keys for One Project",
        "tags": [
          "Encryption at Rest using Customer Key Management"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/hosts/{processId}/fts/metrics": {
      "get": {
        "description": "Return all Atlas Search metric types available for one process in the specified project.",
        "operationId": "getFTSMetricTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/processIdAsHost"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiFTSMetricsView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Atlas Search Metric Types for One Process",
        "tags": [
          "Monitoring and Logs"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/hosts/{processId}/fts/metrics/indexes/{databaseName}/{collectionName}/measurements": {
      "get": {
        "description": "Returns the Atlas Search index metrics within the specified time range for one namespace in the specified process.",
        "operationId": "getFTSNamespaceIndexMeasurements",
        "parameters": [
          {
            "$ref": "#/components/parameters/processIdAsHost"
          },
          {
            "$ref": "#/components/parameters/databaseName"
          },
          {
            "$ref": "#/components/parameters/collectionName"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/granularity"
          },
          {
            "$ref": "#/components/parameters/period"
          },
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/end"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "description": "List that contains the measurements that MongoDB Atlas reports for the associated data series.",
            "in": "query",
            "name": "metrics",
            "required": true,
            "schema": {
              "type": "array",
              "description": "List that contains the measurements that MongoDB Atlas reports for the associated data series.",
              "items": {
                "type": "string",
                "enum": [
                  "INDEX_SIZE_ON_DISK",
                  "NUMBER_OF_DELETES",
                  "NUMBER_OF_ERROR_QUERIES",
                  "NUMBER_OF_GETMORE_COMMANDS",
                  "NUMBER_OF_INDEX_FIELDS",
                  "NUMBER_OF_INSERTS",
                  "NUMBER_OF_SUCCESS_QUERIES",
                  "NUMBER_OF_UPDATES",
                  "REPLICATION_LAG",
                  "TOTAL_NUMBER_OF_QUERIES"
                ]
              },
              "maxItems": 10,
              "uniqueItems": true
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMeasurementsIndexesView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Atlas Search Index Metrics for One Namespace",
        "tags": [
          "Monitoring and Logs"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/hosts/{processId}/fts/metrics/indexes/{databaseName}/{collectionName}/{indexName}/measurements": {
      "get": {
        "description": "Returns the Atlas Search metrics data series within the provided time range for one namespace and index name on the specified process.",
        "operationId": "getFTSIndexMeasurementsForNamespaceAndIndexName",
        "parameters": [
          {
            "$ref": "#/components/parameters/processIdAsHost"
          },
          {
            "$ref": "#/components/parameters/indexName"
          },
          {
            "$ref": "#/components/parameters/databaseName"
          },
          {
            "$ref": "#/components/parameters/collectionName"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/granularity"
          },
          {
            "$ref": "#/components/parameters/period"
          },
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/end"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "description": "List that contains the measurements that MongoDB Atlas reports for the associated data series.",
            "in": "query",
            "name": "metrics",
            "required": true,
            "schema": {
              "type": "array",
              "description": "List that contains the measurements that MongoDB Atlas reports for the associated data series.",
              "items": {
                "type": "string",
                "enum": [
                  "INDEX_SIZE_ON_DISK",
                  "NUMBER_OF_DELETES",
                  "NUMBER_OF_ERROR_QUERIES",
                  "NUMBER_OF_GETMORE_COMMANDS",
                  "NUMBER_OF_INDEX_FIELDS",
                  "NUMBER_OF_INSERTS",
                  "NUMBER_OF_SUCCESS_QUERIES",
                  "NUMBER_OF_UPDATES",
                  "REPLICATION_LAG",
                  "TOTAL_NUMBER_OF_QUERIES"
                ]
              },
              "maxItems": 10,
              "uniqueItems": true
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMeasurementsIndexesView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return Atlas Search Metrics for One Index in One Specified Namespace",
        "tags": [
          "Monitoring and Logs"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/hosts/{processId}/fts/metrics/measurements": {
      "get": {
        "description": "Returns the Atlas Search hardware and status data series within the provided time range for one process in the specified project.",
        "operationId": "getFTSNonIndexMeasurements",
        "parameters": [
          {
            "$ref": "#/components/parameters/processIdAsHost"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/granularity"
          },
          {
            "$ref": "#/components/parameters/period"
          },
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/end"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "description": "List that contains the metrics that you want MongoDB Atlas to report for the associated data series. If you don't set this parameter, this resource returns all hardware and status metrics for the associated data series.",
            "in": "query",
            "name": "metrics",
            "required": true,
            "schema": {
              "type": "array",
              "description": "List that contains the metrics that you want MongoDB Atlas to report for the associated data series. If you don't set this parameter, this resource returns all hardware and status metrics for the associated data series.",
              "items": {
                "type": "string",
                "enum": [
                  "FTS_DISK_USAGE",
                  "FTS_PROCESS_CPU_KERNEL",
                  "FTS_PROCESS_CPU_USER",
                  "FTS_PROCESS_NORMALIZED_CPU_KERNEL",
                  "FTS_PROCESS_NORMALIZED_CPU_USER",
                  "FTS_PROCESS_RESIDENT_MEMORY",
                  "FTS_PROCESS_SHARED_MEMORY",
                  "FTS_PROCESS_VIRTUAL_MEMORY",
                  "JVM_CURRENT_MEMORY",
                  "JVM_MAX_MEMORY"
                ]
              },
              "maxItems": 10,
              "uniqueItems": true
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMeasurementsNonIndexView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return Atlas Search Hardware and Status Metrics",
        "tags": [
          "Monitoring and Logs"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/liveMigrations": {
      "post": {
        "description": "Migrate one Cluster that Cloud or Ops Manager manages to MongoDB Atlas.",
        "operationId": "createPushMigration",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LiveMigrationRequestView"
              }
            }
          },
          "description": "One migration to be created.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LiveMigrationResponseView"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Migrate One Local Managed Cluster to MongoDB Atlas",
        "tags": [
          "Cloud Migration Service"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/liveMigrations/validate": {
      "post": {
        "description": "Check whether the provided credentials, available disk space, MongoDB versions, and so on meet the requirements of the migration request. If the check passes, the migration can proceed.",
        "operationId": "validate",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LiveMigrationRequestView"
              }
            }
          },
          "description": "One migration to be validated.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Validate One Migration Request",
        "tags": [
          "Cloud Migration Service"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/liveMigrations/validate/{validationId}": {
      "get": {
        "description": "Return the status of one migration validation job.",
        "operationId": "getValidation",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the validation job.",
            "in": "path",
            "name": "validationId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "507f1f77bcf86cd799439011",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Migration Validation Job",
        "tags": [
          "Cloud Migration Service"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/liveMigrations/{liveMigrationId}": {
      "get": {
        "description": "Return details of one cluster migration job.",
        "operationId": "getPushMigration",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/liveMigrationId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LiveMigrationResponseView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Migration Job",
        "tags": [
          "Cloud Migration Service"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/liveMigrations/{liveMigrationId}/cutover": {
      "put": {
        "description": "Cut over the migrated cluster to MongoDB Cloud. Confirm when the cut over completes. When the cut over completes, MongoDB Cloud completes the live migration process and stops synchronizing with the source cluster.",
        "operationId": "migrationCutOver",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/liveMigrationId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Cut Over the Migrated Cluster",
        "tags": [
          "Cloud Migration Service"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/maintenanceWindow": {
      "delete": {
        "description": "Resets the maintenance window for the specified project. To use this resource, the requesting API Key must have the Project Atlas Admin role.This resource doesn't require the API Key to have an Access List.",
        "operationId": "resetOneMaintenanceWindowForOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Reset One Maintenance Window for One Project",
        "tags": [
          "Maintenance Windows"
        ]
      },
      "get": {
        "description": "Returns the maintenance window for the specified project. To use this resource, the requesting API Key must have the Project Read Only role.This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOneMaintenanceWindowForOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasGroupMaintenanceWindowView"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Maintenance Window for One Project",
        "tags": [
          "Maintenance Windows"
        ]
      },
      "patch": {
        "description": "Updates the maintenance window for the specified project. To use this resource, the requesting API Key must have the Project Atlas Admin role.This resource doesn't require the API Key to have an Access List.",
        "operationId": "updateMaintenanceWindowForOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasGroupMaintenanceWindowView"
              }
            }
          },
          "description": "Updates the maintenance window for the specified project.",
          "required": true
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Update Maintenance Window for One Project",
        "tags": [
          "Maintenance Windows"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/maintenanceWindow/autoDefer": {
      "post": {
        "description": "Toggles automatic deferral of the maintenance window for the specified project. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "automateDeferralOfMaintenanceForOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Toggle Automatic Deferral of Maintenance for One Project",
        "tags": [
          "Maintenance Windows"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/maintenanceWindow/defer": {
      "post": {
        "description": "Defers the maintenance window for the specified project. To use this resource, the requesting API Key must have the Project Atlas Admin role.This resource doesn't require the API Key to have an Access List.",
        "operationId": "deferOneMaintenanceWindowForOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Defer One Maintenance Window for One Project",
        "tags": [
          "Maintenance Windows"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/peers": {
      "get": {
        "description": "Returns details about all network peering connections in the specified project. Network peering allows multiple cloud-hosted applications to securely connect to the same project. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAllNetworkPeeringConnectionsInOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Cloud service provider to use for this VPC peering connection.",
            "in": "query",
            "name": "providerName",
            "schema": {
              "type": "string",
              "default": "AWS",
              "enum": [
                "AWS",
                "AZURE",
                "GCP"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedAWSPeerVpcView"
                    },
                    {
                      "$ref": "#/components/schemas/PaginatedAzurePeerNetworkView"
                    },
                    {
                      "$ref": "#/components/schemas/PaginatedGCPPeerVpcView"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Network Peering Connections in One Project",
        "tags": [
          "Network Peering Connections"
        ]
      },
      "post": {
        "description": "Creates one new network peering connection in the specified project. Network peering allows multiple cloud-hosted applications to securely connect to the same project. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Azure Network Peering Prerequisites",
          "url": "https://docs.atlas.mongodb.com/reference/api/vpc-create-peering-connection/#prerequisites"
        },
        "operationId": "createOneNewNetworkPeeringConnection",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasContainerPeerViewRequest"
              }
            }
          },
          "description": "Create one network peering connection.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ApiAtlasAWSPeerVpcView"
                    },
                    {
                      "$ref": "#/components/schemas/ApiAtlasAzurePeerNetworkView"
                    },
                    {
                      "$ref": "#/components/schemas/ApiAtlasGCPPeerVpcView"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Create One New Network Peering Connection",
        "tags": [
          "Network Peering Connections"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/peers/{peerId}": {
      "delete": {
        "description": "Removes one network peering connection in the specified project. If you Removes the last network peering connection associated with a project, MongoDB Cloud also removes any AWS security groups from the project IP access list. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "removeOneExistingNetworkPeeringConnection",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the network peering connection that you want to delete.",
            "in": "path",
            "name": "peerId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "202": {
            "$ref": "#/components/responses/accepted"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Remove One Existing Network Peering Connection",
        "tags": [
          "Network Peering Connections"
        ]
      },
      "get": {
        "description": "Returns details about one specified network peering connection in the specified project. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOneNetworkPeeringConnectionInOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the network peering connection that you want to retrieve.",
            "in": "path",
            "name": "peerId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ApiAtlasAWSPeerVpcView"
                    },
                    {
                      "$ref": "#/components/schemas/ApiAtlasAzurePeerNetworkView"
                    },
                    {
                      "$ref": "#/components/schemas/ApiAtlasGCPPeerVpcView"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Network Peering Connection in One Project",
        "tags": [
          "Network Peering Connections"
        ]
      },
      "patch": {
        "description": "Updates one specified network peering connection in the specified project. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "updateOneNewNetworkPeeringConnection",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the network peering connection that you want to update.",
            "in": "path",
            "name": "peerId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasContainerPeerViewRequest"
              }
            }
          },
          "description": "Modify one network peering connection.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ApiAtlasAWSPeerVpcView"
                    },
                    {
                      "$ref": "#/components/schemas/ApiAtlasAzurePeerNetworkView"
                    },
                    {
                      "$ref": "#/components/schemas/ApiAtlasGCPPeerVpcView"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Update One New Network Peering Connection",
        "tags": [
          "Network Peering Connections"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/privateEndpoint/endpointService": {
      "post": {
        "description": "Creates one private resource service for the specified cloud service provider. This cloud service provider manages the private resource service for the project. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "createOnePrivateEndpointServiceForOneProvider",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasCreateEndpointServiceRequestView"
              }
            }
          },
          "description": "Creates one private resource service for the specified cloud service provider.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ApiAtlasAWSPrivateLinkConnectionView"
                    },
                    {
                      "$ref": "#/components/schemas/ApiAtlasAzurePrivateLinkConnectionView"
                    },
                    {
                      "$ref": "#/components/schemas/ApiAtlasGCPEndpointServiceView"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Create One Private Endpoint Service for One Provider",
        "tags": [
          "Private Endpoint Services"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/privateEndpoint/regionalMode": {
      "get": {
        "description": "Checks whether each region in the specified cloud service provider can create multiple private resources per region. The cloud service provider manages the private resource for the project. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnRegionalizedPrivateEndpointStatus",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectSettingItemView"
                }
              }
            },
            "description": "OK"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return Regionalized Private Endpoint Status",
        "tags": [
          "Private Endpoint Services"
        ]
      },
      "patch": {
        "description": "Enables or disables the ability can create multiple private resources per region in all cloud service providers in one project. The cloud service provider manages the private resource for the project. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "toggleRegionalizedPrivateEndpointStatus",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectSettingItemView"
              }
            }
          },
          "description": "Enables or disables the ability can create multiple private resources per region in all cloud service providers in one project.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectSettingItemView"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Toggle Regionalized Private Endpoint Status",
        "tags": [
          "Private Endpoint Services"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/privateEndpoint/serverless/instance/{instanceName}/endpoint": {
      "get": {
        "description": "Returns all private endpoints for one serverless instance. You must have at least the Project Read Only role for the project to successfully call this resource. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAllPrivateEndpointsForOneServerlessInstance",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the serverless instance associated with the tenant endpoint.",
            "in": "path",
            "name": "instanceName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasServerlessTenantEndpointListView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Private Endpoints for One Serverless Instance",
        "tags": [
          "Serverless Private Endpoints"
        ]
      },
      "post": {
        "description": "Creates one private endpoint for one serverless instance. To use this resource, the requesting API Key must have the Project Owner role. This resource doesn't require the API Key to have an Access List.\n\n A new endpoint won't be immediately available after creation.  Read the steps in the linked tutorial for detailed guidance.",
        "externalDocs": {
          "description": "Set Up a Private Endpoint for a Serverless Instance Tutorial",
          "url": "https://dochub.mongodb.org/core/serverless-private-endpoint"
        },
        "operationId": "createOnePrivateEndpointForOneServerlessInstance",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the serverless instance for which the tenant endpoint will be created.",
            "in": "path",
            "name": "instanceName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasServerlessTenantEndpointCreateView"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasServerlessTenantEndpointView"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Create One Private Endpoint for One Serverless Instance",
        "tags": [
          "Serverless Private Endpoints"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/privateEndpoint/serverless/instance/{instanceName}/endpoint/{endpointId}": {
      "delete": {
        "description": "Remove one private endpoint from one serverless instance. To use this resource, the requesting API Key must have the Project Owner role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "removeOnePrivateEndpointFromOneServerlessInstance",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the serverless instance from which the tenant endpoint will be removed.",
            "in": "path",
            "name": "instanceName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the tenant endpoint which will be removed.",
            "in": "path",
            "name": "endpointId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Remove One Private Endpoint for One Serverless Instance",
        "tags": [
          "Serverless Private Endpoints"
        ]
      },
      "get": {
        "description": "Return one private endpoint for one serverless instance. Identify this endpoint using its unique ID. You must have at least the Project Read Only role for the project to successfully call this resource. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOnePrivateEndpointForOneServerlessInstance",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the serverless instance associated with the tenant endpoint.",
            "in": "path",
            "name": "instanceName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the tenant endpoint.",
            "in": "path",
            "name": "endpointId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasServerlessTenantEndpointView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Private Endpoint for One Serverless Instance",
        "tags": [
          "Serverless Private Endpoints"
        ]
      },
      "patch": {
        "description": "Updates one private endpoint for one serverless instance. To use this resource, the requesting API Key must have the Project Owner role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "updateOnePrivateEndpointForOneServerlessInstance",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the serverless instance associated with the tenant endpoint that will be updated.",
            "in": "path",
            "name": "instanceName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the tenant endpoint which will be updated.",
            "in": "path",
            "name": "endpointId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/providerName"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasServerlessTenantEndpointView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Update One Private Endpoint for One Serverless Instance",
        "tags": [
          "Serverless Private Endpoints"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/privateEndpoint/{cloudProvider}/endpointService": {
      "get": {
        "description": "Returns the name, interfaces, and state of all private resource services for the specified cloud service provider. This cloud service provider manages the private resource service for the project. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAllPrivateEndpointServicesForOneProvider",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Cloud service provider that manages this private endpoint service.",
            "in": "path",
            "name": "cloudProvider",
            "required": true,
            "schema": {
              "type": "string",
              "default": "AWS",
              "enum": [
                "AWS",
                "AZURE",
                "GCP"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedAWSPrivateLinkConnectionView"
                    },
                    {
                      "$ref": "#/components/schemas/PaginatedAzurePrivateLinkConnectionView"
                    },
                    {
                      "$ref": "#/components/schemas/PaginatedGCPEndpointServiceView"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Private Endpoint Services for One Provider",
        "tags": [
          "Private Endpoint Services"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/privateEndpoint/{cloudProvider}/endpointService/{endpointServiceId}": {
      "delete": {
        "description": "Removes one private resource service from the specified project. This cloud service provider manages the private resource service that belongs to the project. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "removeOnePrivateEndpointServiceForOneProvider",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Cloud service provider that manages this private endpoint service.",
            "in": "path",
            "name": "cloudProvider",
            "required": true,
            "schema": {
              "type": "string",
              "default": "AWS",
              "enum": [
                "AWS",
                "AZURE",
                "GCP"
              ]
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the private endpoint service that you want to delete.",
            "in": "path",
            "name": "endpointServiceId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Remove One Private Endpoint Service for One Provider",
        "tags": [
          "Private Endpoint Services"
        ]
      },
      "get": {
        "description": "Returns the name, interfaces, and state of the specified private resource service from one project. The cloud service provider hosted this private resource service that belongs to the project. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOnePrivateEndpointServiceForOneProvider",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Cloud service provider that manages this private endpoint service.",
            "in": "path",
            "name": "cloudProvider",
            "required": true,
            "schema": {
              "type": "string",
              "default": "AWS",
              "enum": [
                "AWS",
                "AZURE",
                "GCP"
              ]
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the private endpoint service that you want to return.",
            "in": "path",
            "name": "endpointServiceId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ApiAtlasAWSPrivateLinkConnectionView"
                    },
                    {
                      "$ref": "#/components/schemas/ApiAtlasAzurePrivateLinkConnectionView"
                    },
                    {
                      "$ref": "#/components/schemas/ApiAtlasGCPEndpointServiceView"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Private Endpoint Service for One Provider",
        "tags": [
          "Private Endpoint Services"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/privateEndpoint/{cloudProvider}/endpointService/{endpointServiceId}/endpoint": {
      "post": {
        "description": "Creates one private resource in the specified private resource service hosted from one cloud service provider. This cloud service provider manages the private resource service for the project. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "createOnePrivateEndpointForOneProvider",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Cloud service provider that manages this private endpoint.",
            "in": "path",
            "name": "cloudProvider",
            "required": true,
            "schema": {
              "type": "string",
              "default": "AWS",
              "enum": [
                "AWS",
                "AZURE",
                "GCP"
              ]
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the private endpoint service for which you want to create a private endpoint.",
            "in": "path",
            "name": "endpointServiceId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ApiAtlasDefaultCreateEndpointRequestView"
                  },
                  {
                    "$ref": "#/components/schemas/ApiAtlasCreateGCPEndpointGroupRequestView"
                  }
                ]
              }
            }
          },
          "description": "Creates one private resource endpoint for the specified cloud service provider.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ApiAtlasAWSInterfaceEndpointView"
                    },
                    {
                      "$ref": "#/components/schemas/ApiAtlasAzurePrivateEndpointView"
                    },
                    {
                      "$ref": "#/components/schemas/ApiAtlasGCPEndpointGroupView"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "402": {
            "$ref": "#/components/responses/paymentRequired"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Create One Private Endpoint for One Provider",
        "tags": [
          "Private Endpoint Services"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/privateEndpoint/{cloudProvider}/endpointService/{endpointServiceId}/endpoint/{endpointId}": {
      "delete": {
        "description": "Removes one private resource from the specified project. This cloud service provider manages the private resource service that manages the private resource that belongs to the project. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "removeOnePrivateEndpointForOneProvider",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Cloud service provider that manages this private endpoint.",
            "in": "path",
            "name": "cloudProvider",
            "required": true,
            "schema": {
              "type": "string",
              "default": "AWS",
              "enum": [
                "AWS",
                "AZURE",
                "GCP"
              ]
            }
          },
          {
            "description": "Unique string that identifies the private endpoint you want to delete. The format of the **endpointId** parameter differs for AWS and Azure. You must URL encode the **endpointId** for Azure private endpoints.",
            "in": "path",
            "name": "endpointId",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^vpce-[0-9a-f]{17}|^%2[fF]subscriptions%2[fF][0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}%2[fF]resource[gG]roups%2[fF]([-\\w._()]+)%2[fF]providers%2[fF]Microsoft\\.Network%2[fF]privateEndpoints%2[fF]([-\\w._()]+)"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the private endpoint service from which you want to delete a private endpoint.",
            "in": "path",
            "name": "endpointServiceId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Remove One Private Endpoint for One Provider",
        "tags": [
          "Private Endpoint Services"
        ]
      },
      "get": {
        "description": "Returns the connection state of the specified private resource. The private resource service manages this private resource which belongs to one project hosted from one cloud service provider. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOnePrivateEndpointForOneProvider",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Cloud service provider that manages this private endpoint.",
            "in": "path",
            "name": "cloudProvider",
            "required": true,
            "schema": {
              "type": "string",
              "default": "AWS",
              "enum": [
                "AWS",
                "AZURE",
                "GCP"
              ]
            }
          },
          {
            "description": "Unique string that identifies the private endpoint you want to return. The format of the **endpointId** parameter differs for AWS and Azure. You must URL encode the **endpointId** for Azure private endpoints.",
            "in": "path",
            "name": "endpointId",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^vpce-[0-9a-f]{17}|^%2[fF]subscriptions%2[fF][0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}%2[fF]resource[gG]roups%2[fF]([-\\w._()]+)%2[fF]providers%2[fF]Microsoft\\.Network%2[fF]privateEndpoints%2[fF]([-\\w._()]+)"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the private endpoint service for which you want to return a private endpoint.",
            "in": "path",
            "name": "endpointServiceId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ApiAtlasAWSInterfaceEndpointView"
                    },
                    {
                      "$ref": "#/components/schemas/ApiAtlasAzurePrivateEndpointView"
                    },
                    {
                      "$ref": "#/components/schemas/ApiAtlasGCPEndpointGroupView"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Private Endpoint for One Provider",
        "tags": [
          "Private Endpoint Services"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/privateIpMode": {
      "get": {
        "deprecated": true,
        "description": "Verifies if someone set the specified project to **Connect via Peering Only** mode. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Changes to Connection Strings",
          "url": "https://docs.atlas.mongodb.com/reference/faq/connection-changes/"
        },
        "operationId": "verifyConnectViaPeeringOnlyModeForOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateIPModeView"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Verify Connect via Peering Only Mode for One Project",
        "tags": [
          "Network Peering"
        ]
      },
      "patch": {
        "deprecated": true,
        "description": "Disables Connect via Peering Only mode for the specified project. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Changes to Connection Strings",
          "url": "https://docs.atlas.mongodb.com/reference/faq/connection-changes/"
        },
        "operationId": "disableConnectViaPeeringOnlyModeForOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrivateIPModeView"
              }
            }
          },
          "description": "Disables Connect via Peering Only mode for the specified project.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateIPModeView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Disable Connect via Peering Only Mode for One Project",
        "tags": [
          "Network Peering"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/privateNetworkSettings/endpointIds": {
      "get": {
        "description": "Returns all private endpoints for Federated Database Instances and Online Archives in the specified project. To use this resource, the requesting API Key must have the Project Read Only or Project Charts Admin roles. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAllDataFederationPrivateEndpointsInOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiAtlasPrivateNetworkEndpointIdEntryView"
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Federated Database Instance and Online Archive Private Endpoints in One Project",
        "tags": [
          "Data Federation Private Networks"
        ]
      },
      "post": {
        "description": "Adds one private endpoint for Federated Database Instances and Online Archives to the specified projects. To use this resource, the requesting API Key must have the Project Atlas Admin or Project Charts Admin roles. This resource doesn't require the API Key to have an Access List.",
        "operationId": "createOneDataFederationPrivateEndpointForOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasPrivateNetworkEndpointIdEntryView"
              }
            }
          },
          "description": "Private endpoint for Federated Database Instances and Online Archives to add to the specified project.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiAtlasPrivateNetworkEndpointIdEntryView"
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Create One Federated Database Instance and Online Archive Private Endpoint for One Project",
        "tags": [
          "Data Federation Private Networks"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/privateNetworkSettings/endpointIds/{endpointId}": {
      "delete": {
        "description": "Removes one private endpoint for Federated Database Instances and Online Archives in the specified project. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "removeOneDataFederationPrivateEndpointFromOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 22-character alphanumeric string that identifies the private endpoint to remove. Atlas Data Federation supports AWS private endpoints using the AWS PrivateLink feature.",
            "in": "path",
            "name": "endpointId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 22,
              "minLength": 22,
              "pattern": "^vpce-[0-9a-f]{17}$"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Remove One Federated Database Instance and Online Archive Private Endpoint from One Project",
        "tags": [
          "Data Federation Private Networks"
        ]
      },
      "get": {
        "description": "Returns the specified private endpoint for Federated Database Instances or Online Archives in the specified project. To use this resource, the requesting API Key must have the Project Read Only or Project Charts Admin roles. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOneDataFederationPrivateEndpointInOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 22-character alphanumeric string that identifies the private endpoint to return. Atlas Data Federation supports AWS private endpoints using the AWS PrivateLink feature.",
            "in": "path",
            "name": "endpointId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 22,
              "minLength": 22,
              "pattern": "^vpce-[0-9a-f]{17}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasPrivateNetworkEndpointIdEntryView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Federated Database Instance and Online Archive Private Endpoint in One Project",
        "tags": [
          "Data Federation Private Networks"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/processes": {
      "get": {
        "description": "Returns details of all processes for the specified project. A MongoDB process can be either a `mongod` or `mongos`. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAllMongodbProcessesInOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedHostView_Atlas"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All MongoDB Processes in One Project",
        "tags": [
          "Monitoring and Logs"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/processes/{processId}": {
      "get": {
        "description": "Returns the processes for the specified host for the specified project. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOneMongodbProcessById",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "mongodb.example.com:27017",
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiHostView_Atlas"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One MongoDB Process by ID",
        "tags": [
          "Monitoring and Logs"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/processes/{processId}/databases": {
      "get": {
        "description": "Returns the list of databases running on the specified host for the specified project. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAvailableDatabasesForOneMongodbProcess",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "mongodb.example.com:27017",
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedDatabaseView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return Available Databases for One MongoDB Process",
        "tags": [
          "Monitoring and Logs"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/processes/{processId}/databases/{databaseName}": {
      "get": {
        "description": "Returns one database running on the specified host for the specified project. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnDatabasesForOneMongodbProcess",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the database that the specified MongoDB process serves.",
            "in": "path",
            "name": "databaseName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "mongodb.example.com:27017",
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiDatabaseView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Database for a MongoDB Process",
        "tags": [
          "Monitoring and Logs"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/processes/{processId}/databases/{databaseName}/measurements": {
      "get": {
        "description": "Returns the measurements of one database for the specified host for the specified project. Returns the database's on-disk storage space based on the MongoDB `dbStats` command output. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnMeasurementsOfOneDatabaseForOneMongodbProcess",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the database that the specified MongoDB process serves.",
            "in": "path",
            "name": "databaseName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "One or more types of measurement to request for this MongoDB process. If omitted, the resource returns all measurements. To specify multiple values for `m`, repeat the `m` parameter for each value. Specify measurements that apply to the specified host. MongoDB Cloud returns an error if you specified any invalid measurements.",
            "in": "query",
            "name": "m",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "One measurement requested for this MongoDB process.",
                "enum": [
                  "DATABASE_AVERAGE_OBJECT_SIZE",
                  "DATABASE_COLLECTION_COUNT",
                  "DATABASE_DATA_SIZE",
                  "DATABASE_STORAGE_SIZE",
                  "DATABASE_INDEX_SIZE",
                  "DATABASE_INDEX_COUNT",
                  "DATABASE_EXTENT_COUNT",
                  "DATABASE_OBJECT_COUNT",
                  "DATABASE_VIEW_COUNT"
                ]
              },
              "maxItems": 10,
              "minItems": 1,
              "uniqueItems": true
            },
            "style": "form"
          },
          {
            "description": "Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "mongodb.example.com:27017",
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMeasurementsGeneralView_Atlas"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return Measurements of One Database for One MongoDB Process",
        "tags": [
          "Monitoring and Logs"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/processes/{processId}/disks": {
      "get": {
        "description": "Returns the list of disks or partitions for the specified host for the specified project. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAvailableDisksForOneMongodbProcess",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "mongodb.example.com:27017",
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedDiskPartitionView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return Available Disks for One MongoDB Process",
        "tags": [
          "Monitoring and Logs"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/processes/{processId}/disks/{partitionName}": {
      "get": {
        "description": "Returns the measurements of one disk or partition for the specified host for the specified project. Returned value can be one of the following:\n- Throughput of I/O operations for the disk partition used for the MongoDB process\n- Percentage of time during which requests the partition issued and serviced\n- Latency per operation type of the disk partition used for the MongoDB process\n- Amount of free and used disk space on the disk partition used for the MongoDB process \n\nTo use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnMeasurementsOfOneDisk",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "description": "Human-readable label of the disk or partition to which the measurements apply.",
            "in": "path",
            "name": "partitionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "mongodb.example.com:27017",
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiDiskPartitionView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return Measurements of One Disk",
        "tags": [
          "Monitoring and Logs"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/processes/{processId}/disks/{partitionName}/measurements": {
      "get": {
        "description": "Returns the measurements of one disk or partition for the specified host for the specified project. Returned value can be one of the following:\n- Throughput of I/O operations for the disk partition used for the MongoDB process\n- Percentage of time during which requests the partition issued and serviced\n- Latency per operation type of the disk partition used for the MongoDB process\n- Amount of free and used disk space on the disk partition used for the MongoDB process\n\nTo use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnMeasurementsOfOneDiskForOneMongodbProcess",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "One or more types of measurement to request for this MongoDB process. If omitted, the resource returns all measurements. To specify multiple values for `m`, repeat the `m` parameter for each value. Specify measurements that apply to the specified host. MongoDB Cloud returns an error if you specified any invalid measurements.",
            "in": "query",
            "name": "m",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "One measurement requested for this MongoDB process.",
                "enum": [
                  "DISK_PARTITION_IOPS_READ",
                  "MAX_DISK_PARTITION_IOPS_READ",
                  "DISK_PARTITION_IOPS_WRITE",
                  "MAX_DISK_PARTITION_IOPS_WRITE",
                  "DISK_PARTITION_IOPS_TOTAL",
                  "MAX_DISK_PARTITION_IOPS_TOTAL",
                  "DISK_PARTITION_UTILIZATION",
                  "MAX_DISK_PARTITION_UTILIZATION",
                  "DISK_PARTITION_LATENCY_READ",
                  "MAX_DISK_PARTITION_LATENCY_READ",
                  "DISK_PARTITION_LATENCY_WRITE",
                  "MAX_DISK_PARTITION_LATENCY_WRITE",
                  "DISK_PARTITION_SPACE_FREE",
                  "MAX_DISK_PARTITION_SPACE_FREE",
                  "DISK_PARTITION_SPACE_USED",
                  "MAX_DISK_PARTITION_SPACE_USED",
                  "DISK_PARTITION_SPACE_PERCENT_FREE",
                  "MAX_DISK_PARTITION_SPACE_PERCENT_FREE",
                  "DISK_PARTITION_SPACE_PERCENT_USED",
                  "MAX_DISK_PARTITION_SPACE_PERCENT_USED"
                ]
              },
              "maxItems": 10,
              "minItems": 1,
              "uniqueItems": true
            },
            "style": "form"
          },
          {
            "description": "Human-readable label of the disk or partition to which the measurements apply.",
            "in": "path",
            "name": "partitionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "mongodb.example.com:27017",
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMeasurementsGeneralView_Atlas"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return Measurements of One Disk for One MongoDB Process",
        "tags": [
          "Monitoring and Logs"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/processes/{processId}/measurements": {
      "get": {
        "description": "Returns measurements of the disk or partition per process for the specified host for the specified project. Returned value can be one of the following:\n- Throughput of I/O operations for the disk partition used for the MongoDB process\n- Percentage of time during which requests the partition issued and serviced\n- Latency per operation type of the disk partition used for the MongoDB process\n- Amount of free and used disk space on the disk partition used for the MongoDB process \n\nTo use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnMeasurementsForOneMongodbProcess",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "One or more types of measurement to request for this MongoDB process. If omitted, the resource returns all measurements. To specify multiple values for `m`, repeat the `m` parameter for each value. Specify measurements that apply to the specified host. MongoDB Cloud returns an error if you specified any invalid measurements.",
            "in": "query",
            "name": "m",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "One measurement requested for this MongoDB process.",
                "enum": [
                  "ASSERT_MSG",
                  "ASSERT_REGULAR",
                  "ASSERT_USER",
                  "ASSERT_WARNING",
                  "BACKGROUND_FLUSH_AVG",
                  "CACHE_BYTES_READ_INTO",
                  "CACHE_BYTES_WRITTEN_FROM",
                  "CACHE_DIRTY_BYTES",
                  "CACHE_USED_BYTES",
                  "COMPUTED_MEMORY",
                  "CONNECTIONS",
                  "CURSORS_TOTAL_OPEN",
                  "CURSORS_TOTAL_TIMED_OUT",
                  "DB_DATA_SIZE_TOTAL",
                  "DB_STORAGE_TOTAL",
                  "DOCUMENT_METRICS_DELETED",
                  "DOCUMENT_METRICS_INSERTED",
                  "DOCUMENT_METRICS_RETURNED",
                  "DOCUMENT_METRICS_UPDATED",
                  "EXTRA_INFO_PAGE_FAULTS",
                  "FTS_DISK_UTILIZATION",
                  "FTS_MEMORY_MAPPED",
                  "FTS_MEMORY_RESIDENT",
                  "FTS_MEMORY_VIRTUAL",
                  "FTS_PROCESS_CPU_KERNEL",
                  "FTS_PROCESS_CPU_USER",
                  "FTS_PROCESS_NORMALIZED_CPU_KERNEL",
                  "FTS_PROCESS_NORMALIZED_CPU_USER",
                  "GLOBAL_ACCESSES_NOT_IN_MEMORY",
                  "GLOBAL_LOCK_CURRENT_QUEUE_READERS",
                  "GLOBAL_LOCK_CURRENT_QUEUE_TOTAL",
                  "GLOBAL_LOCK_CURRENT_QUEUE_WRITERS",
                  "GLOBAL_PAGE_FAULT_EXCEPTIONS_THROWN",
                  "INDEX_COUNTERS_BTREE_ACCESSES",
                  "INDEX_COUNTERS_BTREE_HITS",
                  "INDEX_COUNTERS_BTREE_MISS_RATIO",
                  "INDEX_COUNTERS_BTREE_MISSES",
                  "JOURNALING_COMMITS_IN_WRITE_LOCK",
                  "JOURNALING_MB",
                  "JOURNALING_WRITE_DATA_FILES_MB",
                  "MAX_PROCESS_CPU_CHILDREN_KERNEL",
                  "MAX_PROCESS_CPU_CHILDREN_USER",
                  "MAX_PROCESS_CPU_KERNEL",
                  "MAX_PROCESS_CPU_USER",
                  "MAX_PROCESS_NORMALIZED_CPU_CHILDREN_KERNEL",
                  "MAX_PROCESS_NORMALIZED_CPU_CHILDREN_USER",
                  "MAX_PROCESS_NORMALIZED_CPU_KERNEL",
                  "MAX_PROCESS_NORMALIZED_CPU_USER",
                  "MAX_SWAP_USAGE_FREE",
                  "MAX_SWAP_USAGE_USED ",
                  "MAX_SYSTEM_CPU_GUEST",
                  "MAX_SYSTEM_CPU_IOWAIT",
                  "MAX_SYSTEM_CPU_IRQ",
                  "MAX_SYSTEM_CPU_KERNEL",
                  "MAX_SYSTEM_CPU_SOFTIRQ",
                  "MAX_SYSTEM_CPU_STEAL",
                  "MAX_SYSTEM_CPU_USER",
                  "MAX_SYSTEM_MEMORY_AVAILABLE",
                  "MAX_SYSTEM_MEMORY_FREE",
                  "MAX_SYSTEM_MEMORY_USED",
                  "MAX_SYSTEM_NETWORK_IN",
                  "MAX_SYSTEM_NETWORK_OUT",
                  "MAX_SYSTEM_NORMALIZED_CPU_GUEST",
                  "MAX_SYSTEM_NORMALIZED_CPU_IOWAIT",
                  "MAX_SYSTEM_NORMALIZED_CPU_IRQ",
                  "MAX_SYSTEM_NORMALIZED_CPU_KERNEL",
                  "MAX_SYSTEM_NORMALIZED_CPU_NICE",
                  "MAX_SYSTEM_NORMALIZED_CPU_SOFTIRQ",
                  "MAX_SYSTEM_NORMALIZED_CPU_STEAL",
                  "MAX_SYSTEM_NORMALIZED_CPU_USER",
                  "MEMORY_MAPPED",
                  "MEMORY_RESIDENT",
                  "MEMORY_VIRTUAL",
                  "NETWORK_BYTES_IN",
                  "NETWORK_BYTES_OUT",
                  "NETWORK_NUM_REQUESTS",
                  "OP_EXECUTION_TIME_COMMANDS",
                  "OP_EXECUTION_TIME_READS",
                  "OP_EXECUTION_TIME_WRITES",
                  "OPCOUNTER_CMD",
                  "OPCOUNTER_DELETE",
                  "OPCOUNTER_GETMORE",
                  "OPCOUNTER_INSERT",
                  "OPCOUNTER_QUERY",
                  "OPCOUNTER_REPL_CMD",
                  "OPCOUNTER_REPL_DELETE",
                  "OPCOUNTER_REPL_INSERT",
                  "OPCOUNTER_REPL_UPDATE",
                  "OPCOUNTER_UPDATE",
                  "OPERATIONS_SCAN_AND_ORDER",
                  "OPLOG_MASTER_LAG_TIME_DIFF",
                  "OPLOG_MASTER_TIME",
                  "OPLOG_RATE_GB_PER_HOUR",
                  "OPLOG_SLAVE_LAG_MASTER_TIME",
                  "OPLOG_REPLICATION_LAG",
                  "PROCESS_CPU_CHILDREN_KERNEL",
                  "PROCESS_CPU_CHILDREN_USER",
                  "PROCESS_CPU_KERNEL",
                  "PROCESS_CPU_USER",
                  "PROCESS_NORMALIZED_CPU_CHILDREN_KERNEL",
                  "PROCESS_NORMALIZED_CPU_CHILDREN_USER",
                  "PROCESS_NORMALIZED_CPU_KERNEL",
                  "PROCESS_NORMALIZED_CPU_USER",
                  "QUERY_EXECUTOR_SCANNED",
                  "QUERY_EXECUTOR_SCANNED_OBJECTS",
                  "QUERY_TARGETING_SCANNED_OBJECTS_PER_RETURNED",
                  "QUERY_TARGETING_SCANNED_PER_RETURNED",
                  "RESTARTS_IN_LAST_HOUR",
                  "SWAP_USAGE_FREE",
                  "SWAP_USAGE_USED",
                  "SYSTEM_CPU_GUEST",
                  "SYSTEM_CPU_IOWAIT",
                  "SYSTEM_CPU_IRQ",
                  "SYSTEM_CPU_KERNEL",
                  "SYSTEM_CPU_NICE",
                  "SYSTEM_CPU_SOFTIRQ",
                  "SYSTEM_CPU_STEAL",
                  "SYSTEM_CPU_USER",
                  "SYSTEM_MEMORY_AVAILABLE",
                  "SYSTEM_MEMORY_FREE",
                  "SYSTEM_MEMORY_USED",
                  "SYSTEM_NETWORK_IN",
                  "SYSTEM_NETWORK_OUT",
                  "SYSTEM_NORMALIZED_CPU_GUEST",
                  "SYSTEM_NORMALIZED_CPU_IOWAIT",
                  "SYSTEM_NORMALIZED_CPU_IRQ",
                  "SYSTEM_NORMALIZED_CPU_KERNEL",
                  "SYSTEM_NORMALIZED_CPU_NICE",
                  "SYSTEM_NORMALIZED_CPU_SOFTIRQ",
                  "SYSTEM_NORMALIZED_CPU_STEAL",
                  "SYSTEM_NORMALIZED_CPU_USER",
                  "TICKETS_AVAILABLE_READS",
                  "TICKETS_AVAILABLE_WRITE"
                ]
              },
              "maxItems": 10,
              "minItems": 1,
              "uniqueItems": true
            },
            "style": "form"
          },
          {
            "description": "Date and time that indicates how far in the past to query. You can't set this value with **start** and **end** in the same request. This parameter expresses its value in the ISO 8601 duration format in UTC",
            "in": "query",
            "name": "period",
            "schema": {
              "type": "string",
              "format": "date-time",
              "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$"
            }
          },
          {
            "description": "Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "mongodb.example.com:27017",
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMeasurementsGeneralView_Atlas"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return Measurements for One MongoDB Process",
        "tags": [
          "Monitoring and Logs"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/processes/{processId}/performanceAdvisor/namespaces": {
      "get": {
        "description": "Returns up to 20 namespaces for collections experiencing slow queries on the specified host. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAllNamespacesForOneHost_1",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Length of time expressed during which the query finds suggested indexes among the managed namespaces in the cluster. This parameter expresses its value in milliseconds.\n\n- If you don't specify the **since** parameter, the endpoint returns data covering the duration before the current time.\n- If you specify neither the **duration** nor **since** parameters, the endpoint returns data from the previous 24 hours.",
            "in": "query",
            "name": "duration",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Combination of host and port that serves the MongoDB process. The host must be the hostname, FQDN, IPv4 address, or IPv6 address of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$"
            }
          },
          {
            "description": "Date and time from which the query retrieves the suggested indexes. This parameter expresses its value in the number of seconds that have elapsed since the [UNIX epoch](https://en.wikipedia.org/wiki/Unix_time).\n\n- If you don't specify the **duration** parameter, the endpoint returns data covering from the **since** value and the current time.\n- If you specify neither the **duration** nor the **since** parameters, the endpoint returns data from the previous 24 hours.",
            "in": "query",
            "name": "since",
            "schema": {
              "type": "number",
              "minimum": 1199145600
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiNamespacesView"
                  },
                  "maxItems": 20
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Namespaces for One Host",
        "tags": [
          "Performance Advisor"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/processes/{processId}/performanceAdvisor/slowQueryLogs": {
      "get": {
        "description": "Returns log lines for slow queries that the Performance Advisor and Query Profiler identified. The Performance Advisor monitors queries that MongoDB considers slow and suggests new indexes to improve query performance. MongoDB Cloud bases the threshold for slow queries on the average time of operations on your cluster. This enables workload-relevant recommendations. To use this resource, the requesting API Key must have the Project Data Access Read Write role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnSlowQueries_1",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Length of time expressed during which the query finds suggested indexes among the managed namespaces in the cluster. This parameter expresses its value in milliseconds.\n\n- If you don't specify the **since** parameter, the endpoint returns data covering the duration before the current time.\n- If you specify neither the **duration** nor **since** parameters, the endpoint returns data from the previous 24 hours.",
            "in": "query",
            "name": "duration",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Namespaces from which to retrieve suggested indexes. A namespace consists of one database and one collection resource written as `.`: `<database>.<collection>`. To include multiple namespaces, pass the parameter multiple times delimited with an ampersand (`&`) between each namespace. Omit this parameter to return results for all namespaces.",
            "in": "query",
            "name": "namespaces",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form"
          },
          {
            "description": "Maximum number of lines from the log to return.",
            "in": "query",
            "name": "nLogs",
            "schema": {
              "type": "number",
              "default": 20000,
              "maximum": 20000,
              "minimum": 0
            }
          },
          {
            "description": "Combination of host and port that serves the MongoDB process. The host must be the hostname, FQDN, IPv4 address, or IPv6 address of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$"
            }
          },
          {
            "description": "Date and time from which the query retrieves the suggested indexes. This parameter expresses its value in the number of seconds that have elapsed since the [UNIX epoch](https://en.wikipedia.org/wiki/Unix_time).\n\n- If you don't specify the **duration** parameter, the endpoint returns data covering from the **since** value and the current time.\n- If you specify neither the **duration** nor the **since** parameters, the endpoint returns data from the previous 24 hours.",
            "in": "query",
            "name": "since",
            "schema": {
              "type": "number",
              "minimum": 1199145600
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiPerformanceAdvisorSlowQueryListView"
                  }
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return Slow Queries",
        "tags": [
          "Performance Advisor"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/processes/{processId}/performanceAdvisor/suggestedIndexes": {
      "get": {
        "description": "Returns the indexes that the Performance Advisor suggests. The Performance Advisor monitors queries that MongoDB considers slow and suggests new indexes to improve query performance. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnSuggestedIndexes_1",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Length of time expressed during which the query finds suggested indexes among the managed namespaces in the cluster. This parameter expresses its value in milliseconds.\n\n- If you don't specify the **since** parameter, the endpoint returns data covering the duration before the current time.\n- If you specify neither the **duration** nor **since** parameters, the endpoint returns data from the previous 24 hours.",
            "in": "query",
            "name": "duration",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Namespaces from which to retrieve suggested indexes. A namespace consists of one database and one collection resource written as `.`: `<database>.<collection>`. To include multiple namespaces, pass the parameter multiple times delimited with an ampersand (`&`) between each namespace. Omit this parameter to return results for all namespaces.",
            "in": "query",
            "name": "namespaces",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form"
          },
          {
            "description": "Maximum number of example queries that benefit from the suggested index.",
            "in": "query",
            "name": "nExamples",
            "schema": {
              "type": "number",
              "default": 5
            }
          },
          {
            "description": "Number that indicates the maximum indexes to suggest.",
            "in": "query",
            "name": "nIndexes",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Combination of host and port that serves the MongoDB process. The host must be the hostname, FQDN, IPv4 address, or IPv6 address of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$"
            }
          },
          {
            "description": "Date and time from which the query retrieves the suggested indexes. This parameter expresses its value in the number of seconds that have elapsed since the [UNIX epoch](https://en.wikipedia.org/wiki/Unix_time).\n\n- If you don't specify the **duration** parameter, the endpoint returns data covering from the **since** value and the current time.\n- If you specify neither the **duration** nor the **since** parameters, the endpoint returns data from the previous 24 hours.",
            "in": "query",
            "name": "since",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiPerformanceAdvisorResponseView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return Suggested Indexes",
        "tags": [
          "Performance Advisor"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/sampleDatasetLoad/{name}": {
      "post": {
        "description": "Requests loading the MongoDB sample dataset into the specified cluster. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "loadSampleDatasetRequestIntoCluster",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the cluster into which you load the sample dataset.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasSampleDatasetStatusView"
              }
            }
          },
          "description": "Cluster into which to load the sample dataset.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiAtlasSampleDatasetStatusView"
                  }
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Load Sample Dataset Request into Cluster",
        "tags": [
          "Clusters"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/sampleDatasetLoad/{sampleDatasetId}": {
      "get": {
        "description": "Checks the progress of loading the sample dataset into one cluster. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "checkStatusOfClusterSampleDatasetRequest",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the loaded sample dataset.",
            "in": "path",
            "name": "sampleDatasetId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasSampleDatasetStatusView"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Check Status of Cluster Sample Dataset Request",
        "tags": [
          "Clusters"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/serverless": {
      "get": {
        "description": "Returns details for all serverless instances in the specified project. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAllServerlessInstancesFromOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedServerlessInstancesView"
                }
              }
            },
            "description": "OK"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Serverless Instances from One Project",
        "tags": [
          "Serverless Instances"
        ]
      },
      "post": {
        "description": "Creates one serverless instance in the specified project. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "createOneServerlessInstanceInOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasServerlessClusterDescriptionViewManual"
              }
            }
          },
          "description": "Create One Serverless Instance in One Project.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasServerlessClusterDescriptionViewManual"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "402": {
            "$ref": "#/components/responses/paymentRequired"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Create One Serverless Instance in One Project",
        "tags": [
          "Serverless Instances"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/serverless/{clusterName}/backup/restoreJobs": {
      "get": {
        "deprecated": true,
        "description": "Returns all restore jobs for one serverless instance from the specified project. To use this resource, the requesting API Key must have the Project Atlas Admin role and an entry for the project access list.",
        "operationId": "returnAllRestoreJobsForOneServerlessInstance",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the serverless instance.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedServerlessBackupRestoreJobViewManual"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Restore Jobs for One Serverless Instance",
        "tags": [
          "Cloud Backup Restore Jobs"
        ]
      },
      "post": {
        "deprecated": true,
        "description": "Restores one snapshot of one serverless instance from the specified project. To use this resource, the requesting API Key must have the Project Atlas Admin role and an entry for the project access list.",
        "operationId": "restoreOneSnapshotOfOneCluster_1",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the serverless instance whose snapshot you want to restore.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasServerlessBackupRestoreJobViewManual"
              }
            }
          },
          "description": "Restores one snapshot of one serverless instance from the specified project.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasServerlessBackupRestoreJobViewManual"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Restore One Snapshot of One Serverless Instance",
        "tags": [
          "Cloud Backup Restore Jobs"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/serverless/{clusterName}/backup/restoreJobs/{restoreJobId}": {
      "get": {
        "deprecated": true,
        "description": "Returns one restore job for one serverless instance from the specified project. To use this resource, the requesting API Key must have the Project Atlas Admin role and an entry for the project access list.",
        "operationId": "returnOneRestoreJobForOneServerlessInstance",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the serverless instance.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the restore job to return.",
            "in": "path",
            "name": "restoreJobId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasServerlessBackupRestoreJobViewManual"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Restore Job for One Serverless Instance",
        "tags": [
          "Cloud Backup Restore Jobs"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/serverless/{clusterName}/backup/snapshots": {
      "get": {
        "description": "Returns all snapshots of one serverless instance from the specified project. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAllSnapshotsOfOneServerlessInstance",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "description": "Human-readable label that identifies the serverless instance.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaginatedServerlessBackupSnapshotViewManual"
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Snapshots of One Serverless Instance",
        "tags": [
          "Cloud Backups"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/serverless/{clusterName}/backup/snapshots/{snapshotId}": {
      "get": {
        "description": "Returns one snapshot of one serverless instance from the specified project. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOneSnapshotOfOneServerlessInstance",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the serverless instance.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the desired snapshot.",
            "in": "path",
            "name": "snapshotId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "78e18e587716102f711a5bca",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasServerlessBackupSnapshotViewManual"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Snapshot of One Serverless Instance",
        "tags": [
          "Cloud Backups"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/serverless/{name}": {
      "delete": {
        "description": "Removes one serverless instance from the specified project. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "removeOneServerlessInstanceFromOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the serverless instance.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Remove One Serverless Instance from One Project",
        "tags": [
          "Serverless Instances"
        ]
      },
      "get": {
        "description": "Returns details for one serverless instance in the specified project. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOneServerlessInstanceFromOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the serverless instance.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasServerlessClusterDescriptionViewManual"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Serverless Instance from One Project",
        "tags": [
          "Serverless Instances"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/settings": {
      "get": {
        "description": "Returns details about the specified project's settings. To use this resource, the requesting API Key must have the Project Read Only role. This resource does not require the API Key to have an Access List.",
        "operationId": "getGroupSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasGroupSettingsView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Project Settings",
        "tags": [
          "Projects"
        ]
      },
      "patch": {
        "description": "Updates the settings of the specified project. You can update any of the options available. MongoDB cloud only updates the options provided in the request. To use this resource, the requesting API Key must have the Project Owner role. This resource does not require the API Key to have an Access List.",
        "operationId": "patchGroupSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasGroupSettingsView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasGroupSettingsView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Update One Project Settings",
        "tags": [
          "Projects"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/userSecurity": {
      "get": {
        "description": "Returns the current LDAP configuration for the specified project. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOneCurrentLdapConfiguration",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasUserSecurityView"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return the Current LDAP or X.509  Configuration",
        "tags": [
          "LDAP Configuration",
          "X.509 Authentication for Database Users"
        ]
      },
      "patch": {
        "description": "Edits the LDAP configuration for the specified project. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.\n\nUpdating this configuration triggers a rolling restart of the database.",
        "operationId": "saveOneLdapConfiguration",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasUserSecurityView"
              }
            }
          },
          "description": "Updates the LDAP configuration for the specified project.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasUserSecurityView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Edit the LDAP or X.509 Configuration",
        "tags": [
          "LDAP Configuration",
          "X.509 Authentication for Database Users"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/userSecurity/customerX509": {
      "delete": {
        "description": "Clear customer-managed X.509 settings on a project, including the uploaded Certificate Authority, disabling Self-Managed X.509.\n\nUpdating this configuration triggers a rolling restart of the database.",
        "operationId": "disableCustomerManagedX509",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasUserSecurityView"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Disable Customer-Managed X.509",
        "tags": [
          "X.509 Authentication for Database Users"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/userSecurity/ldap/userToDNMapping": {
      "delete": {
        "description": "Removes the current LDAP Distinguished Name mapping captured in the ``userToDNMapping`` document from the LDAP configuration for the specified project. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "removeOneCurrentLdapUserToDnMapping",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Remove the Current LDAP User to DN Mapping",
        "tags": [
          "LDAP Configuration"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/userSecurity/ldap/verify": {
      "post": {
        "description": "Verifies the LDAP configuration for the specified project. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "verifyOneLdapConfigurationInOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasNDSLDAPVerifyConnectivityJobRequestParamsView"
              }
            }
          },
          "description": "The LDAP configuration for the specified project that you want to verify.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasNDSLDAPVerifyConnectivityJobRequestView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Verify the LDAP Configuration in One Project",
        "tags": [
          "LDAP Configuration"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/userSecurity/ldap/verify/{requestId}": {
      "get": {
        "description": "Returns the status of one request to verify one LDAP configuration for the specified project. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOneStatusOfOneVerifyLdapConfigurationRequest",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique string that identifies the request to verify an <abbr title=\"Lightweight Directory Access Protocol\">LDAP</abbr> configuration.",
            "in": "path",
            "name": "requestId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasNDSLDAPVerifyConnectivityJobRequestView"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return the Status of One Verify LDAP Configuration Request",
        "tags": [
          "LDAP Configuration"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/users": {
      "get": {
        "description": "Returns details about all users in the specified project. Users belong to an organization. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAllUsersInOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Flag that indicates whether the returned list should include users who belong to a team with a role in this project. You might not have assigned the individual users a role in this project. If `\"flattenTeams\" : false`, this resource returns only users with a role in the project.  If `\"flattenTeams\" : true`, this resource returns both users with roles in the project and users who belong to teams with roles in the project.",
            "in": "query",
            "name": "flattenTeams",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "description": "Flag that indicates whether the returned list should include users with implicit access to the project, the Organization Owner or Organization Read Only role. You might not have assigned the individual users a role in this project. If `\"includeOrgUsers\": false`, this resource returns only users with a role in the project. If `\"includeOrgUsers\": true`, this resource returns both users with roles in the project and users who have implicit access to the project through their organization role.",
            "in": "query",
            "name": "includeOrgUsers",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiAppUserView"
                  }
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Users in One Project",
        "tags": [
          "Projects"
        ]
      }
    },
    "/api/atlas/v1.0/groups/{groupId}/users/{userId}": {
      "delete": {
        "description": "Removes the specified user from the specified project. To use this resource, the requesting API Key must have the Project User Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "removeOneUserFromOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal string that identifies MongoDB Cloud user you want to remove from the specified project. To return a application user's ID using their application username, use the Get All application users in One Project endpoint.",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Remove One User from One Project",
        "tags": [
          "Projects"
        ]
      }
    },
    "/api/atlas/v1.0/orgs/{orgId}/liveMigrations/availableProjects": {
      "get": {
        "description": "Return all projects that you can migrate to the specified organization.",
        "operationId": "availableProjects",
        "parameters": [
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AvailableProjectView"
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Projects Available for Migration",
        "tags": [
          "Cloud Migration Service"
        ]
      }
    },
    "/api/atlas/v1.0/orgs/{orgId}/liveMigrations/linkTokens": {
      "delete": {
        "description": "Remove one organization link and its associated public API key.",
        "operationId": "deleteOrgLink_1",
        "parameters": [
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Remove One Link-Token",
        "tags": [
          "Cloud Migration Service"
        ]
      },
      "post": {
        "description": "Create one link-token that contains all the information required to complete the link.",
        "operationId": "createLinkToken",
        "parameters": [
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TargetOrgRequestView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetOrgView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Create One Link-Token",
        "tags": [
          "Cloud Migration Service"
        ]
      }
    },
    "/api/atlas/v1.5/groups/{groupId}/clusters": {
      "get": {
        "description": "Returns the details for all clusters in the specific project to which you have access. Clusters contain a group of hosts that maintain the same data set. The response includes multi-cloud clusters. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAllAdvancedClustersFromOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedClusterDescriptionV15View"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Multi-Cloud Clusters from One Project",
        "tags": [
          "Multi-Cloud Clusters"
        ]
      },
      "post": {
        "description": "Creates one cluster in the specific project. Clusters contain a group of hosts that maintain the same data set. This resource can create multi-cloud clusters. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "createOneAdvancedClusterFromOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasClusterDescriptionV15View"
              }
            }
          },
          "description": "Cluster to create in the specific project.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasClusterDescriptionV15View"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "402": {
            "$ref": "#/components/responses/paymentRequired"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Create One Multi-Cloud Cluster from One Project",
        "tags": [
          "Multi-Cloud Clusters"
        ]
      }
    },
    "/api/atlas/v1.5/groups/{groupId}/clusters/{clusterName}": {
      "delete": {
        "description": "Removes one cluster with advanced features from the specified project. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "removeOneAdvancedClusterFromOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Remove One Multi-Cloud Cluster from One Project",
        "tags": [
          "Multi-Cloud Clusters"
        ]
      },
      "get": {
        "description": "Returns the details for one cluster in the specified project. Clusters contain a group of hosts that maintain the same data set. The response includes multi-cloud clusters. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOneAdvancedClusterFromOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies this advanced cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasClusterDescriptionV15View"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Multi-Cloud Cluster from One Project",
        "tags": [
          "Multi-Cloud Clusters"
        ]
      },
      "patch": {
        "description": "Updates the details for one cluster in the specified project. Clusters contain a group of hosts that maintain the same data set. This resource can update multi-cloud clusters. To use this resource, the requesting API Key must have the Project Cluster Manager role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "modifyOneAdvancedClusterFromOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the advanced cluster to modify.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAtlasClusterDescriptionV15View"
              }
            }
          },
          "description": "Cluster to update in the specified project.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasClusterDescriptionV15View"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Modify One Multi-Cloud Cluster from One Project",
        "tags": [
          "Multi-Cloud Clusters"
        ]
      }
    },
    "/api/atlas/v1.5/groups/{groupId}/clusters/{clusterName}/globalWrites/customZoneMapping": {
      "delete": {
        "description": "Removes all custom zone mappings for the specified global cluster. A custom zone mapping matches one ISO 3166-2 location code to a zone in your global cluster. Removing the custom zone mappings restores the default mapping. By default, MongoDB Cloud maps each location code to the closest geographical zone. To use this resource, the requesting API Key must have the Project Atlas Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "removeAllCustomZoneMappingsFromOneGlobalMultiCloudCluster",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies this advanced cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAtlasGeoShardingView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Remove All Custom Zone Mappings from One Global Multi-Cloud Cluster",
        "tags": [
          "Global Clusters"
        ]
      }
    },
    "/api/atlas/v1.5/groups/{groupId}/clusters/{clusterName}/globalWrites/managedNamespaces": {
      "delete": {
        "description": "Removes one managed namespace within the specified global cluster. A managed namespace identifies a collection using the database name, the dot separator, and the collection name. Deleting a managed namespace does not remove the associated collection or data. To use this resource, the requesting API Key must have the Project Data Access Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "removeOneManagedNamespaceFromOneGlobalMultiCloudCluster",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies this advanced cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the database that contains the collection.",
            "in": "query",
            "name": "db",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Human-readable label that identifies the collection associated with the managed namespace.",
            "in": "query",
            "name": "collection",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeoShardingView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Remove One Managed Namespace from One Global Multi-Cloud Cluster",
        "tags": [
          "Global Clusters"
        ]
      }
    },
    "/api/atlas/v1.5/groups/{groupId}/clusters/{clusterName}/restartPrimaries": {
      "post": {
        "description": "Starts a failover test for the specified cluster in the specified project. Clusters contain a group of hosts that maintain the same data set. A failover test checks how MongoDB Cloud handles the failure of the cluster's primary node. During the test, MongoDB Cloud shuts down the primary node and elects a new primary. To use this resource, the requesting API Key must have the Project Cluster Manager role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "testFailoverForOneMultiCloudCluster",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Test Failover for One Multi-Cloud Cluster",
        "tags": [
          "Multi-Cloud Clusters"
        ]
      }
    },
    "/api/atlas/v1.5/groups/{groupId}/clusters/{hostName}/logs/{logName}.gz": {
      "get": {
        "description": "Returns a compressed (.gz) log file that contains a range of log messages for the specified host for the specified project. To use this resource, the requesting API Key must have the Project Atlas Admin or Project Data Access Read Write roles. This resource doesn't require the API Key to have an Access List.",
        "operationId": "downloadLogsForOneMultiCloudClusterHostInOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Fully qualified domain name or IP address of the MongoDB host that stores the log files that you want to download.",
            "in": "path",
            "name": "hostName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Human-readable label of the log file that you want to return. You can return audit logs only if you enable Database Auditing for the specified project.",
            "in": "path",
            "name": "logName",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "mongodb",
                "mongos",
                "mongodb-audit-log",
                "mongos-audit-log"
              ]
            }
          },
          {
            "description": "Date and time when the period specifies the inclusive ending point for the range of log messages to retrieve. This parameter expresses its value in the number of seconds that have elapsed since the UNIX epoch.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "type": "number",
              "minimum": 1199145600
            }
          },
          {
            "description": "Date and time when the period specifies the inclusive starting point for the range of log messages to retrieve. This parameter expresses its value in the number of seconds that have elapsed since the UNIX epoch.",
            "in": "query",
            "name": "startDate",
            "schema": {
              "type": "number",
              "minimum": 1199145600
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "description": "Compressed (.gz) log file that contains a range of log messages for the specified host for the specified project"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Download Logs for One Multi-Cloud Cluster Host in One Project",
        "tags": [
          "Monitoring and Logs"
        ]
      }
    },
    "/api/public/v1.0/groups/{groupId}/hosts/{hostId}/performanceAdvisor/namespaces": {
      "get": {
        "description": "Returns up to 20 namespaces for collections experiencing slow queries on the specified host. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAllNamespacesForOneHost",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Length of time expressed in milliseconds during which the query finds suggested indexes among the managed namespaces in the cluster.",
            "in": "query",
            "name": "duration",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Unique identifier of the host for the MongoDB process.",
            "in": "path",
            "name": "hostId",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^([a-f0-9]{24})$"
            }
          },
          {
            "description": "Timestamp in the number of seconds that have elapsed since the [UNIX epoch](https://en.wikipedia.org/wiki/Unix_time) from which the query retrieves the suggested indexes.",
            "in": "query",
            "name": "since",
            "schema": {
              "type": "number",
              "pattern": "^([0-9]{10,})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiNamespacesView"
                  },
                  "maxItems": 20
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Namespaces for One Host",
        "tags": [
          "Performance Advisor"
        ]
      }
    },
    "/api/public/v1.0/groups/{groupId}/hosts/{hostId}/performanceAdvisor/slowQueryLogs": {
      "get": {
        "description": "Returns log lines for slow queries that the Performance Advisor and Query Profiler identified. The Performance Advisor monitors queries that MongoDB considers slow and suggests new indexes to improve query performance. MongoDB Cloud bases the threshold for slow queries on the average time of operations on your cluster. This enables workload-relevant recommendations. To use this resource, the requesting API Key must have the Project Data Access Read Write role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnSlowQueries",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Length of time expressed in milliseconds during which the query finds suggested indexes among the managed namespaces in the cluster.",
            "in": "query",
            "name": "duration",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Namespaces from which to retrieve suggested indexes. A namespace consists of one database and one collection resource written as `.`: `<database>.<collection>`. To include multiple namespaces, pass the parameter multiple times delimited with an ampersand (`&`) between each namespace. Omit this parameter to return results for all namespaces.",
            "in": "query",
            "name": "namespaces",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form"
          },
          {
            "description": "Maximum number of lines from the log to return.",
            "in": "query",
            "name": "nLogs",
            "schema": {
              "type": "number",
              "default": 20000,
              "maximum": 20000,
              "minimum": 0,
              "pattern": "^[0-9]+$"
            }
          },
          {
            "description": "Unique identifier of the host for the MongoDB process.",
            "in": "path",
            "name": "hostId",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^([a-f0-9]{24})$"
            }
          },
          {
            "description": "Timestamp in the number of seconds that have elapsed since the [UNIX epoch](https://en.wikipedia.org/wiki/Unix_time) from which the query retrieves the suggested indexes.",
            "in": "query",
            "name": "since",
            "schema": {
              "type": "number",
              "pattern": "^([0-9]{10,})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiPerformanceAdvisorSlowQueryListView"
                  }
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return Slow Queries",
        "tags": [
          "Performance Advisor"
        ]
      }
    },
    "/api/public/v1.0/groups/{groupId}/hosts/{hostId}/performanceAdvisor/suggestedIndexes": {
      "get": {
        "description": "Returns the indexes that the Performance Advisor suggests. The Performance Advisor monitors queries that MongoDB considers slow and suggests new indexes to improve query performance. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnSuggestedIndexes",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Length of time expressed in milliseconds during which the query finds suggested indexes among the managed namespaces in the cluster.",
            "in": "query",
            "name": "duration",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Namespaces from which to retrieve suggested indexes. A namespace consists of one database and one collection resource written as `.`: `<database>.<collection>`. To include multiple namespaces, pass the parameter multiple times delimited with an ampersand (`&`) between each namespace. Omit this parameter to return results for all namespaces.",
            "in": "query",
            "name": "namespaces",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form"
          },
          {
            "description": "Maximum number of example queries that benefit from the suggested index.",
            "in": "query",
            "name": "nExamples",
            "schema": {
              "type": "number",
              "default": 5
            }
          },
          {
            "description": "Number that indicates the maximum indexes to suggest.",
            "in": "query",
            "name": "nIndexes",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Unique identifier of the host for the MongoDB process.",
            "in": "path",
            "name": "hostId",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^([a-f0-9]{24})$"
            }
          },
          {
            "description": "Timestamp in the number of seconds that have elapsed since the [UNIX epoch](https://en.wikipedia.org/wiki/Unix_time) from which the query retrieves the suggested indexes.",
            "in": "query",
            "name": "since",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiPerformanceAdvisorResponseView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return Suggested Indexes",
        "tags": [
          "Performance Advisor"
        ]
      }
    },
    "/api/public/v1.0/orgs/{orgId}/liveExport/migrationLink": {
      "delete": {
        "description": "Stop the source organization from syncing with the target organization in MongoDB Cloud.",
        "operationId": "deleteOrgLink",
        "parameters": [
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Remove One Link between Organizations",
        "tags": [
          "Cloud Migration Service"
        ]
      },
      "post": {
        "description": "Link the local source organization with a target organization in MongoDB Atlas.",
        "operationId": "migrationLink",
        "parameters": [
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TargetOrgView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceOrgView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Link the Local Organization with MongoDB Atlas",
        "tags": [
          "Cloud Migration Service"
        ]
      }
    },
    "/api/public/v1.0/orgs/{orgId}/liveExport/migrationLink/status": {
      "get": {
        "description": "Return the status of the organization link specified by the orgId.",
        "operationId": "migrationLinkStatus",
        "parameters": [
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MigrationLinkStatusView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return Status of the Organization Link",
        "tags": [
          "Cloud Migration Service"
        ]
      }
    },
    "/api/{app}/v1.0": {
      "get": {
        "description": "This resource returns information about the MongoDB application along with API key meta data.",
        "operationId": "getSystemStatus",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/app-atlas"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSystemStatusView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return the status of this MongoDB application",
        "tags": [
          "Root"
        ]
      }
    },
    "/api/{app}/v1.0/alertConfigs/matchers/fieldNames": {
      "get": {
        "description": "Get all field names that the matchers.fieldName parameter accepts when you create or update an Alert Configuration.",
        "operationId": "returnAlertConfigMatchersFieldNames",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "TYPE_NAME",
                      "HOSTNAME",
                      "PORT",
                      "HOSTNAME_AND_PORT",
                      "REPLICA_SET_NAME",
                      "SHARD_NAME",
                      "CLUSTER_NAME",
                      "APPLICATION_ID"
                    ]
                  }
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Get All Alert Configuration Matchers Field Names",
        "tags": [
          "Alert Configurations"
        ]
      }
    },
    "/api/{app}/v1.0/clusters": {
      "get": {
        "description": "Returns the details for all clusters in all projects to which you have access. Clusters contain a group of hosts that maintain the same data set. The response does not include multi-cloud clusters. To use this resource, the requesting API Key can have any role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAllAuthorizedClustersInAllProjects",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedOrgGroupView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Authorized Clusters in All Projects",
        "tags": [
          "Clusters"
        ]
      }
    },
    "/api/{app}/v1.0/federationSettings/{federationSettingsId}": {
      "delete": {
        "description": "Deletes the federation settings instance and all associated data, including identity providers and domains. To use this resource, the requesting API Key must have the Organization Owner role in the last remaining connected organization. This resource doesn't require the API Key to have an Access List. **Note**: requests to this resource will fail if there is more than one connected organization in the federation.",
        "operationId": "deleteFederationApp",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/federationSettingsId"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Delete the federation settings instance.",
        "tags": [
          "Federated Authentication"
        ]
      }
    },
    "/api/{app}/v1.0/federationSettings/{federationSettingsId}/connectedOrgConfigs": {
      "get": {
        "description": "Returns all connected org configs in the specified federation. To use this resource, the requesting API Key must have the Organization Owner role in one of the connected orgs. This resource doesn't require the API Key to have an Access List.",
        "operationId": "getAllConnectedOrgConfigs",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/federationSettingsId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConnectedOrgConfigView"
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Connected Org Configs from the Federation",
        "tags": [
          "Federated Authentication"
        ]
      }
    },
    "/api/{app}/v1.0/federationSettings/{federationSettingsId}/connectedOrgConfigs/{orgId}": {
      "delete": {
        "description": "Removes one connected organization configuration from the specified federation. To use this resource, the requesting API Key must have the Organization Owner role. This resource doesn't require the API Key to have an Access List. Note: This request fails if only one connected organization exists in the federation.",
        "operationId": "removeConnectedOrgConfig",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/federationSettingsId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the connected organization configuration to remove.",
            "in": "path",
            "name": "orgId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "4888442a3354817a7320eb61",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Remove One Org Config Connected to One Federation",
        "tags": [
          "Federated Authentication"
        ]
      },
      "get": {
        "description": "Returns the specified connected org config from the specified federation. To use this resource, the requesting API Key must have the Organization Owner role in the connected org. This resource doesn't require the API Key to have an Access List.",
        "operationId": "getConnectedOrgConfig",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/federationSettingsId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the connected organization configuration to return.",
            "in": "path",
            "name": "orgId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "4888442a3354817a7320eb61",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectedOrgConfigView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Org Config Connected to One Federation",
        "tags": [
          "Federated Authentication"
        ]
      },
      "patch": {
        "description": "Updates one connected organization configuration from the specified federation. To use this resource, the requesting API Key must have the Organization Owner role. This resource doesn't require the API Key to have an Access List. \n\n**Note** If the organization configuration has no associated identity provider, you can't use this resource to update role mappings or post authorization role grants.  \n\n**Note**: The domainRestrictionEnabled field defaults to false if not provided in the request. \n\n**Note**: If the identityProviderId field is not provided, you will disconnect the organization and the identity provider.",
        "operationId": "updateConnectedOrgConfig",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/federationSettingsId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the connected organization configuration to update.",
            "in": "path",
            "name": "orgId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "4888442a3354817a7320eb61",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectedOrgConfigView"
              }
            }
          },
          "description": "The connected organization configuration that you want to update.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectedOrgConfigView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Update one connected organization configuration in the specified federation.",
        "tags": [
          "Federated Authentication"
        ]
      }
    },
    "/api/{app}/v1.0/federationSettings/{federationSettingsId}/connectedOrgConfigs/{orgId}/roleMappings": {
      "get": {
        "description": "Returns all role mappings from the specified organization in the specified federation. To use this resource, the requesting API Key must have the Organization Owner role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "getAllRoleMappings",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/federationSettingsId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleMappingView"
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Role Mappings from One Organization",
        "tags": [
          "Federated Authentication"
        ]
      },
      "post": {
        "description": "Adds one role mapping to the specified organization in the specified federation. To use this resource, the requesting API Key must have the Organization Owner role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "addRoleMapping",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/federationSettingsId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleMappingView"
              }
            }
          },
          "description": "The role mapping that you want to create.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleMappingView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Add One Role Mapping to One Organization",
        "tags": [
          "Federated Authentication"
        ]
      }
    },
    "/api/{app}/v1.0/federationSettings/{federationSettingsId}/connectedOrgConfigs/{orgId}/roleMappings/{id}": {
      "delete": {
        "description": "Removes one role mapping in the specified organization from the specified federation. To use this resource, the requesting API Key must have the Organization Owner role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "deleteRoleMapping",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/federationSettingsId"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the role mapping that you wantto remove.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "4faca5b098702de1952f4d09",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Remove One Role Mapping from One Organization",
        "tags": [
          "Federated Authentication"
        ]
      },
      "get": {
        "description": "Returns one role mapping from the specified organization in the specified federation. To use this resource, the requesting API Key must have the Organization Owner role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "getRoleMapping",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/federationSettingsId"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the role mapping that you want to return.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "4faca5b098702de1952f4d09",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleMappingView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Role Mapping from One Organization",
        "tags": [
          "Federated Authentication"
        ]
      },
      "put": {
        "description": "Updates one role mapping in the specified organization in the specified federation. To use this resource, the requesting API Key must have the Organization Owner role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "updateRoleMapping",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/federationSettingsId"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the role mapping that you wantto update.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "4faca5b098702de1952f4d09",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleMappingView"
              }
            }
          },
          "description": "The role mapping that you want to update.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleMappingView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Update One Role Mapping in One Organization",
        "tags": [
          "Federated Authentication"
        ]
      }
    },
    "/api/{app}/v1.0/federationSettings/{federationSettingsId}/identityProviders": {
      "get": {
        "description": "Returns all identity providers in the specified federation. To use this resource, the requesting API Key must have the Organization Owner role in one of the connected organizations. This resource doesn't require the API Key to have an Access List.",
        "operationId": "getAllIdentityProviders",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/federationSettingsId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdentityProviderView"
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return all identity providers from the specified federation.",
        "tags": [
          "Federated Authentication"
        ]
      }
    },
    "/api/{app}/v1.0/federationSettings/{federationSettingsId}/identityProviders/{identityProviderId}": {
      "get": {
        "description": "Returns one identity provider from the specified federation. To use this resource, the requesting API Key must have the Organization Owner role in one of the connected organizations. This resource doesn't require the API Key to have an Access List.",
        "operationId": "getIdentityProvider",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/federationSettingsId"
          },
          {
            "$ref": "#/components/parameters/identityProviderId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityProviderView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return one identity provider from the specified federation.",
        "tags": [
          "Federated Authentication"
        ]
      },
      "patch": {
        "description": "Updates one identity provider in the specified federation. To use this resource, the requesting API Key must have the Organization Owner role in one of the connected organizations. This resource doesn't require the API Key to have an Access List.",
        "operationId": "updateIdentityProvider",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/federationSettingsId"
          },
          {
            "$ref": "#/components/parameters/identityProviderId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdentityProviderUpdate"
              }
            }
          },
          "description": "The identity provider that you want to update.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityProviderView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Update the identity provider.",
        "tags": [
          "Federated Authentication"
        ]
      }
    },
    "/api/{app}/v1.0/federationSettings/{federationSettingsId}/identityProviders/{identityProviderId}/metadata.xml": {
      "get": {
        "description": "Returns the metadata of one identity provider in the specified federation. To use this resource, the requesting API Key must have the Organization Owner role in one of the connected organizations. This resource doesn't require the API Key to have an Access List.",
        "operationId": "getIdentityProviderMetadata",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/federationSettingsId"
          },
          {
            "$ref": "#/components/parameters/identityProviderId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return the metadata of one identity provider in the specified federation.",
        "tags": [
          "Federated Authentication"
        ]
      }
    },
    "/api/{app}/v1.0/groups/{groupId}/alertConfigs": {
      "get": {
        "description": "Returns all alert configurations for one project. These alert configurations apply to any component in the project. Alert configurations define the triggers and notification methods for alerts. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.\n\n This resource remains under revision and may change. Refer to the [legacy documentation for this resource](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-all-configs/).",
        "operationId": "returnAllAlertConfigurationsForOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAlertConfigView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Alert Configurations for One Project",
        "tags": [
          "Alert Configurations"
        ]
      },
      "post": {
        "description": "Creates one alert configuration for the specified project. Alert configurations define the triggers and notification methods for alerts. To use this resource, the requesting API Key must have the Project Monitoring Admin role.\n\n This resource remains under revision and may change. Refer to the [legacy documentation for this resource](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-create-config/).",
        "operationId": "createOneAlertConfigurationInOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAlertConfigView"
              }
            }
          },
          "description": "Creates one alert configuration for the specified project.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAlertConfigView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Create One Alert Configuration in One Project",
        "tags": [
          "Alert Configurations"
        ]
      }
    },
    "/api/{app}/v1.0/groups/{groupId}/alertConfigs/{alertConfigId}": {
      "delete": {
        "description": "Removes one alert configuration from the specified project. To use this resource, the requesting API Key must have the Project Monitoring Admin role.\n\n This resource remains under revision and may change. Refer to the [legacy documentation for this resource](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-delete-config/).",
        "operationId": "removeOneAlertConfigurationFromOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the alert configuration.",
            "in": "path",
            "name": "alertConfigId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "adddde5af4ee4bd0b519375f",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Remove One Alert Configuration from One Project",
        "tags": [
          "Alert Configurations"
        ]
      },
      "get": {
        "description": "Returns the specified alert configuration from the specified project. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.\n\n This resource remains under revision and may change. Refer to the [legacy documentation for this resource](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/).",
        "operationId": "returnOneAlertConfigurationFromOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the alert configuration.",
            "in": "path",
            "name": "alertConfigId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "adddde5af4ee4bd0b519375f",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAlertConfigView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Alert Configuration from One Project",
        "tags": [
          "Alert Configurations"
        ]
      },
      "patch": {
        "description": "Enables or disables the specified alert configuration in the specified project. The resource enables the specified alert configuration if currently enabled. The resource disables the specified alert configuration if currently disabled. To use this resource, the requesting API Key must have the Project Monitoring Admin role.\n\n This resource remains under revision and may change. Refer to the [legacy documentation for this resource](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-enable-disable-config/).",
        "operationId": "toggleOneStateOfOneAlertConfigurationInOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the alert configuration that triggered this alert.",
            "in": "path",
            "name": "alertConfigId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "adddde5af4ee4bd0b519375f",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "boolean",
                "description": "Flag that indicates whether to enable or disable the specified alert configuration in the specified project."
              }
            }
          },
          "description": "Enables or disables the specified alert configuration in the specified project.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAlertConfigView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Toggle One State of One Alert Configuration in One Project",
        "tags": [
          "Alert Configurations"
        ]
      },
      "put": {
        "description": "Updates one alert configuration in the specified project. Alert configurations define the triggers and notification methods for alerts. To use this resource, the requesting API Key must have the Project Monitoring Admin role.\n\n This resource remains under revision and may change. Refer to the [legacy documentation for this resource](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-update-config/).",
        "operationId": "updateOneAlertConfigurationForOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the alert configuration.",
            "in": "path",
            "name": "alertConfigId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "adddde5af4ee4bd0b519375f",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAlertConfigView"
              }
            }
          },
          "description": "Updates one alert configuration in the specified project.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAlertConfigView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Update One Alert Configuration for One Project",
        "tags": [
          "Alert Configurations"
        ]
      }
    },
    "/api/{app}/v1.0/groups/{groupId}/alertConfigs/{alertConfigId}/alerts": {
      "get": {
        "description": "Returns all open alerts that the specified alert configuration triggers. These alert configurations apply to the specified project only. Alert configurations define the triggers and notification methods for alerts. Open alerts have been triggered but remain unacknowledged. To use this resource, the requesting API Key must have the Project Read Only role.\n\n This resource remains under revision and may change. Refer to the [legacy documentation for this resource](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-open-alerts/).",
        "operationId": "returnAllOpenAlertsForAlertConfiguration",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the alert configuration.",
            "in": "path",
            "name": "alertConfigId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "adddde5af4ee4bd0b519375f",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAlertView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Open Alerts for Alert Configuration",
        "tags": [
          "Alert Configurations"
        ]
      }
    },
    "/api/{app}/v1.0/groups/{groupId}/alerts": {
      "get": {
        "description": "Returns all alerts. These alerts apply to all components in one project. You receive an alert when a monitored component meets or exceeds a value you set. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.\n\n This resource remains under revision and may change. Refer to the [legacy documentation for this resource](https://www.mongodb.com/docs/atlas/reference/api/alerts-get-all-alerts/).",
        "operationId": "returnAllAlertsFromOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAlertView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Alerts from One Project",
        "tags": [
          "Alerts"
        ]
      }
    },
    "/api/{app}/v1.0/groups/{groupId}/alerts/{alertId}": {
      "get": {
        "description": "Returns one alert. This alert applies to any component in one project. You receive an alert when a monitored component meets or exceeds a value you set. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.\n\n This resource remains under revision and may change. Refer to the [legacy documentation for this resource](https://www.mongodb.com/docs/atlas/reference/api/alerts-get-alert/).",
        "operationId": "returnOneAlertFromOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the alert.",
            "in": "path",
            "name": "alertId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAlertView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Alert from One Project",
        "tags": [
          "Alerts"
        ]
      },
      "patch": {
        "description": "Confirms receipt of one existing alert. This alert applies to any component in one project. Acknowledging an alert prevents successive notifications. You receive an alert when a monitored component meets or exceeds a value you set until you acknowledge the alert. To use this resource, the requesting API Key must have the Project Monitoring Admin role. This resource doesn't require the API Key to have an Access List.\n\n This resource remains under revision and may change. Refer to the [legacy documentation for this resource](https://www.mongodb.com/docs/atlas/reference/api/alerts-acknowledge-alert/).",
        "operationId": "acknowledgeOneAlertFromOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the alert.",
            "in": "path",
            "name": "alertId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAlertView"
              }
            }
          },
          "description": "Confirm one alert.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAlertView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Acknowledge One Alert from One Project",
        "tags": [
          "Alerts"
        ]
      }
    },
    "/api/{app}/v1.0/groups/{groupId}/alerts/{alertId}/alertConfigs": {
      "get": {
        "description": "Returns all alert configurations set for the specified alert. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.\n\n This resource remains under revision and may change.",
        "operationId": "returnAllAlertConfigurationsSetForOneAlert",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the alert.",
            "in": "path",
            "name": "alertId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAlertConfigView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Alert Configurations Set for One Alert",
        "tags": [
          "Alerts"
        ]
      }
    },
    "/api/{app}/v1.0/groups/{groupId}/apiKeys": {
      "get": {
        "description": "Returns all organization API keys that you assigned to the specified project. Users with the Project Owner role in the project associated with the API key can use the organization API key to access the resources. To use this resource, the requesting API Key must have the Project User Admin role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Programmatic API Keys",
          "url": "https://docs.atlas.mongodb.com/configure-api-access/#std-label-atlas-prog-api-key"
        },
        "operationId": "returnAllOrganizationApiKeysAssignedToOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiApiUserView"
                  }
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Organization API Keys Assigned to One Project",
        "tags": [
          "Programmatic API Keys"
        ]
      },
      "post": {
        "description": "Creates and assigns the specified organization API key to the specified project. Users with the Project Owner role in the project associated with the API key can use the organization API key to access the resources. To use this resource, the requesting API Key must have the Project User Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "createAndAssignOneOrganizationApiKeyToOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiApiUserView"
              }
            }
          },
          "description": "Organization API key to be created and assigned to the specified project. This request requires a minimum of one of the two body parameters.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiApiUserView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Create and Assign One Organization API Key to One Project",
        "tags": [
          "Programmatic API Keys"
        ]
      }
    },
    "/api/{app}/v1.0/groups/{groupId}/apiKeys/{apiUserId}": {
      "delete": {
        "description": "Removes one organization API key from the specified project. To use this resource, the requesting API Key must have the Project User Admin role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Programmatic API Keys",
          "url": "https://docs.atlas.mongodb.com/configure-api-access/#std-label-atlas-prog-api-key"
        },
        "operationId": "unassignOneOrganizationApiKeyFromOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies this organization API key that you want to unassign from one project.",
            "in": "path",
            "name": "apiUserId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Unassign One Organization API Key from One Project",
        "tags": [
          "Programmatic API Keys"
        ]
      },
      "patch": {
        "description": "Updates the roles of the organization API key that you specify for the project that you specify. You must specify at least one valid role for the project. The application removes any roles that you do not include in this request if they were previously set in the organization API key that you specify for the project.",
        "operationId": "setApiUserGroupRoles",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiCreateApiKeyView"
              }
            }
          },
          "description": "Organization API Key to be updated. This request requires a minimum of one of the two body parameters.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiApiUserView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Update Roles of One Organization API Key to One Project",
        "tags": [
          "Programmatic API Keys"
        ]
      },
      "post": {
        "description": "Assigns the specified organization API key to the specified project. Users with the Project Owner role in the project associated with the API key can then use the organization API key to access the resources. To use this resource, the requesting API Key must have the Project User Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "assignOneOrganizationApiKeyToOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies this organization API key that you want to assign to one project.",
            "in": "path",
            "name": "apiUserId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ApiUserRoleAssignment"
                }
              }
            }
          },
          "description": "Organization API key to be assigned to the specified project.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiApiUserView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Assign One Organization API Key to One Project",
        "tags": [
          "Programmatic API Keys"
        ]
      }
    },
    "/api/{app}/v1.0/groups/{groupId}/events": {
      "get": {
        "description": "Returns one event for the specified project. Events identify significant database, billing, or security activities or status changes. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.\n\n This resource remains under revision and may change. Refer to the [legacy documentation for this resource](https://www.mongodb.com/docs/atlas/reference/api/events-projects-get-all/).",
        "operationId": "returnAllEventsFromOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "query",
            "name": "clusterNames",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
              }
            },
            "style": "form"
          },
          {
            "description": "Category of incident recorded at this moment in time.",
            "in": "query",
            "name": "eventType",
            "schema": {
              "type": "string",
              "enum": [
                "AWS_ENCRYPTION_KEY_NEEDS_ROTATION",
                "AZURE_ENCRYPTION_KEY_NEEDS_ROTATION",
                "CLUSTER_MONGOS_IS_MISSING",
                "CPS_RESTORE_FAILED",
                "CPS_RESTORE_SUCCESSFUL",
                "CPS_SNAPSHOT_BEHIND",
                "CPS_SNAPSHOT_DOWNLOAD_REQUEST_FAILED",
                "CPS_SNAPSHOT_FALLBACK_FAILED",
                "CPS_SNAPSHOT_FALLBACK_SUCCESSFUL",
                "CPS_SNAPSHOT_SUCCESSFUL",
                "CREDIT_CARD_ABOUT_TO_EXPIRE",
                "DAILY_BILL_OVER_THRESHOLD",
                "GCP_ENCRYPTION_KEY_NEEDS_ROTATION",
                "HOST_DOWN",
                "HOST_MONGOT_CRASHING_OOM",
                "JOINED_GROUP",
                "MONGOT_NOT_CRASHING_OOM",
                "NDS_X509_USER_AUTHENTICATION_CUSTOMER_CA_EXPIRATION_CHECK",
                "NDS_X509_USER_AUTHENTICATION_MANAGED_USER_CERTS_EXPIRATION_CHECK",
                "NO_PRIMARY",
                "OUTSIDE_METRIC_THRESHOLD",
                "PENDING_INVOICE_OVER_THRESHOLD",
                "PRIMARY_ELECTED",
                "REMOVED_FROM_GROUP",
                "REPLICATION_OPLOG_WINDOW_RUNNING_OUT",
                "TOO_MANY_ELECTIONS",
                "USERS_WITHOUT_MULTI_FACTOR_AUTH",
                "USER_ROLES_CHANGED_AUDIT"
              ]
            }
          },
          {
            "description": "Flag that indicates whether to include the raw document in the output. The raw document contains additional meta information about the event.",
            "in": "query",
            "name": "includeRaw",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "description": "Date and time from when MongoDB Cloud stops returning events. This parameter uses the ISO 8601 timestamp format in UTC.",
            "in": "query",
            "name": "maxDate",
            "schema": {
              "type": "string",
              "format": "date-time",
              "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$"
            }
          },
          {
            "description": "Date and time from when MongoDB Cloud starts returning events. This parameter uses the ISO 8601 timestamp format in UTC.",
            "in": "query",
            "name": "minDate",
            "schema": {
              "type": "string",
              "format": "date-time",
              "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedEventView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Events from One Project",
        "tags": [
          "Events"
        ]
      }
    },
    "/api/{app}/v1.0/groups/{groupId}/events/{eventId}": {
      "get": {
        "description": "Returns one event for the specified project. Events identify significant database, billing, or security activities or status changes. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.\n\n This resource remains under revision and may change. Refer to the [legacy documentation for this resource](https://www.mongodb.com/docs/atlas/reference/api/events-projects-get-one/).",
        "operationId": "returnOneEventFromOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the event that you want to return.",
            "in": "path",
            "name": "eventId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          },
          {
            "description": "Flag that indicates whether to include the raw document in the output. The raw document contains additional meta information about the event.",
            "in": "query",
            "name": "includeRaw",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEventView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Event from One Project",
        "tags": [
          "Events"
        ]
      }
    },
    "/api/{app}/v1.0/groups/{groupId}/integrations": {
      "get": {
        "description": "Returns the settings that permit integrations with all configured third-party services. These settings apply to all databases managed in one MongoDB Cloud project. To use this resource, the requesting API Key must have the Project Monitoring Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAllActiveThird-PartyServiceIntegrations",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedIntegrationView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Active Third-Party Service Integrations",
        "tags": [
          "Third-Party Service Integrations"
        ]
      }
    },
    "/api/{app}/v1.0/groups/{groupId}/integrations/{integrationType}": {
      "delete": {
        "description": "Removes the settings that permit configuring one third-party service integration. These settings apply to all databases managed in one MongoDB Cloud project. To use this resource, the requesting API Key must have the Project Monitoring Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "removeOneThird-PartyServiceIntegration",
        "parameters": [
          {
            "description": "Human-readable label that identifies the service which you want to integrate with MongoDB Cloud.",
            "in": "path",
            "name": "integrationType",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "PAGER_DUTY",
                "MICROSOFT_TEAMS",
                "SLACK",
                "DATADOG",
                "NEW_RELIC",
                "OPS_GENIE",
                "VICTOR_OPS",
                "FLOWDOCK",
                "WEBHOOK",
                "PROMETHEUS"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Remove One Third-Party Service Integration",
        "tags": [
          "Third-Party Service Integrations"
        ]
      },
      "get": {
        "description": "Returns the settings for configuring integration with one third-party service. These settings apply to all databases managed in one MongoDB Cloud project. To use this resource, the requesting API Key must have the Project Monitoring Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOneThird-PartyServiceIntegration",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the service which you want to integrate with MongoDB Cloud.",
            "in": "path",
            "name": "integrationType",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "PAGER_DUTY",
                "MICROSOFT_TEAMS",
                "SLACK",
                "DATADOG",
                "NEW_RELIC",
                "OPS_GENIE",
                "VICTOR_OPS",
                "FLOWDOCK",
                "WEBHOOK",
                "PROMETHEUS"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiIntegrationViewManual"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Third-Party Service Integration",
        "tags": [
          "Third-Party Service Integrations"
        ]
      },
      "post": {
        "description": "Adds the settings for configuring one third-party service integration. These settings apply to all databases managed in the specified MongoDB Cloud project. To use this resource, the requesting API Key must have the Project Monitoring Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "configureOneThird-PartyServiceIntegration",
        "parameters": [
          {
            "description": "Human-readable label that identifies the service which you want to integrate with MongoDB Cloud.",
            "in": "path",
            "name": "integrationType",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "PAGER_DUTY",
                "MICROSOFT_TEAMS",
                "SLACK",
                "DATADOG",
                "NEW_RELIC",
                "OPS_GENIE",
                "VICTOR_OPS",
                "FLOWDOCK",
                "WEBHOOK",
                "PROMETHEUS"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiIntegrationViewManual"
              }
            }
          },
          "description": "Third-party integration configuration that you want to configure for your project.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedIntegrationView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Configure One Third-Party Service Integration",
        "tags": [
          "Third-Party Service Integrations"
        ]
      },
      "put": {
        "description": "Updates the settings for configuring integration with one third-party service. These settings apply to all databases managed in one MongoDB Cloud project. To use this resource, the requesting API Key must have the Project Monitoring Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "updateOneThird-PartyServiceIntegration",
        "parameters": [
          {
            "description": "Human-readable label that identifies the service which you want to integrate with MongoDB Cloud.",
            "in": "path",
            "name": "integrationType",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "PAGER_DUTY",
                "MICROSOFT_TEAMS",
                "SLACK",
                "DATADOG",
                "NEW_RELIC",
                "OPS_GENIE",
                "VICTOR_OPS",
                "FLOWDOCK",
                "WEBHOOK",
                "PROMETHEUS"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiIntegrationViewManual"
              }
            }
          },
          "description": "Third-party integration configuration that you want to configure for your project.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedIntegrationView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Update One Third-Party Service Integration",
        "tags": [
          "Third-Party Service Integrations"
        ]
      }
    },
    "/api/{app}/v1.0/groups/{groupId}/invites": {
      "get": {
        "description": "Returns all pending invitations to the specified project. To use this resource, the requesting API Key must have the Project User Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAllProjectInvitations",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Email address of the user account invited to this project.",
            "in": "query",
            "name": "username",
            "schema": {
              "type": "string",
              "format": "email",
              "pattern": "^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedGroupInvitationView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Project Invitations",
        "tags": [
          "Projects"
        ]
      },
      "patch": {
        "description": "Updates the details of one pending invitation to the specified project. To specify which invitation to update, provide the username of the invited user. To use this resource, the requesting API Key must have the Project User Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "updateOneProjectInvitation",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiGroupInvitationRequestView"
              }
            }
          },
          "description": "Updates the details of one pending invitation to the specified project.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiGroupInvitationView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Update One Project Invitation",
        "tags": [
          "Projects"
        ]
      },
      "post": {
        "description": "Invites one MongoDB Cloud user to join the specified project. The MongoDB Cloud user must accept the invitation to access information within the specified project. To use this resource, the requesting API Key must have the Project User Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "inviteOneMongoDBCloudUserToJoinOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/envelope"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiGroupInvitationRequestView"
              }
            }
          },
          "description": "Invites one MongoDB Cloud user to join the specified project.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiGroupInvitationView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Invite One MongoDB Cloud User to Join One Project",
        "tags": [
          "Projects"
        ]
      }
    },
    "/api/{app}/v1.0/groups/{groupId}/invites/{invitationId}": {
      "delete": {
        "description": "Cancels one pending invitation sent to the specified MongoDB Cloud user to join a project. You can't cancel an invitation that the user accepted. To use this resource, the requesting API Key must have the Project User Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "cancelOneProjectInvitation",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the invitation.",
            "in": "path",
            "name": "invitationId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Cancel One Project Invitation",
        "tags": [
          "Projects"
        ]
      },
      "get": {
        "description": "Returns the details of one pending invitation to the specified project. To use this resource, the requesting API Key must have the Project User Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOneProjectInvitation",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the invitation.",
            "in": "path",
            "name": "invitationId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiGroupInvitationView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Project Invitation",
        "tags": [
          "Projects"
        ]
      },
      "patch": {
        "description": "Updates the details of one pending invitation to the specified project. To specify which invitation to update, provide the unique identification string for that invitation. To use this resource, the requesting API Key must have the Project User Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "updateOneProjectInvitationByInvitationId",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the invitation.",
            "in": "path",
            "name": "invitationId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/bothRoles"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiGroupInvitationView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Update One Project Invitation by Invitation ID",
        "tags": [
          "Projects"
        ]
      }
    },
    "/api/{app}/v1.0/groups/{groupId}/managedSlowMs/disable": {
      "delete": {
        "description": "Disables the slow operation threshold that MongoDB Cloud calculated for the specified project. The threshold determines which operations the Performance Advisor and Query Profiler considers slow. When disabled, MongoDB Cloud considers any operation that takes longer than 100 milliseconds to be slow. To use this resource, the requesting API Key must have the Project Owner role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "disableManagedSlowOperationThreshold",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Disable Managed Slow Operation Threshold",
        "tags": [
          "Performance Advisor"
        ]
      }
    },
    "/api/{app}/v1.0/groups/{groupId}/managedSlowMs/enable": {
      "post": {
        "description": "Enables MongoDB Cloud to use its slow operation threshold for the specified project. The threshold determines which operations the Performance Advisor and Query Profiler considers slow. When enabled, MongoDB Cloud uses the average execution time for operations on your cluster to determine slow-running queries. To use this resource, the requesting API Key must have the Project Owner role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "enableManagedSlowOperationThreshold",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Enable Managed Slow Operation Threshold",
        "tags": [
          "Performance Advisor"
        ]
      }
    },
    "/api/{app}/v1.0/groups/{groupId}/teams": {
      "get": {
        "description": "Returns all teams to which the authenticated user has access in the project specified using its unique 24-hexadecimal digit identifier. All members of the team share the same project access. To use this resource, the requesting API Key must have the Project Read Only role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAllTeams",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedTeamRoleView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Teams in One Project",
        "tags": [
          "Teams"
        ]
      },
      "post": {
        "description": "Adds one team to the specified project. All members of the team share the same project access. To use this resource, the requesting API Key must have the Project User Admin role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Manage Organization Teams",
          "url": "https://docs.atlas.mongodb.com/access/manage-teams-in-orgs/#std-label-manage-teams"
        },
        "operationId": "addOneOrMoreTeamsToOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiTeamRoleView"
              }
            }
          },
          "description": "Team to add to the specified project.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedTeamRoleView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Add One or More Teams to One Project",
        "tags": [
          "Teams"
        ]
      }
    },
    "/api/{app}/v1.0/groups/{groupId}/teams/{teamId}": {
      "delete": {
        "description": "Removes one team specified using its unique 24-hexadecimal digit identifier from the project specified using its unique 24-hexadecimal digit identifier. To use this resource, the requesting API Key must have the Project User Admin role.",
        "externalDocs": {
          "description": "Manage Organization Teams",
          "url": "https://docs.atlas.mongodb.com/access/manage-teams-in-orgs/#std-label-manage-teams"
        },
        "operationId": "removeOneTeamFromOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the team that you want to remove from the specified project.",
            "in": "path",
            "name": "teamId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Remove One Team from One Project",
        "tags": [
          "Teams"
        ]
      },
      "patch": {
        "description": "Updates the project roles assigned to the specified team. You can grant team roles for specific projects and grant project access roles to users in the team. All members of the team share the same project access. To use this resource, the requesting API Key must have the Project User Admin role.",
        "externalDocs": {
          "description": "Manage Organization Teams",
          "url": "https://docs.atlas.mongodb.com/access/manage-teams-in-orgs/#std-label-manage-teams"
        },
        "operationId": "updateTeamRolesInOneProject",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the team for which you want to update roles.",
            "in": "path",
            "name": "teamId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiTeamRoleView"
              }
            }
          },
          "description": "The project roles assigned to the specified team.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedTeamRoleView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Update Team Roles in One Project",
        "tags": [
          "Teams"
        ]
      }
    },
    "/api/{app}/v1.0/orgs": {
      "get": {
        "description": "Returns all organizations to which you belong. To use this resource, the requesting API Key must have the Organization Member role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAllOrganizations",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label of the organization to use to filter the returned list. Performs a case-insensitive search for an organization that starts with the specified name.",
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedOrganizationView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Organizations",
        "tags": [
          "Organizations"
        ]
      }
    },
    "/api/{app}/v1.0/orgs/{orgId}": {
      "delete": {
        "description": "Removes one specified organization. MongoDB Cloud imposes the following limits on this resource:\n\n - Organizations with active projects cannot be removed.\n - All projects in the organization must be removed before you can remove the organization.\n To use this resource, the requesting API Key must have the Organization Owner role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "removeOneOrganization",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/orgId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "402": {
            "$ref": "#/components/responses/paymentRequired"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Remove One Organization",
        "tags": [
          "Organizations"
        ]
      },
      "get": {
        "description": "Returns one organization to which the requesting API key has access. To use this resource, the requesting API Key must have the Organization Member role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOneOrganization",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiOrganizationView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Organization",
        "tags": [
          "Organizations"
        ]
      },
      "patch": {
        "description": "Renames one organization. To use this resource, the requesting API Key must have the Organization Owner role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "renameOneOrganization",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiOrganizationView"
              }
            }
          },
          "description": "Details to update on the specified organization.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiOrganizationView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Rename One Organization",
        "tags": [
          "Organizations"
        ]
      }
    },
    "/api/{app}/v1.0/orgs/{orgId}/apiKeys": {
      "get": {
        "description": "Returns all organization API keys for the specified organization. The organization API keys grant programmatic access to an organization. You can't use the API key to log into MongoDB Cloud through the console. To use this resource, the requesting API Key must have the Organization Member role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Programmatic API Keys",
          "url": "https://docs.atlas.mongodb.com/configure-api-access/#std-label-atlas-prog-api-key"
        },
        "operationId": "returnAllOrganizationApiKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiApiUserView"
                  }
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Organization API Keys",
        "tags": [
          "Programmatic API Keys"
        ]
      },
      "post": {
        "description": "Creates one API key for the specified organization. An organization API key grants programmatic access to an organization. You can't use the API key to log into the console. To use this resource, the requesting API Key must have the Organization User Admin role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Programmatic API Keys",
          "url": "https://docs.atlas.mongodb.com/configure-api-access/#std-label-atlas-prog-api-key"
        },
        "operationId": "createOneOrganizationApiKey",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiCreateApiKeyView"
              }
            }
          },
          "description": "Organization API Key to be created. This request requires a minimum of one of the two body parameters.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiApiUserView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Create One Organization API Key",
        "tags": [
          "Programmatic API Keys"
        ]
      }
    },
    "/api/{app}/v1.0/orgs/{orgId}/apiKeys/{apiUserId}": {
      "delete": {
        "description": "Removes one organization API key from the specified organization. When you remove an API key from an organization, MongoDB Cloud also removes that key from any projects that use that key. To use this resource, the requesting API Key must have the Organization User Admin role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Configure Atlas API Access",
          "url": "https://docs.atlas.mongodb.com/configure-api-access/#std-label-enable-api-access-list"
        },
        "operationId": "removeOneOrganizationApiKey",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies this organization API key.",
            "in": "path",
            "name": "apiUserId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Remove One Organization API Key",
        "tags": [
          "Programmatic API Keys"
        ]
      },
      "get": {
        "description": "Returns one organization API key. The organization API keys grant programmatic access to an organization. You can't use the API key to log into MongoDB Cloud through the user interface. To use this resource, the requesting API Key must have the  Organization Member role. This resource doesn't require the API Key to have an  Access List.",
        "externalDocs": {
          "description": "Programmatic API Keys",
          "url": "https://docs.atlas.mongodb.com/configure-api-access/#std-label-atlas-prog-api-key"
        },
        "operationId": "returnOneOrganizationApiKey",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies this organization API key that  you want to update.",
            "in": "path",
            "name": "apiUserId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiApiUserView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Organization API Key",
        "tags": [
          "Programmatic API Keys"
        ]
      },
      "patch": {
        "description": "Updates one organization API key in the specified organization. The organization API keys  grant programmatic access to an organization. To use this resource, the requesting  API Key must have the Organization User Admin role. This resource doesn't require  the API Key to have an Access List.",
        "externalDocs": {
          "description": "Programmatic API Keys",
          "url": "https://docs.atlas.mongodb.com/configure-api-access/#std-label-atlas-prog-api-key"
        },
        "operationId": "updateOneOrganizationApiKey",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies this organization API key you  want to update.",
            "in": "path",
            "name": "apiUserId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiApiUserView"
              }
            }
          },
          "description": "Organization API key to be updated. This request requires a minimum of one of the two body parameters.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiApiUserView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Update One Organization API Key",
        "tags": [
          "Programmatic API Keys"
        ]
      }
    },
    "/api/{app}/v1.0/orgs/{orgId}/apiKeys/{apiUserId}/accessList": {
      "get": {
        "description": "Returns all access list entries that you configured for the specified organization API key. To use this resource, the requesting API Key must have the Organization Member role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Programmatic API Keys",
          "url": "https://docs.atlas.mongodb.com/configure-api-access/#view-the-details-of-one-api-key-in-one-organization"
        },
        "operationId": "returnAllAccessListEntriesForOneOrganizationApiKey",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies this organization API key for which you want to return access list entries.",
            "in": "path",
            "name": "apiUserId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiUserAccessListView"
                  }
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Access List Entries for One Organization API Key",
        "tags": [
          "Programmatic API Keys"
        ]
      },
      "post": {
        "deprecated": true,
        "description": "Creates the access list entries for the specified organization API key. Resources require all API requests originate from IP addresses on the API access list. To use this resource, the requesting API Key must have the Read Write role and an entry for the project access list.",
        "operationId": "createAccessListEntriesForOneOrganizationApiKey",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies this organization API key for which you want to create a new access list entry.",
            "in": "path",
            "name": "apiUserId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ApiUserAccessListView"
                }
              }
            }
          },
          "description": "Access list entries to be created for the specified organization API key.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiUserAccessListView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Create Access List Entries for One Organization API Key",
        "tags": [
          "Programmatic API Keys"
        ]
      }
    },
    "/api/{app}/v1.0/orgs/{orgId}/apiKeys/{apiUserId}/accessList/{ipAddress}": {
      "delete": {
        "deprecated": true,
        "description": "Removes the specified access list entry from the specified organization API key. Resources require all API requests originate from the IP addresses on the API access list. To use this resource, the requesting API Key must have the Read Write role and an entry for the project access list.",
        "externalDocs": {
          "description": "Configure Atlas API Access",
          "url": "https://docs.atlas.mongodb.com/configure-api-access/#std-label-enable-api-access-list"
        },
        "operationId": "removeOneAccessListEntryForOneOrganizationApiKey",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies this organization API key for which you want to remove access list entries.",
            "in": "path",
            "name": "apiUserId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          },
          {
            "description": "One IP address or multiple IP addresses represented as one CIDR block to limit requests to API resources in the specified organization. When adding a CIDR block with a subnet mask, such as 192.0.2.0/24, use the URL-encoded value %2F for the forward slash /.",
            "in": "path",
            "name": "ipAddress",
            "required": true,
            "schema": {
              "type": "string",
              "example": "192.0.2.0%2F24",
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\\:){7}[0-9a-f]{1,4}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\\:){1,6}\\:(%2[fF][0-9]{1,3})?$"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Remove One Access List Entry for One Organization API Key",
        "tags": [
          "Programmatic API Keys"
        ]
      },
      "get": {
        "description": "Returns one access list entry for the specified organization API key. Resources require  all API requests originate from IP addresses on the API access list. To use this resource,  the requesting API Key must have the Organization Member role. This resource  doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Configure Atlas API Access",
          "url": "https://docs.atlas.mongodb.com/configure-api-access/#std-label-enable-api-access-list"
        },
        "operationId": "returnOneAccessListEntryForOneOrganizationApiKey",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "One IP address or multiple IP addresses represented as one CIDR block to limit  requests to API resources in the specified organization. When adding a CIDR block with a subnet mask, such as  192.0.2.0/24, use the URL-encoded value %2F for the forward slash /.",
            "in": "path",
            "name": "ipAddress",
            "required": true,
            "schema": {
              "type": "string",
              "example": "192.0.2.0%2F24",
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\\:){7}[0-9a-f]{1,4}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\\:){1,6}\\:(%2[fF][0-9]{1,3})?$"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies this organization API key for  which you want to return access list entries.",
            "in": "path",
            "name": "apiUserId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiUserAccessListView"
                  }
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Access List Entry for One Organization API Key",
        "tags": [
          "Programmatic API Keys"
        ]
      }
    },
    "/api/{app}/v1.0/orgs/{orgId}/events": {
      "get": {
        "description": "Returns all events for the specified organization. Events identify significant database, billing, or security activities or status changes. To use this resource, the requesting API Key must have the Organization Member role. This resource doesn't require the API Key to have an Access List.\n\n This resource remains under revision and may change. Refer to the [legacy documentation for this resource](https://www.mongodb.com/docs/atlas/reference/api/events-orgs-get-all/).",
        "operationId": "returnAllEventsFromOneOrganization",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Category of incident recorded at this moment in time.",
            "in": "query",
            "name": "eventType",
            "schema": {
              "type": "string",
              "enum": [
                "AWS_ENCRYPTION_KEY_NEEDS_ROTATION",
                "AZURE_ENCRYPTION_KEY_NEEDS_ROTATION",
                "CLUSTER_MONGOS_IS_MISSING",
                "CPS_RESTORE_FAILED",
                "CPS_RESTORE_SUCCESSFUL",
                "CPS_SNAPSHOT_BEHIND",
                "CPS_SNAPSHOT_DOWNLOAD_REQUEST_FAILED",
                "CPS_SNAPSHOT_FALLBACK_FAILED",
                "CPS_SNAPSHOT_FALLBACK_SUCCESSFUL",
                "CPS_SNAPSHOT_SUCCESSFUL",
                "CREDIT_CARD_ABOUT_TO_EXPIRE",
                "DAILY_BILL_OVER_THRESHOLD",
                "GCP_ENCRYPTION_KEY_NEEDS_ROTATION",
                "HOST_DOWN",
                "HOST_MONGOT_CRASHING_OOM",
                "JOINED_GROUP",
                "MONGOT_NOT_CRASHING_OOM",
                "NDS_X509_USER_AUTHENTICATION_CUSTOMER_CA_EXPIRATION_CHECK",
                "NDS_X509_USER_AUTHENTICATION_MANAGED_USER_CERTS_EXPIRATION_CHECK",
                "NO_PRIMARY",
                "OUTSIDE_METRIC_THRESHOLD",
                "PENDING_INVOICE_OVER_THRESHOLD",
                "PRIMARY_ELECTED",
                "REMOVED_FROM_GROUP",
                "REPLICATION_OPLOG_WINDOW_RUNNING_OUT",
                "TOO_MANY_ELECTIONS",
                "USERS_WITHOUT_MULTI_FACTOR_AUTH"
              ]
            }
          },
          {
            "description": "Flag that indicates whether to include the raw document in the output. The raw document contains additional meta information about the event.",
            "in": "query",
            "name": "includeRaw",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "description": "Date and time from when MongoDB Cloud stops returning events. This parameter uses the ISO 8601 timestamp format in UTC.",
            "in": "query",
            "name": "maxDate",
            "schema": {
              "type": "string",
              "format": "date-time",
              "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$"
            }
          },
          {
            "description": "Date and time from when MongoDB Cloud starts returning events. This parameter uses the ISO 8601 timestamp format in UTC.",
            "in": "query",
            "name": "minDate",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2021-11-17T23:15:00.060Z",
              "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z|[+-][01]\\d:[0-5]\\d)$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiEventView"
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Events from One Organization",
        "tags": [
          "Events"
        ]
      }
    },
    "/api/{app}/v1.0/orgs/{orgId}/events/{eventId}": {
      "get": {
        "description": "Returns one event for the specified organization. Events identify significant database, billing, or security activities or status changes. To use this resource, the requesting API Key must have the Organization Member role. This resource doesn't require the API Key to have an Access List.\n\n This resource remains under revision and may change. Refer to the [legacy documentation for this resource](https://www.mongodb.com/docs/atlas/reference/api/events-orgs-get-one/).",
        "operationId": "returnOneEventFromOneOrganization",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the event that you want to return.",
            "in": "path",
            "name": "eventId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          },
          {
            "description": "Flag that indicates whether to include the raw document in the output. The raw document contains additional meta information about the event.",
            "in": "query",
            "name": "includeRaw",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEventView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Event from One Organization",
        "tags": [
          "Events"
        ]
      }
    },
    "/api/{app}/v1.0/orgs/{orgId}/federationSettings": {
      "get": {
        "description": "Returns information about the federation settings for the specified organization. To use this resource, the requesting API Key must have the Organization Owner role in the connected org. This resource doesn't require the API Key to have an Access List.",
        "operationId": "getFederationSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgFederationSettingsView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return Federation Settings for One Organization",
        "tags": [
          "Organizations",
          "Federated Authentication"
        ]
      }
    },
    "/api/{app}/v1.0/orgs/{orgId}/groups": {
      "get": {
        "description": "Returns multiple projects in the specified organization. Each organization can have multiple projects. Use projects to:\n\n- Isolate different environments, such as development, test, or production environments, from each other.\n- Associate different MongoDB Cloud users or teams with different environments, or give different permission to MongoDB Cloud users in different environments.\n- Maintain separate cluster security configurations.\n- Create different alert settings.\n\nTo use this resource, the requesting API Key must have the Organization Member role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOneOrMoreProjectsInOneOrganization",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label of the project to use to filter the returned list. Performs a case-insensitive search for a project within the organization which is prefixed by the specified name.",
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAtlasGroupView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One or More Projects in One Organization",
        "tags": [
          "Organizations"
        ]
      }
    },
    "/api/{app}/v1.0/orgs/{orgId}/invites": {
      "get": {
        "description": "Returns all pending invitations to the specified organization. To use this resource, the requesting API Key must have the Organization User Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAllOrganizationInvitations",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "description": "Email address of the user account invited to this organization. If you exclude this parameter, this resource returns all pending invitations.",
            "in": "query",
            "name": "username",
            "schema": {
              "type": "string",
              "format": "email",
              "pattern": "^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedOrganizationInvitationView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Organization Invitations",
        "tags": [
          "Organizations"
        ]
      },
      "patch": {
        "description": "Updates the details of one pending invitation to the specified organization. To specify which invitation, provide the username of the invited user. To use this resource, the requesting API Key must have the Organization User Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "updateOneOrganizationInvitation",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiOrganizationInvitationRequestView"
              }
            }
          },
          "description": "Updates the details of one pending invitation to the specified organization.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiOrganizationInvitationView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Update One Organization Invitation",
        "tags": [
          "Organizations"
        ]
      },
      "post": {
        "description": "Invites one MongoDB Cloud user to join the specified organization. The user must accept the invitation to access information within the specified organization. To use this resource, the requesting API Key must have the Organization User Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "inviteOneMongoDBUserToJoinOneAtlasOrganization",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiOrganizationInvitationRequestView"
              }
            }
          },
          "description": "Invites one MongoDB Cloud user to join the specified organization.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiOrganizationInvitationView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Invite One MongoDB Cloud User to Join One Atlas Organization",
        "tags": [
          "Organizations"
        ]
      }
    },
    "/api/{app}/v1.0/orgs/{orgId}/invites/{invitationId}": {
      "delete": {
        "description": "Cancels one pending invitation sent to the specified MongoDB Cloud user to join an organization. You can't cancel an invitation that the user accepted. To use this resource, the requesting API Key must have the Organization User Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "cancelOneOrganizationInvitation",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the invitation.",
            "in": "path",
            "name": "invitationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Cancel One Organization Invitation",
        "tags": [
          "Organizations"
        ]
      },
      "get": {
        "description": "Returns the details of one pending invitation to the specified organization. To use this resource, the requesting API Key must have the Organization User Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOneOrganizationInvitation",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the invitation.",
            "in": "path",
            "name": "invitationId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiOrganizationInvitationView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Organization Invitation",
        "tags": [
          "Organizations"
        ]
      },
      "patch": {
        "description": "Updates the details of one pending invitation to the specified organization. To specify which invitation, provide the unique identification string for that invitation. To use this resource, the requesting API Key must have the Organization User Admin role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "updateOneOrganizationInvitationByInvitationId",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the invitation.",
            "in": "path",
            "name": "invitationId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/bothRoles"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiOrganizationInvitationView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Update One Organization Invitation by Invitation ID",
        "tags": [
          "Organizations"
        ]
      }
    },
    "/api/{app}/v1.0/orgs/{orgId}/invoices": {
      "get": {
        "description": "Returns all invoices that MongoDB issued to the specified organization. This list includes all invoices regardless of invoice status. To use this resource, the requesting API Key must have the Organization Member role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAllInvoicesForOneOrganization",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedApiInvoiceView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Invoices for One Organization",
        "tags": [
          "Invoices"
        ]
      }
    },
    "/api/{app}/v1.0/orgs/{orgId}/invoices/pending": {
      "get": {
        "description": "Returns all invoices accruing charges for the current billing cycle for the specified organization. To use this resource, the requesting API Key must have the Organization Member role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAllPendingInvoicesForOneOrganization",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedApiInvoiceView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Pending Invoices for One Organization",
        "tags": [
          "Invoices"
        ]
      }
    },
    "/api/{app}/v1.0/orgs/{orgId}/invoices/{invoiceId}": {
      "get": {
        "description": "Returns one invoice that MongoDB issued to the specified organization. A unique 24-hexadecimal digit string identifies the invoice. You can choose to receive this invoice in JSON or CSV format. To use this resource, the requesting API Key must have the Organization Member role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOneOrganizationInvoice",
        "parameters": [
          {
            "description": "Indicates which content types the client is able to understand. Expressed as MIME types.",
            "in": "header",
            "name": "Accept",
            "schema": {
              "type": "string",
              "default": "application/json",
              "enum": [
                "application/json",
                "text/csv"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the invoice submitted to the specified organization. Charges typically post the next day.",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiInvoiceView"
                }
              },
              "text/csv": {}
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Organization Invoice",
        "tags": [
          "Invoices"
        ]
      }
    },
    "/api/{app}/v1.0/orgs/{orgId}/invoices/{invoiceId}/csv": {
      "get": {
        "description": "Returns one invoice that MongoDB issued to the specified organization in CSV format. A unique 24-hexadecimal digit string identifies the invoice. To use this resource, the requesting API Key must have the Organization Member role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOneOrganizationInvoiceAsCsv",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the invoice submitted to the specified organization. Charges typically post the next day.",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "[0-9a-f]+"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/csv": {}
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Organization Invoice as CSV",
        "tags": [
          "Invoices"
        ]
      }
    },
    "/api/{app}/v1.0/orgs/{orgId}/teams": {
      "get": {
        "description": "Returns all teams that belong to the specified organization. Teams enable you to grant project access roles to MongoDB Cloud users. MongoDB Cloud only returns teams for which you have access. To use this resource, the requesting API Key must have the Organization Member role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Manage Organization Teams",
          "url": "https://docs.atlas.mongodb.com/access/manage-teams-in-orgs/#std-label-manage-teams"
        },
        "operationId": "returnAllTeamsInOneOrganization",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedTeamView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All Teams in One Organization",
        "tags": [
          "Teams"
        ]
      },
      "post": {
        "description": "Creates one team in the specified organization. Teams enable you to grant project access roles to MongoDB Cloud users. To use this resource, the requesting API Key must have the Organization User Admin role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Manage Organization Teams",
          "url": "https://docs.atlas.mongodb.com/access/manage-teams-in-orgs/#std-label-manage-teams"
        },
        "operationId": "createOneTeamInOneOrganization",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiTeamView"
              }
            }
          },
          "description": "Team that you want to create in the specified organization.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiTeamView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Create One Team in One Organization",
        "tags": [
          "Teams"
        ]
      }
    },
    "/api/{app}/v1.0/orgs/{orgId}/teams/byName/{teamName}": {
      "get": {
        "description": "Returns one team that you identified using its human-readable name. This team belongs to one organization. Teams enable you to grant project access roles to MongoDB Cloud users. To use this resource, the requesting API Key must have the Organization Member role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Manage Organization Teams",
          "url": "https://docs.atlas.mongodb.com/access/manage-teams-in-orgs/#std-label-manage-teams"
        },
        "operationId": "returnOneTeamUsingItsName",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Name of the team whose information you want to return.",
            "in": "path",
            "name": "teamName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiTeamView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Team using its Name",
        "tags": [
          "Teams"
        ]
      }
    },
    "/api/{app}/v1.0/orgs/{orgId}/teams/{teamId}": {
      "delete": {
        "description": "Removes one team specified using its unique 24-hexadecimal digit identifier from the organization specified using its unique 24-hexadecimal digit identifier. To use this resource, the requesting API Key must have the Organization User Admin role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Manage Organization Teams",
          "url": "https://docs.atlas.mongodb.com/access/manage-teams-in-orgs/#std-label-manage-teams"
        },
        "operationId": "removeOneTeamFromOneOrganization",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the team that you want to delete.",
            "in": "path",
            "name": "teamId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Remove One Team from One Organization",
        "tags": [
          "Teams"
        ]
      },
      "get": {
        "description": "Returns one team that you identified using its unique 24-hexadecimal digit ID. This team belongs to one organization. Teams enable you to grant project access roles to MongoDB Cloud users. To use this resource, the requesting API Key must have the Organization Member role. This resource doesn't require the API Key to have an  Access List.",
        "externalDocs": {
          "description": "Manage Organization Teams",
          "url": "https://docs.atlas.mongodb.com/access/manage-teams-in-orgs/#std-label-manage-teams"
        },
        "operationId": "returnOneTeamUsingItsId",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the team whose information you want to return.",
            "in": "path",
            "name": "teamId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiTeamView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One Team using its ID",
        "tags": [
          "Teams"
        ]
      },
      "patch": {
        "description": "Renames one team in the specified organization. Teams enable you to grant project access roles to MongoDB Cloud users. To use this resource, the requesting API Key must have the Organization User Admin role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Manage Organization Teams",
          "url": "https://docs.atlas.mongodb.com/access/manage-teams-in-orgs/#std-label-manage-teams"
        },
        "operationId": "renameOneTeam",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the team that you want to rename.",
            "in": "path",
            "name": "teamId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiTeamView"
              }
            }
          },
          "description": "Details to update on the specified team.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiTeamView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Rename One Team",
        "tags": [
          "Teams"
        ]
      }
    },
    "/api/{app}/v1.0/orgs/{orgId}/teams/{teamId}/users": {
      "get": {
        "description": "Returns all MongoDB Cloud users assigned to the team specified using its unique 24-hexadecimal digit identifier. This team belongs to one organization. Teams enable you to grant project access roles to MongoDB Cloud users. To use this resource, the requesting API Key must have the Organization Member role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Manage Organization Teams",
          "url": "https://docs.atlas.mongodb.com/access/manage-teams-in-orgs/#std-label-manage-teams"
        },
        "operationId": "returnAllMongoDBCloudUsersAssignedToOneTeam",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the team whose application users you want to return.",
            "in": "path",
            "name": "teamId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAppUserView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All MongoDB Cloud Users Assigned to One Team",
        "tags": [
          "Teams"
        ]
      },
      "post": {
        "description": "Adds one or more MongoDB Cloud users from the specified organization to the specified team. Teams enable you to grant project access roles to MongoDB Cloud users. You can assign up to 250 MongoDB Cloud users from one organization to one team. To use this resource, the requesting API Key must have the Organization User Admin role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Manage Organization Teams",
          "url": "https://docs.atlas.mongodb.com/access/manage-teams-in-orgs/#std-label-manage-teams"
        },
        "operationId": "assignOneOrganizationUserToOneTeam",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal character string that identifies the team to which you want to add MongoDB Cloud users.",
            "in": "path",
            "name": "teamId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/teamUserById"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaginatedAppUserView"
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Assign MongoDB Cloud Users from One Organization to One Team",
        "tags": [
          "Teams"
        ]
      }
    },
    "/api/{app}/v1.0/orgs/{orgId}/teams/{teamId}/users/{userId}": {
      "delete": {
        "description": "Removes one MongoDB Cloud user from the specified team. This team belongs to one organization. Teams enable you to grant project access roles to MongoDB Cloud users. To use this resource, the requesting API Key must have the Organization User Admin role. This resource doesn't require the API Key to have an Access List.",
        "externalDocs": {
          "description": "Manage Organization Teams",
          "url": "https://docs.atlas.mongodb.com/access/manage-teams-in-orgs/#std-label-manage-teams"
        },
        "operationId": "removeOneMongoDBCloudUserFromOneTeam",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the team from which you want to remove one database application user.",
            "in": "path",
            "name": "teamId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies MongoDB Cloud user that you want to remove from the specified team.",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noBody"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Remove One MongoDB Cloud User from One Team",
        "tags": [
          "Teams"
        ]
      }
    },
    "/api/{app}/v1.0/orgs/{orgId}/users": {
      "get": {
        "description": "Returns details about the MongoDB Cloud users associated with the specified organization. Each MongoDB Cloud user returned must belong to the specified organization or to a project within the specified organization. To use this resource, the requesting API Key must have the Organization Member role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnAllOrganizationAtlasUsers",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAppUserView"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return All MongoDB Cloud Users in One Organization",
        "tags": [
          "Organizations"
        ]
      }
    },
    "/api/{app}/v1.0/users": {
      "post": {
        "description": "Creates one MongoDB Cloud user account. A MongoDB Cloud user account only grants access to the MongoDB Cloud application. To grant database access, create a database user. To use this resource, the requesting API Key can have any role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "createOneCloudUser",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiAppUserView"
              }
            }
          },
          "description": "MongoDB Cloud user account to create.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAppUserView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Create One MongoDB Cloud User",
        "tags": [
          "MongoDB Cloud Users"
        ]
      }
    },
    "/api/{app}/v1.0/users/byName/{userName}": {
      "get": {
        "description": "Returns the details for one MongoDB Cloud user account with the specified username. To use this resource, the requesting API Key can have any role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOneCloudUserUsingItsUsername",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Email address that belongs to the MongoDB Cloud user account. You cannot modify this address after creating the user.",
            "in": "path",
            "name": "userName",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAppUserView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One MongoDB Cloud User using Their Username",
        "tags": [
          "MongoDB Cloud Users"
        ]
      }
    },
    "/api/{app}/v1.0/users/{userId}": {
      "get": {
        "description": "Returns the details for one MongoDB Cloud user account with the specified unique identifier for the user. To use this resource, the requesting API Key can have any role. This resource doesn't require the API Key to have an Access List.",
        "operationId": "returnOneCloudUserUsingItsId",
        "parameters": [
          {
            "$ref": "#/components/parameters/app-atlas"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies this user.",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAppUserView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          }
        },
        "summary": "Return One MongoDB Cloud User using Its ID",
        "tags": [
          "MongoDB Cloud Users"
        ]
      }
    }
  },
  "components": {
    "parameters": {
      "app-atlas": {
        "description": "Application that handles this API resource.",
        "in": "path",
        "name": "app",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "atlas"
          ]
        }
      },
      "collectionName": {
        "description": "Human-readable label that identifies the collection.",
        "in": "path",
        "name": "collectionName",
        "required": true,
        "schema": {
          "type": "string",
          "example": "mycoll"
        }
      },
      "databaseName": {
        "description": "Human-readable label that identifies the database.",
        "in": "path",
        "name": "databaseName",
        "required": true,
        "schema": {
          "type": "string",
          "example": "mydb"
        }
      },
      "end": {
        "description": "Date and time when MongoDB Cloud stops reporting the metrics. This parameter expresses its value in the ISO 8601 timestamp format in UTC. Include this parameter when you do not set **period**.",
        "in": "query",
        "name": "end",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time",
          "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?$"
        }
      },
      "envelope": {
        "description": "Flag that indicates whether Application wraps the response in an `envelope` JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.",
        "in": "query",
        "name": "envelope",
        "required": false,
        "schema": {
          "type": "boolean",
          "default": false,
          "example": false
        }
      },
      "federationSettingsId": {
        "description": "Unique 24-hexadecimal digit string that identifies your federation.",
        "in": "path",
        "name": "federationSettingsId",
        "required": true,
        "schema": {
          "type": "string",
          "example": "55fa922fb343282757d9554e",
          "maxLength": 24,
          "minLength": 24,
          "pattern": "^([a-f0-9]{24})$"
        }
      },
      "granularity": {
        "description": "Duration that specifies the interval at which Atlas reports the metrics. This parameter expresses its value in the ISO 8601 duration format in UTC.",
        "in": "query",
        "name": "granularity",
        "required": true,
        "schema": {
          "type": "string",
          "example": "PT1M"
        }
      },
      "groupId": {
        "description": "Unique 24-hexadecimal digit string that identifies your project.",
        "in": "path",
        "name": "groupId",
        "required": true,
        "schema": {
          "type": "string",
          "example": "32b6e34b3d91647abb20e7b8",
          "maxLength": 24,
          "minLength": 24,
          "pattern": "^([a-f0-9]{24})$"
        }
      },
      "identityProviderId": {
        "description": "Unique 20-hexadecimal digit string that identifies the identity provider.",
        "in": "path",
        "name": "identityProviderId",
        "required": true,
        "schema": {
          "type": "string",
          "example": "c2777a9eca931f29fc2f",
          "maxLength": 20,
          "minLength": 20,
          "pattern": "^([a-f0-9]{20})$"
        }
      },
      "includeCount": {
        "description": "Flag that indicates whether the response returns the total number of items (**totalCount**) in the response.",
        "in": "query",
        "name": "includeCount",
        "required": false,
        "schema": {
          "type": "boolean",
          "default": true,
          "example": true
        }
      },
      "indexName": {
        "description": "Human-readable label that identifies the index.",
        "in": "path",
        "name": "indexName",
        "required": true,
        "schema": {
          "type": "string",
          "example": "myindex"
        }
      },
      "itemsPerPage": {
        "description": "Number of items that the response returns per page.",
        "in": "query",
        "name": "itemsPerPage",
        "required": false,
        "schema": {
          "type": "integer",
          "default": 100,
          "example": 100,
          "maximum": 500,
          "minimum": 1
        }
      },
      "liveMigrationId": {
        "description": "Unique 24-hexadecimal digit string that identifies the migration.",
        "in": "path",
        "name": "liveMigrationId",
        "required": true,
        "schema": {
          "type": "string",
          "example": "6296fb4c7c7aa997cf94e9a8",
          "maxLength": 24,
          "minLength": 24,
          "pattern": "^([a-f0-9]{24})$"
        }
      },
      "orgId": {
        "description": "Unique 24-hexadecimal digit string that identifies the organization that contains your projects.",
        "in": "path",
        "name": "orgId",
        "required": true,
        "schema": {
          "type": "string",
          "example": "4888442a3354817a7320eb61",
          "maxLength": 24,
          "minLength": 24,
          "pattern": "^([a-f0-9]{24})$"
        }
      },
      "pageNum": {
        "description": "Number of the page that displays the current set of the total objects that the response returns.",
        "in": "query",
        "name": "pageNum",
        "required": false,
        "schema": {
          "type": "integer",
          "default": 1,
          "example": 1,
          "minimum": 1
        }
      },
      "period": {
        "description": "Duration over which Atlas reports the metrics. This parameter expresses its value in the ISO 8601 duration format in UTC. Include this parameter when you do not set **start** and **end**.",
        "in": "query",
        "name": "period",
        "required": false,
        "schema": {
          "type": "string",
          "example": "PT10H"
        }
      },
      "pretty": {
        "description": "Flag that indicates whether the response body should be in the prettyprint format.",
        "in": "query",
        "name": "pretty",
        "required": false,
        "schema": {
          "type": "boolean",
          "default": false,
          "example": false
        }
      },
      "processIdAsHost": {
        "description": "Combination of hostname and IANA port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (mongod or mongos). The port must be the IANA port on which the MongoDB process listens for requests.",
        "in": "path",
        "name": "processId",
        "required": true,
        "schema": {
          "type": "string",
          "example": "my.host.name.com:27017",
          "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$"
        }
      },
      "start": {
        "description": "Date and time when MongoDB Cloud begins reporting the metrics. This parameter expresses its value in the ISO 8601 timestamp format in UTC. Include this parameter when you do not set **period**.",
        "in": "query",
        "name": "start",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time",
          "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?$"
        }
      }
    },
    "requestBodies": {
      "bothRoles": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "minProperties": 0,
              "properties": {
                "roles": {
                  "type": "array",
                  "description": "List of one or more organization or project level roles to assign to the MongoDB Cloud user.",
                  "items": {
                    "type": "string",
                    "enum": [
                      "ORG_OWNER",
                      "ORG_MEMBER",
                      "ORG_GROUP_CREATOR",
                      "ORG_BILLING_ADMIN",
                      "ORG_READ_ONLY",
                      "GROUP_CLUSTER_MANAGER",
                      "GROUP_DATA_ACCESS_ADMIN",
                      "GROUP_DATA_ACCESS_READ_ONLY",
                      "GROUP_DATA_ACCESS_READ_WRITE",
                      "GROUP_OWNER",
                      "GROUP_READ_ONLY"
                    ]
                  },
                  "minItems": 1,
                  "uniqueItems": true
                }
              }
            }
          }
        },
        "description": "Set one or more authorization sets for one MongoDB Cloud user.",
        "required": true
      },
      "teamUserById": {
        "content": {
          "application/json": {
            "examples": {
              "addUserToTeam": {
                "value": [
                  {
                    "id": "887821d389de9fe084df2bdf"
                  }
                ]
              }
            },
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "description": "List of MongoDB Users to add to the specified team.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique 24-hexadecimal digit string that identifies the MongoDB Cloud user.",
                    "example": "887821d389de9fe084df2bdf",
                    "maxLength": 24,
                    "minLength": 24,
                    "pattern": "^([a-f0-9]{24})$",
                    "writeOnly": true
                  }
                },
                "writeOnly": true
              }
            }
          }
        },
        "description": "One or more MongoDB Cloud user that you want to add to the specified team."
      }
    },
    "responses": {
      "accepted": {
        "description": "Accepted"
      },
      "badRequest": {
        "content": {
          "application/json": {
            "example": {
              "detail": "(This is just an example, the exception may not be related to this endpoint) No provider AWS exists.",
              "error": 400,
              "errorCode": "INVALID_PROVIDER",
              "parameters": [
                "AWS"
              ],
              "reason": "Bad Request"
            },
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        },
        "description": "Bad Request"
      },
      "conflict": {
        "content": {
          "application/json": {
            "example": {
              "detail": "(This is just an example, the exception may not be related to this endpoint) Cannot delete organization link while there is active migration in following project ids: 60c4fd418ebe251047c50554",
              "error": 409,
              "errorCode": "CANNOT_DELETE_ORG_LINK_WITH_RUNNING_LIVE_EXPORT",
              "parameters": [
                "60c4fd418ebe251047c50554"
              ],
              "reason": "Conflict"
            },
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        },
        "description": "Conflict"
      },
      "forbidden": {
        "content": {
          "application/json": {
            "example": {
              "detail": "(This is just an example, the exception may not be related to this endpoint)",
              "error": 403,
              "errorCode": "CANNOT_CHANGE_GROUP_NAME",
              "parameters": [
                "EXAMPLE"
              ],
              "reason": "Forbidden"
            },
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        },
        "description": "Forbidden"
      },
      "internalServerError": {
        "content": {
          "application/json": {
            "example": {
              "detail": "(This is just an example, the exception may not be related to this endpoint)",
              "error": 500,
              "errorCode": "UNEXPECTED_ERROR",
              "parameters": [
                "EXAMPLE"
              ],
              "reason": "Internal Server Error"
            },
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        },
        "description": "Internal Server Error"
      },
      "methodNotAllowed": {
        "content": {
          "application/json": {
            "example": {
              "detail": "(This is just an example, the exception may not be related to this endpoint)",
              "error": 405,
              "errorCode": "ATLAS_BACKUP_CANCEL_SHARD_RESTORE_JOB_NOT_ALLOWED",
              "parameters": [
                "EXAMPLE"
              ],
              "reason": "Method Not Allowed"
            },
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        },
        "description": "Method Not Allowed"
      },
      "noBody": {
        "description": "This endpoint does not return a response body."
      },
      "notFound": {
        "content": {
          "application/json": {
            "example": {
              "detail": "(This is just an example, the exception may not be related to this endpoint) Cannot find resource AWS",
              "error": 404,
              "errorCode": "RESOURCE_NOT_FOUND",
              "parameters": [
                "AWS"
              ],
              "reason": "Not Found"
            },
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        },
        "description": "Not Found"
      },
      "paymentRequired": {
        "content": {
          "application/json": {
            "example": {
              "detail": "(This is just an example, the exception may not be related to this endpoint)",
              "error": 402,
              "errorCode": "NO_PAYMENT_INFORMATION_FOUND",
              "parameters": [
                "EXAMPLE"
              ],
              "reason": "Payment Required"
            },
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        },
        "description": "Payment Required"
      },
      "unauthorized": {
        "content": {
          "application/json": {
            "example": {
              "detail": "(This is just an example, the exception may not be related to this endpoint)",
              "error": 401,
              "errorCode": "NOT_ORG_GROUP_CREATOR",
              "parameters": [
                "EXAMPLE"
              ],
              "reason": "Unauthorized"
            },
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        },
        "description": "Unauthorized"
      }
    },
    "schemas": {
      "ATLAS_DATA_LAKE": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/featureUsages"
          },
          {
            "type": "object",
            "properties": {
              "featureId": {
                "$ref": "#/components/schemas/ApiAtlasCloudProviderAccessFeatureUsageDataLakeFeatureIdView"
              }
            }
          }
        ],
        "description": "Details that describe the Atlas Data Lakes linked to this Amazon Web Services (AWS) Identity and Access Management (IAM) role."
      },
      "AWS": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiAtlasCloudProviderAccessRoleView"
          },
          {
            "type": "object",
            "properties": {
              "atlasAWSAccountArn": {
                "type": "string",
                "description": "Amazon Resource Name that identifies the Amazon Web Services (AWS) user account that MongoDB Cloud uses when it assumes the Identity and Access Management (IAM) role.",
                "example": "arn:aws:iam::772401394250:role/my-test-aws-role",
                "maxLength": 2048,
                "minLength": 20,
                "readOnly": true
              },
              "atlasAssumedRoleExternalId": {
                "type": "string",
                "format": "uuid",
                "description": "Unique external ID that MongoDB Cloud uses when it assumes the IAM role in your Amazon Web Services (AWS) account.",
                "readOnly": true
              },
              "authorizedDate": {
                "type": "string",
                "format": "date-time",
                "description": "Date and time when someone authorized this role for the specified cloud service provider. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
                "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
                "readOnly": true
              },
              "createdDate": {
                "type": "string",
                "format": "date-time",
                "description": "Date and time when someone created this role for the specified cloud service provider. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
                "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
                "readOnly": true
              },
              "featureUsages": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/featureUsages"
                },
                "readOnly": true
              },
              "iamAssumedRoleArn": {
                "type": "string",
                "description": "Amazon Resource Name (ARN) that identifies the Amazon Web Services (AWS) Identity and Access Management (IAM) role that MongoDB Cloud assumes when it accesses resources in your AWS account.",
                "example": "arn:aws:iam::123456789012:root",
                "maxLength": 2048,
                "minLength": 20
              },
              "roleId": {
                "type": "string",
                "description": "Unique 24-hexadecimal digit string that identifies the role.",
                "example": "1ffa0028ed80f089383c05bf",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^([a-f0-9]{24})$",
                "readOnly": true
              }
            }
          }
        ],
        "description": "Details that describe the features linked to the Amazon Web Services (AWS) Identity and Access Management (IAM) role.",
        "required": [
          "providerName"
        ]
      },
      "AWSCustomDNSEnabledView": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Flag that indicates whether the project's clusters deployed to Amazon Web Services (AWS) use a custom Domain Name System (DNS).\nWhen `\"enabled\": true`, connect to your cluster using Private IP for Peering connection strings.",
            "externalDocs": {
              "description": "To learn more, see FAQ: Connection String Options in the MongoDB Atlas documentation.",
              "url": "https://www.mongodb.com/docs/atlas/reference/faq/connection-changes/#how-does-this-affect-aws-vpc-peering-when-i-use-custom-dns-"
            }
          }
        },
        "required": [
          "enabled"
        ]
      },
      "AccessListItemView": {
        "type": "object",
        "description": "Network addresses granted access to this API using this API key.",
        "properties": {
          "cidrBlock": {
            "type": "string",
            "description": "Range of IP addresses in Classless Inter-Domain Routing (CIDR) notation that found in this project's access list.",
            "pattern": "^((([0-9]{1,3}\\.){3}[0-9]{1,3})|([\\:]{0,2}([0-9a-f]{1,4}\\:){0,7}[0-9a-f]{1,4}[\\:]{0,2}))((%2[fF]|\\/)[0-9]{1,3})+$"
          },
          "ipAddress": {
            "type": "string",
            "description": "IP address included in the API access list.",
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}\\:){7}[0-9a-f]{1,4}$",
            "readOnly": true
          }
        },
        "required": [
          "ipAddress"
        ]
      },
      "ApiAlertConfigView": {
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when MongoDB Cloud created the alert configuration. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "enabled": {
            "type": "boolean",
            "default": false,
            "description": "Flag that indicates whether someone enabled this alert configuration for the specified project."
          },
          "eventTypeName": {
            "type": "string",
            "description": "Event type that triggers an alert.",
            "enum": [
              "AWS_ENCRYPTION_KEY_NEEDS_ROTATION",
              "AZURE_ENCRYPTION_KEY_NEEDS_ROTATION",
              "CLUSTER_MONGOS_IS_MISSING",
              "CPS_RESTORE_FAILED",
              "CPS_RESTORE_SUCCESSFUL",
              "CPS_SNAPSHOT_BEHIND",
              "CPS_SNAPSHOT_DOWNLOAD_REQUEST_FAILED",
              "CPS_SNAPSHOT_FALLBACK_FAILED",
              "CPS_SNAPSHOT_FALLBACK_SUCCESSFUL",
              "CPS_SNAPSHOT_SUCCESSFUL",
              "CREDIT_CARD_ABOUT_TO_EXPIRE",
              "DAILY_BILL_OVER_THRESHOLD",
              "GCP_ENCRYPTION_KEY_NEEDS_ROTATION",
              "HOST_DOWN",
              "JOINED_GROUP",
              "NDS_X509_USER_AUTHENTICATION_CUSTOMER_CA_EXPIRATION_CHECK",
              "NDS_X509_USER_AUTHENTICATION_MANAGED_USER_CERTS_EXPIRATION_CHECK",
              "NO_PRIMARY",
              "OUTSIDE_METRIC_THRESHOLD",
              "OUTSIDE_SERVERLESS_METRIC_THRESHOLD",
              "OUTSIDE_REALM_METRIC_THRESHOLD",
              "PENDING_INVOICE_OVER_THRESHOLD",
              "PRIMARY_ELECTED",
              "REMOVED_FROM_GROUP",
              "REPLICATION_OPLOG_WINDOW_RUNNING_OUT",
              "TOO_MANY_ELECTIONS",
              "USER_ROLES_CHANGED_AUDIT",
              "USERS_WITHOUT_MULTIFACTOR_AUTH"
            ]
          },
          "groupId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that owns this alert configuration.",
            "example": "32b6e34b3d91647abb20e7b8",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this alert configuration.",
            "example": "adddde5af4ee4bd0b519375f",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "matchers": {
            "type": "array",
            "description": "List of rules that determine whether MongoDB Cloud checks an object for the alert configuration. You can filter using the matchers array if the **eventTypeName** specifies an event for a host, replica set, or sharded cluster.",
            "items": {
              "$ref": "#/components/schemas/ApiMatcherView"
            }
          },
          "metricThreshold": {
            "$ref": "#/components/schemas/ApiMetricThresholdView"
          },
          "notifications": {
            "type": "array",
            "description": "List that contains the targets that MongoDB Cloud sends notifications.",
            "items": {
              "$ref": "#/components/schemas/ApiNotificationView"
            }
          },
          "threshold": {
            "$ref": "#/components/schemas/ApiIntegerThresholdView"
          },
          "typeName": {
            "type": "string",
            "deprecated": true,
            "description": "Human-readable label that displays the alert type.",
            "readOnly": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when someone last updated this alert configuration. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          }
        },
        "required": [
          "eventTypeName",
          "links"
        ]
      },
      "ApiAlertView": {
        "type": "object",
        "properties": {
          "acknowledgedUntil": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time until which this alert has been acknowledged. This parameter expresses its value in the ISO 8601 timestamp format in UTC. The resource returns this parameter if a MongoDB User previously acknowledged this alert.\n\n- To acknowledge this alert forever, set the parameter value to 100 years in the future.\n\n- To unacknowledge a previously acknowledged alert, set the parameter value to a date in the past.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$"
          },
          "acknowledgementComment": {
            "type": "string",
            "description": "Comment that a MongoDB Cloud user submitted when acknowledging the alert.",
            "maxLength": 200
          },
          "acknowledgingUsername": {
            "type": "string",
            "format": "email",
            "description": "MongoDB Cloud username of the person who acknowledged the alert. The response returns this parameter if a MongoDB Cloud user previously acknowledged this alert.",
            "pattern": "^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$",
            "readOnly": true
          },
          "alertConfigId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the alert configuration that sets this alert.",
            "example": "adddde5af4ee4bd0b519375f",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "clusterName": {
            "type": "string",
            "description": "Human-readable label that identifies the cluster to which this alert applies. This resource returns this parameter for alerts of events impacting backups, replica sets, or sharded clusters.",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when MongoDB Cloud created this alert. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "currentValue": {
            "$ref": "#/components/schemas/currentValue"
          },
          "eventTypeName": {
            "type": "string",
            "description": "Incident that triggered this alert.",
            "enum": [
              "AWS_ENCRYPTION_KEY_NEEDS_ROTATION",
              "AZURE_ENCRYPTION_KEY_NEEDS_ROTATION",
              "CLUSTER_MONGOS_IS_MISSING",
              "CPS_RESTORE_FAILED",
              "CPS_RESTORE_SUCCESSFUL",
              "CPS_SNAPSHOT_BEHIND",
              "CPS_SNAPSHOT_DOWNLOAD_REQUEST_FAILED",
              "CPS_SNAPSHOT_FALLBACK_FAILED",
              "CPS_SNAPSHOT_FALLBACK_SUCCESSFUL",
              "CPS_SNAPSHOT_SUCCESSFUL",
              "CREDIT_CARD_ABOUT_TO_EXPIRE",
              "DAILY_BILL_OVER_THRESHOLD",
              "GCP_ENCRYPTION_KEY_NEEDS_ROTATION",
              "HOST_DOWN",
              "JOINED_GROUP",
              "NDS_X509_USER_AUTHENTICATION_CUSTOMER_CA_EXPIRATION_CHECK",
              "NDS_X509_USER_AUTHENTICATION_MANAGED_USER_CERTS_EXPIRATION_CHECK",
              "NO_PRIMARY",
              "OUTSIDE_METRIC_THRESHOLD",
              "OUTSIDE_SERVERLESS_METRIC_THRESHOLD",
              "PENDING_INVOICE_OVER_THRESHOLD",
              "PRIMARY_ELECTED",
              "REMOVED_FROM_GROUP",
              "REPLICATION_OPLOG_WINDOW_RUNNING_OUT",
              "TOO_MANY_ELECTIONS",
              "USERS_WITHOUT_MULTIFACTOR_AUTH"
            ],
            "readOnly": true
          },
          "groupId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that owns this alert.",
            "example": "32b6e34b3d91647abb20e7b8",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "hostnameAndPort": {
            "type": "string",
            "description": "Hostname and port of the host to which this alert applies. The resource returns this parameter for alerts of events impacting hosts or replica sets.",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this alert.",
            "example": "d268e3a6e1718c6c36376f73",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "lastNotified": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time that any notifications were last sent for this alert. This parameter expresses its value in the ISO 8601 timestamp format in UTC. The resource returns this parameter if MongoDB Cloud has sent notifications for this alert.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "metricName": {
            "type": "string",
            "description": "Human-readable label that identifies the metric against which MongoDB Cloud checks the alert.",
            "enum": [
              "ASSERT_MSG",
              "ASSERT_REGULAR",
              "ASSERT_USER",
              "ASSERT_WARNING",
              "AVG_COMMAND_EXECUTION_TIME",
              "AVG_READ_EXECUTION_TIME",
              "AVG_WRITE_EXECUTION_TIME",
              "CACHE_BYTES_READ_INTO",
              "CACHE_BYTES_WRITTEN_FROM",
              "CACHE_DIRTY_BYTES",
              "CACHE_USED_BYTES",
              "COMPUTED_MEMORY",
              "CONNECTIONS",
              "CONNECTIONS_PERCENT",
              "CURSORS_TOTAL_OPEN",
              "CURSORS_TOTAL_TIMED_OUT",
              "DB_DATA_SIZE_TOTAL",
              "DB_INDEX_SIZE_TOTAL",
              "DB_STORAGE_TOTAL",
              "DISK_PARTITION_SPACE_USED_DATA",
              "DISK_PARTITION_SPACE_USED_INDEX",
              "DISK_PARTITION_SPACE_USED_JOURNAL",
              "DISK_PARTITION_UTILIZATION_DATA",
              "DISK_PARTITION_UTILIZATION_INDEX",
              "DISK_PARTITION_UTILIZATION_JOURNAL",
              "DOCUMENT_DELETED",
              "DOCUMENT_INSERTED",
              "DOCUMENT_RETURNED",
              "DOCUMENT_UPDATED",
              "EXTRA_INFO_PAGE_FAULTS",
              "FTS_MEMORY_RESIDENT",
              "FTS_MEMORY_SHARED",
              "FTS_MEMORY_VIRTUAL",
              "FTS_PROCESS_CPU_KERNEL",
              "FTS_PROCESS_CPU_USER",
              "FTS_PROCESS_DISK",
              "GLOBAL_LOCK_CURRENT_QUEUE_READERS",
              "GLOBAL_LOCK_CURRENT_QUEUE_TOTAL",
              "GLOBAL_LOCK_CURRENT_QUEUE_WRITERS",
              "LOGICAL_SIZE",
              "MEMORY_RESIDENT",
              "MEMORY_VIRTUAL",
              "NETWORK_BYTES_IN",
              "NETWORK_BYTES_OUT",
              "NETWORK_NUM_REQUESTS",
              "NORMALIZED_FTS_PROCESS_CPU_KERNEL",
              "NORMALIZED_FTS_PROCESS_CPU_USER",
              "NORMALIZED_SYSTEM_CPU_STEAL",
              "NORMALIZED_SYSTEM_CPU_USER",
              "OPCOUNTER_CMD",
              "OPCOUNTER_DELETE",
              "OPCOUNTER_GETMORE",
              "OPCOUNTER_INSERT",
              "OPCOUNTER_QUERY",
              "OPCOUNTER_REPL_CMD",
              "OPCOUNTER_REPL_DELETE",
              "OPCOUNTER_REPL_INSERT",
              "OPCOUNTER_REPL_UPDATE",
              "OPCOUNTER_UPDATE",
              "OPERATIONS_SCAN_AND_ORDER",
              "OPLOG_MASTER_LAG_TIME_DIFF",
              "OPLOG_MASTER_TIME",
              "OPLOG_RATE_GB_PER_HOUR",
              "OPLOG_SLAVE_LAG_MASTER_TIME",
              "QUERY_EXECUTOR_SCANNED",
              "QUERY_EXECUTOR_SCANNED_OBJECTS",
              "QUERY_TARGETING_SCANNED_OBJECTS_PER_RETURNED",
              "QUERY_TARGETING_SCANNED_PER_RETURNED",
              "RESTARTS_IN_LAST_HOUR",
              "SERVERLESS_CONNECTIONS",
              "SERVERLESS_CONNECTIONS_PERCENT",
              "SERVERLESS_DATA_SIZE_TOTAL",
              "SERVERLESS_NETWORK_BYTES_IN",
              "SERVERLESS_NETWORK_BYTES_OUT",
              "SERVERLESS_NETWORK_NUM_REQUESTS",
              "SERVERLESS_OPCOUNTER_CMD",
              "SERVERLESS_OPCOUNTER_DELETE",
              "SERVERLESS_OPCOUNTER_GETMORE",
              "SERVERLESS_OPCOUNTER_INSERT",
              "SERVERLESS_OPCOUNTER_QUERY",
              "SERVERLESS_OPCOUNTER_UPDATE",
              "SERVERLESS_TOTAL_READ_UNITS",
              "SERVERLESS_TOTAL_WRITE_UNITS",
              "TICKETS_AVAILABLE_READS",
              "TICKETS_AVAILABLE_WRITES"
            ],
            "readOnly": true
          },
          "replicaSetName": {
            "type": "string",
            "description": "Name of the replica set to which this alert applies. The response returns this parameter for alerts of events impacting backups, hosts, or replica sets.",
            "readOnly": true
          },
          "resolved": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time that this alert changed to `\"status\" : \"CLOSED\"`. This parameter expresses its value in the ISO 8601 timestamp format in UTC. The resource returns this parameter once `\"status\" : \"CLOSED\"`.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "State of this alert at the time you requested its details.",
            "enum": [
              "CANCELLED",
              "CLOSED",
              "OPEN",
              "TRACKING"
            ],
            "readOnly": true
          },
          "typeName": {
            "type": "string",
            "deprecated": true,
            "description": "Category in which MongoDB Cloud classifies this alert.",
            "readOnly": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when someone last updated this alert. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          }
        },
        "required": [
          "acknowledgedUntil",
          "links"
        ]
      },
      "ApiApiUserView": {
        "type": "object",
        "properties": {
          "desc": {
            "type": "string",
            "description": "Purpose or explanation provided when someone created this organization API key.",
            "maxLength": 250,
            "minLength": 1
          },
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this organization API key assigned to this project.",
            "example": "69f24ec71f746985759551c7",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "privateKey": {
            "type": "string",
            "description": "Redacted private key returned for this organization API key. This key displays unredacted when first created.",
            "example": "55c3bbb6-b4bb-0be1-e66d20841f3e",
            "maxLength": 31,
            "minLength": 31,
            "pattern": "[0-9a-f\\*]{8}-([0-9a-f\\*]{4}-){2}[0-9a-f]{12}",
            "readOnly": true
          },
          "publicKey": {
            "type": "string",
            "description": "Public API key value set for the specified organization API key.",
            "example": "zmmrboas",
            "maxLength": 8,
            "minLength": 8,
            "pattern": "^([a-z]{8})$",
            "readOnly": true
          },
          "roles": {
            "type": "array",
            "description": "List that contains the roles that the API key needs to have. All roles you provide must be valid for the specified project or organization. Each request must include a minimum of one valid role. The resource returns all project and organization roles assigned to the API key.",
            "items": {
              "$ref": "#/components/schemas/ApiRoleAssignmentView"
            }
          }
        },
        "required": [
          "links"
        ]
      },
      "ApiAppUserView": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "description": "Two alphabet characters that identifies MongoDB Cloud user's geographic location. This parameter uses the ISO 3166-1a2 code format.",
            "pattern": "^([A-Z]{2})$"
          },
          "emailAddress": {
            "type": "string",
            "description": "Email address that belongs to the MongoDB Cloud user.",
            "pattern": "^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$"
          },
          "firstName": {
            "type": "string",
            "description": "First or given name that belongs to the MongoDB Cloud user."
          },
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the MongoDB Cloud user.",
            "example": "887821d389de9fe084df2bdf",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "lastName": {
            "type": "string",
            "description": "Last name, family name, or surname that belongs to the MongoDB Cloud user."
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "mobileNumber": {
            "type": "string",
            "description": "Mobile phone number that belongs to the MongoDB Cloud user.",
            "pattern": "(?:(?:\\\\+?1\\\\s*(?:[.-]\\\\s*)?)?(?:(\\\\s*([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9])\\\\s*)|([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9]))\\\\s*(?:[.-]\\\\s*)?)([2-9]1[02-9]|[2-9][02-9]1|[2-9][02-9]{2})\\\\s*(?:[.-]\\\\s*)?([0-9]{4})$"
          },
          "password": {
            "type": "string",
            "description": "Password applied with the username to log in to MongoDB Cloud. MongoDB Cloud does not return this parameter except in response to creating a new MongoDB Cloud user. Only the MongoDB Cloud user can update their password after it has been set from the MongoDB Cloud console.",
            "minLength": 8
          },
          "roles": {
            "type": "array",
            "description": "List of objects that display the MongoDB Cloud user's roles and the corresponding organization or project to which that role applies. A role can apply to one organization or one project but not both.",
            "items": {
              "$ref": "#/components/schemas/ApiRoleAssignmentView"
            }
          },
          "teamIds": {
            "type": "array",
            "description": "List of unique 24-hexadecimal digit strings that identifies the teams to which this MongoDB Cloud user belongs.",
            "items": {
              "type": "string",
              "description": "Unique 24-hexadecimal digit string that identifies the team to which this MongoDB Cloud user belongs.",
              "example": "e254e4ade2206f4520d4107d",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            },
            "readOnly": true
          },
          "username": {
            "type": "string",
            "description": "Email address that represents the username of the MongoDB Cloud user.",
            "pattern": "^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$"
          }
        },
        "required": [
          "country",
          "emailAddress",
          "firstName",
          "lastName",
          "links",
          "mobileNumber",
          "password",
          "roles",
          "username"
        ]
      },
      "ApiAtlasAWSAutoScalingViewManual": {
        "type": "object",
        "description": "Range of instance sizes to which your cluster can scale.",
        "properties": {
          "compute": {
            "$ref": "#/components/schemas/ApiAtlasAWSComputeAutoScalingViewManual"
          }
        }
      },
      "ApiAtlasAWSCloudProviderContainerView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiAtlasCloudProviderContainerView"
          },
          {
            "type": "object",
            "properties": {
              "atlasCidrBlock": {
                "type": "string",
                "description": "IP addresses expressed in Classless Inter-Domain Routing (CIDR) notation that MongoDB Cloud uses for the network peering containers in your project. MongoDB Cloud assigns all of the project's clusters deployed to this cloud provider an IP address from this range. MongoDB Cloud locks this value if an M10 or greater cluster or a network peering connection exists in this project.\n\nThese CIDR blocks must fall within the ranges reserved per RFC 1918. AWS and Azure further limit the block to between the `/24` and  `/21` ranges.\n\nTo modify the CIDR block, the target project cannot have:\n\n- Any M10 or greater clusters\n- Any other VPC peering connections\n\n You can also create a new project and create a network peering connection to set the desired MongoDB Cloud network peering container CIDR block for that project. MongoDB Cloud limits the number of MongoDB nodes per network peering connection based on the CIDR block and the region selected for the project.\n\n **Example:** A project in an Amazon Web Services (AWS) region supporting three availability zones and an MongoDB CIDR network peering container block of limit of `/24` equals 27 three-node replica sets.",
                "pattern": "^((([0-9]{1,3}\\.){3}[0-9]{1,3})|([\\:]{0,2}([0-9a-f]{1,4}\\:){0,7}[0-9a-f]{1,4}[\\:]{0,2}))((%2[fF]|\\/)[0-9]{1,3})+$"
              },
              "regionName": {
                "type": "string",
                "description": "Geographic area that Amazon Web Services (AWS) defines to which MongoDB Cloud deployed this network peering container.",
                "enum": [
                  "US_EAST_1",
                  "US_EAST_2",
                  "US_WEST_1",
                  "US_WEST_2",
                  "CA_CENTRAL_1",
                  "EU_NORTH_1",
                  "EU_WEST_1",
                  "EU_WEST_2",
                  "EU_WEST_3",
                  "EU_CENTRAL_1",
                  "SA_EAST_1",
                  "AP_EAST_1",
                  "AP_SOUTHEAST_2",
                  "AP_SOUTHEAST_3",
                  "AP_NORTHEAST_1",
                  "AP_NORTHEAST_2",
                  "AP_NORTHEAST_3",
                  "AP_SOUTHEAST_1",
                  "AP_SOUTH_1",
                  "CN_NORTH_1",
                  "CN_NORTHWEST_1",
                  "ME_SOUTH_1",
                  "AF_SOUTH_1",
                  "EU_SOUTH_1",
                  "GLOBAL",
                  "US_GOV_WEST_1",
                  "US_GOV_EAST_1"
                ]
              },
              "vpcId": {
                "type": "string",
                "description": "Unique string that identifies the MongoDB Cloud VPC on AWS.",
                "example": "vpc-b555d3b0d9cb783b0",
                "minLength": 5,
                "pattern": "^vpc-[0-9a-f]{17}$",
                "readOnly": true
              }
            }
          }
        ],
        "description": "Collection of settings that configures the network container for a virtual private connection on Amazon Web Services.",
        "required": [
          "regionName"
        ],
        "title": "AWS"
      },
      "ApiAtlasAWSComputeAutoScalingViewManual": {
        "type": "object",
        "description": "Collection of settings that configures how a cluster might scale its cluster tier and whether the cluster can scale down. Cluster tier auto-scaling is unavailable for clusters using Low CPU or NVME storage classes.",
        "properties": {
          "maxInstanceSize": {
            "type": "string",
            "description": "Maximum instance size to which your cluster can automatically scale.",
            "enum": [
              "M10",
              "M20",
              "M30",
              "M40",
              "M50",
              "M60",
              "M80",
              "M100",
              "M140",
              "M200",
              "M300",
              "R40",
              "R50",
              "R60",
              "R80",
              "R200",
              "R300",
              "R400",
              "R700",
              "M40_NVME",
              "M50_NVME",
              "M60_NVME",
              "M80_NVME",
              "M200_NVME",
              "M400_NVME"
            ]
          },
          "minInstanceSize": {
            "type": "string",
            "description": "Minimum instance size to which your cluster can automatically scale.",
            "enum": [
              "M10",
              "M20",
              "M30",
              "M40",
              "M50",
              "M60",
              "M80",
              "M100",
              "M140",
              "M200",
              "M300",
              "R40",
              "R50",
              "R60",
              "R80",
              "R200",
              "R300",
              "R400",
              "R700",
              "M40_NVME",
              "M50_NVME",
              "M60_NVME",
              "M80_NVME",
              "M200_NVME",
              "M400_NVME"
            ]
          }
        },
        "title": "AWS"
      },
      "ApiAtlasAWSInterfaceEndpointView": {
        "type": "object",
        "description": "Group of Private Endpoint settings.",
        "properties": {
          "connectionStatus": {
            "type": "string",
            "description": "State of the Amazon Web Service PrivateLink connection when MongoDB Cloud received this request.",
            "enum": [
              "AVAILABLE",
              "DELETING",
              "PENDING_ACCEPTANCE",
              "PENDING",
              "REJECTED"
            ],
            "readOnly": true
          },
          "deleteRequested": {
            "type": "boolean",
            "description": "Flag that indicates whether MongoDB Cloud received a request to remove the specified private endpoint from the private endpoint service.",
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "description": "Error message returned when requesting private connection resource. The resource returns `null` if the request succeeded.",
            "readOnly": true
          },
          "interfaceEndpointId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the interface endpoint.",
            "example": "b55c6e799a3f084e9972f874",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          }
        },
        "title": "AWS"
      },
      "ApiAtlasAWSPeerVpcRequestView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiAtlasNetPeerRequestBase"
          },
          {
            "$ref": "#/components/schemas/ApiAtlasAWSPeerVpcView"
          }
        ]
      },
      "ApiAtlasAWSPeerVpcView": {
        "type": "object",
        "description": "Group of Network Peering connection settings.",
        "properties": {
          "accepterRegionName": {
            "type": "string",
            "description": "Amazon Web Services (AWS) region where the Virtual Peering Connection (VPC) that you peered with the MongoDB Cloud VPC resides. The resource returns `null` if your VPC and the MongoDB Cloud VPC reside in the same region."
          },
          "awsAccountId": {
            "type": "string",
            "description": "Unique twelve-digit string that identifies the Amazon Web Services (AWS) account that owns the VPC that you peered with the MongoDB Cloud VPC.",
            "maxLength": 12,
            "minLength": 12,
            "pattern": "^[0-9]{12}$"
          },
          "connectionId": {
            "type": "string",
            "description": "Unique string that identifies the peering connection on AWS.",
            "readOnly": true
          },
          "containerId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the MongoDB Cloud network container that contains the specified network peering connection.",
            "example": "2f3ed24096c4b70db8993cb7",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$"
          },
          "errorStateName": {
            "type": "string",
            "description": "Type of error that can be returned when requesting an Amazon Web Services (AWS) peering connection. The resource returns `null` if the request succeeded.",
            "enum": [
              "EXPIRED",
              "INVALID_ARGUMENT",
              "REJECTED"
            ],
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the network peering connection.",
            "example": "f29c6d03c5ca80634eeba63b",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "routeTableCidrBlock": {
            "type": "string",
            "description": "Internet Protocol (IP) addresses expressed in Classless Inter-Domain Routing (CIDR) notation of the VPC's subnet that you want to peer with the MongoDB Cloud VPC.",
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}"
          },
          "statusName": {
            "type": "string",
            "description": "State of the network peering connection at the time you made the request.",
            "enum": [
              "AVAILABLE",
              "FAILED",
              "FINALIZING",
              "INITIATING",
              "PENDING_ACCEPTANCE",
              "TERMINATING"
            ],
            "readOnly": true
          },
          "vpcId": {
            "type": "string",
            "description": "Unique string that identifies the VPC on Amazon Web Services (AWS) that you want to peer with the MongoDB Cloud VPC.",
            "minLength": 5,
            "pattern": "^vpc-[0-9a-f]{17}$"
          }
        },
        "required": [
          "accepterRegionName",
          "awsAccountId",
          "containerId",
          "routeTableCidrBlock",
          "vpcId"
        ],
        "title": "AWS"
      },
      "ApiAtlasAWSPrivateLinkConnectionView": {
        "type": "object",
        "description": "Group of Private Endpoint Service settings.",
        "properties": {
          "endpointServiceName": {
            "type": "string",
            "description": "Unique string that identifies the Amazon Web Services (AWS) PrivateLink endpoint service. MongoDB Cloud returns null while it creates the endpoint service.",
            "pattern": "^com\\.amazonaws\\.vpce\\.[a-z-0-9]+\\.vpce-svc-[0-9a-f]{17}",
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "description": "Error message returned when requesting private connection resource. The resource returns `null` if the request succeeded.",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the Private Endpoint Service.",
            "example": "3a876d84705fbf5833488cde",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "interfaceEndpoints": {
            "type": "array",
            "description": "List of strings that identify private endpoint interfaces applied to the specified project.",
            "items": {
              "type": "string",
              "description": "Unique 24-hexadecimal digit string that identifies the interface endpoint.",
              "example": "b55c6e799a3f084e9972f874",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "readOnly": true
            },
            "readOnly": true
          },
          "regionName": {
            "type": "string",
            "description": "Cloud provider region that manages this Private Endpoint Service.",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "State of the Private Endpoint Service connection when MongoDB Cloud received this request.",
            "enum": [
              "AVAILABLE",
              "DELETING",
              "FAILED",
              "INITIATING",
              "WAITING_FOR_USER"
            ],
            "readOnly": true
          }
        },
        "title": "AWS"
      },
      "ApiAtlasAWSProviderSettingsViewManual": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiAtlasProviderSettingsViewManual"
          },
          {
            "type": "object",
            "properties": {
              "autoScaling": {
                "$ref": "#/components/schemas/ApiAtlasAWSAutoScalingViewManual"
              },
              "diskIOPS": {
                "type": "number",
                "description": "Maximum Disk Input/Output Operations per Second (IOPS) that the database host can perform."
              },
              "encryptEBSVolume": {
                "type": "boolean",
                "default": true,
                "deprecated": true,
                "description": "Flag that indicates whether the Amazon Elastic Block Store (EBS) encryption feature encrypts the host's root volume for both data at rest within the volume and for data moving between the volume and the cluster. Clusters always have this setting enabled."
              },
              "instanceSizeName": {
                "type": "string",
                "description": "Cluster tier, with a default storage and memory capacity, that applies to all the data-bearing hosts in your cluster.",
                "enum": [
                  "M10",
                  "M20",
                  "M30",
                  "M40",
                  "M50",
                  "M60",
                  "M80",
                  "M100",
                  "M140",
                  "M200",
                  "M300",
                  "R40",
                  "R50",
                  "R60",
                  "R80",
                  "R200",
                  "R300",
                  "R400",
                  "R700",
                  "M40_NVME",
                  "M50_NVME",
                  "M60_NVME",
                  "M80_NVME",
                  "M200_NVME",
                  "M400_NVME"
                ]
              },
              "regionName": {
                "type": "string",
                "description": "Human-readable label that identifies the geographic location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases. For multi-region clusters, see **replicationSpec.region**.",
                "enum": [
                  "US_GOV_WEST_1",
                  "US_GOV_EAST_1",
                  "US_EAST_1",
                  "US_EAST_2",
                  "US_WEST_1",
                  "US_WEST_2",
                  "CA_CENTRAL_1",
                  "EU_NORTH_1",
                  "EU_WEST_1",
                  "EU_WEST_2",
                  "EU_WEST_3",
                  "EU_CENTRAL_1",
                  "AP_EAST_1",
                  "AP_NORTHEAST_1",
                  "AP_NORTHEAST_2",
                  "AP_NORTHEAST_3",
                  "AP_SOUTHEAST_1",
                  "AP_SOUTHEAST_2",
                  "AP_SOUTHEAST_3",
                  "AP_SOUTH_1",
                  "SA_EAST_1",
                  "CN_NORTH_1",
                  "CN_NORTHWEST_1",
                  "ME_SOUTH_1",
                  "AF_SOUTH_1",
                  "EU_SOUTH_1",
                  "GLOBAL"
                ],
                "externalDocs": {
                  "description": "AWS",
                  "url": "https://docs.atlas.mongodb.com/reference/amazon-aws/#std-label-amazon-aws"
                }
              },
              "volumeType": {
                "type": "string",
                "description": "Disk Input/Output Operations per Second (IOPS) setting for Amazon Web Services (AWS) storage that you configure only for abbr title=\"Amazon Web Services\">AWS</abbr>. Specify whether Disk Input/Output Operations per Second (IOPS) must not exceed the default Input/Output Operations per Second (IOPS) rate for the selected volume size (`STANDARD`), or must fall within the allowable Input/Output Operations per Second (IOPS) range for the selected volume size (`PROVISIONED`).",
                "enum": [
                  "PROVISIONED",
                  "STANDARD"
                ]
              }
            }
          }
        ]
      },
      "ApiAtlasAWSRegionNameView": {
        "type": "string",
        "description": "Amazon Web Services Regions",
        "enum": [
          "AP_NORTHEAST_1",
          "AP_NORTHEAST_2",
          "AP_SOUTH_1",
          "AP_SOUTHEAST_1",
          "AP_SOUTHEAST_2",
          "AP_SOUTHEAST_3",
          "CA_CENTRAL_1",
          "EU_CENTRAL_1",
          "EU_WEST_1",
          "EU_WEST_2",
          "EU_WEST_3",
          "SA_EAST_1",
          "US_EAST_1",
          "US_EAST_2",
          "US_WEST_1",
          "US_WEST_2"
        ]
      },
      "ApiAtlasAWSRegionsManual": {
        "type": "string",
        "description": "Physical location where MongoDB Cloud deploys your AWS-hosted MongoDB cluster nodes. The region you choose can affect network latency for clients accessing your databases.\nWhen MongoDB Cloud deploys a dedicated cluster, it checks if a VPC or VPC connection exists for that provider and region. If not, MongoDB Cloud creates them as part of the deployment. MongoDB Cloud assigns the VPC a CIDR block.\nTo limit a new VPC peering connection to one CIDR block and region, create the connection first. Deploy the cluster after the connection starts.",
        "enum": [
          "AF_SOUTH_1",
          "AP_EAST_1",
          "AP_NORTHEAST_1",
          "AP_NORTHEAST_2",
          "AP_NORTHEAST_3",
          "AP_SOUTH_1",
          "AP_SOUTHEAST_1",
          "AP_SOUTHEAST_2",
          "AP_SOUTHEAST_3",
          "CA_CENTRAL_1",
          "CN_NORTH_1",
          "CN_NORTHWEST_1",
          "EU_CENTRAL_1",
          "EU_NORTH_1",
          "EU_SOUTH_1",
          "EU_WEST_1",
          "EU_WEST_2",
          "EU_WEST_3",
          "ME_SOUTH_1",
          "SA_EAST_1",
          "US_EAST_1",
          "US_EAST_2",
          "US_GOV_EAST_1",
          "US_GOV_WEST_1",
          "US_WEST_1",
          "US_WEST_2"
        ],
        "title": "regionsAWS",
        "x-stoplight": {
          "id": "okgmbf20d9lvm"
        }
      },
      "ApiAtlasAWSinstanceSizesManual": {
        "type": "string",
        "enum": [
          "M10",
          "M20",
          "M30",
          "M40",
          "M50",
          "M60",
          "M80",
          "M100",
          "M140",
          "M200",
          "M300",
          "R40",
          "R50",
          "R60",
          "R80",
          "R200",
          "R300",
          "R400",
          "R700",
          "M40_NVME",
          "M50_NVME",
          "M60_NVME",
          "M80_NVME",
          "M200_NVME",
          "M400_NVME"
        ],
        "title": "AWS Cluster Instance Types"
      },
      "ApiAtlasAuditLogView": {
        "type": "object",
        "properties": {
          "auditAuthorizationSuccess": {
            "type": "boolean",
            "default": false,
            "description": "Flag that indicates whether someone set auditing to track successful authentications. This only applies to the `\"atype\" : \"authCheck\"` audit filter. Setting this parameter to `true` degrades cluster performance.",
            "externalDocs": {
              "description": "System Auditing Messages",
              "url": "https://docs.mongodb.com/manual/reference/audit-message/#audit-event-actions-details-and-results"
            }
          },
          "auditFilter": {
            "type": "string",
            "description": "JSON document that specifies which events to record. Escape any characters that may prevent parsing, such as single or double quotes, using a backslash (`\\`).",
            "externalDocs": {
              "description": "Custom Auditing Filter",
              "url": "https://docs.atlas.mongodb.com/tutorial/auditing-custom-filter/"
            }
          },
          "configurationType": {
            "type": "string",
            "description": "Human-readable label that displays how to configure the audit filter.",
            "enum": [
              "FILTER_BUILDER",
              "FILTER_JSON",
              "NONE"
            ],
            "readOnly": true
          },
          "enabled": {
            "type": "boolean",
            "default": false,
            "description": "Flag that indicates whether someone enabled database auditing for the specified project."
          }
        },
        "required": [
          "auditAuthorizationSuccess",
          "auditFilter",
          "enabled"
        ]
      },
      "ApiAtlasAutoScalingView": {
        "type": "object",
        "description": "Range of instance sizes to which your cluster can scale.",
        "externalDocs": {
          "description": "Cluster Auto-Scaling",
          "url": "https://docs.atlas.mongodb.com/cluster-autoscaling/"
        },
        "properties": {
          "compute": {
            "$ref": "#/components/schemas/ApiAtlasComputeAutoScalingView"
          },
          "diskGBEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone enabled disk auto-scaling for this cluster."
          }
        },
        "title": "Automatic Cluster Scaling Settings"
      },
      "ApiAtlasAzureAutoScalingViewManual": {
        "type": "object",
        "description": "Range of instance sizes to which your cluster can scale.",
        "properties": {
          "compute": {
            "$ref": "#/components/schemas/ApiAtlasAzureComputeAutoScalingViewManual"
          }
        }
      },
      "ApiAtlasAzureCloudProviderContainerView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiAtlasCloudProviderContainerView"
          },
          {
            "type": "object",
            "properties": {
              "atlasCidrBlock": {
                "type": "string",
                "description": "IP addresses expressed in Classless Inter-Domain Routing (CIDR) notation that MongoDB Cloud uses for the network peering containers in your project. MongoDB Cloud assigns all of the project's clusters deployed to this cloud provider an IP address from this range. MongoDB Cloud locks this value if an M10 or greater cluster or a network peering connection exists in this project.\n\nThese CIDR blocks must fall within the ranges reserved per RFC 1918. AWS and Azure further limit the block to between the `/24` and  `/21` ranges.\n\nTo modify the CIDR block, the target project cannot have:\n\n- Any M10 or greater clusters\n- Any other VPC peering connections\n\n You can also create a new project and create a network peering connection to set the desired MongoDB Cloud network peering container CIDR block for that project. MongoDB Cloud limits the number of MongoDB nodes per network peering connection based on the CIDR block and the region selected for the project.\n\n **Example:** A project in an Amazon Web Services (AWS) region supporting three availability zones and an MongoDB CIDR network peering container block of limit of `/24` equals 27 three-node replica sets.",
                "pattern": "^((([0-9]{1,3}\\.){3}[0-9]{1,3})|([\\:]{0,2}([0-9a-f]{1,4}\\:){0,7}[0-9a-f]{1,4}[\\:]{0,2}))((%2[fF]|\\/)[0-9]{1,3})+$"
              },
              "azureSubscriptionId": {
                "type": "string",
                "format": "uuid",
                "description": "Unique string that identifies the Azure subscription in which the MongoDB Cloud VNet resides.",
                "example": "a3e69124-ddee-11ec-9d64-0242ac120002",
                "pattern": "^[0-9A-F]{8}-([0-9A-F]{4}-){3}[0-9A-F]{12}$",
                "readOnly": true
              },
              "region": {
                "type": "string",
                "description": "Azure region to which MongoDB Cloud deployed this network peering container.",
                "enum": [
                  "US_CENTRAL",
                  "US_EAST",
                  "US_EAST_2",
                  "US_NORTH_CENTRAL",
                  "US_WEST",
                  "US_SOUTH_CENTRAL",
                  "EUROPE_NORTH",
                  "EUROPE_WEST",
                  "US_WEST_CENTRAL",
                  "US_WEST_2",
                  "US_WEST_3",
                  "CANADA_EAST",
                  "CANADA_CENTRAL",
                  "BRAZIL_SOUTH",
                  "BRAZIL_SOUTHEAST",
                  "AUSTRALIA_EAST",
                  "AUSTRALIA_SOUTH_EAST",
                  "AUSTRALIA_CENTRAL",
                  "AUSTRALIA_CENTRAL_2",
                  "UAE_NORTH",
                  "GERMANY_CENTRAL",
                  "GERMANY_NORTH_EAST",
                  "GERMANY_WEST_CENTRAL",
                  "GERMANY_NORTH",
                  "SWITZERLAND_NORTH",
                  "SWITZERLAND_WEST",
                  "SWEDEN_CENTRAL",
                  "SWEDEN_SOUTH",
                  "UK_SOUTH",
                  "UK_WEST",
                  "INDIA_CENTRAL",
                  "INDIA_WEST",
                  "INDIA_SOUTH",
                  "CHINA_EAST",
                  "CHINA_NORTH",
                  "ASIA_EAST",
                  "JAPAN_EAST",
                  "JAPAN_WEST",
                  "ASIA_SOUTH_EAST",
                  "KOREA_CENTRAL",
                  "KOREA_SOUTH",
                  "FRANCE_CENTRAL",
                  "FRANCE_SOUTH",
                  "SOUTH_AFRICA_NORTH",
                  "SOUTH_AFRICA_WEST",
                  "NORWAY_EAST",
                  "NORWAY_WEST",
                  "UAE_CENTRAL"
                ]
              },
              "vnetName": {
                "type": "string",
                "description": "Unique string that identifies the Azure VNet in which MongoDB Cloud clusters in this network peering container exist. The response returns **null** if no clusters exist in this network peering container.",
                "maxLength": 38,
                "minLength": 38,
                "pattern": "^([-\\w._()])+$",
                "readOnly": true
              }
            }
          }
        ],
        "description": "Collection of settings that configures the network container for a virtual private connection on Amazon Web Services.",
        "required": [
          "atlasCidrBlock",
          "region"
        ],
        "title": "AZURE"
      },
      "ApiAtlasAzureComputeAutoScalingViewManual": {
        "type": "object",
        "description": "Collection of settings that configures how a cluster might scale its cluster tier and whether the cluster can scale down. Cluster tier auto-scaling is unavailable for clusters using Low CPU or NVME storage classes.",
        "properties": {
          "maxInstanceSize": {
            "type": "string",
            "description": "Maximum instance size to which your cluster can automatically scale.",
            "enum": [
              "M10",
              "M20",
              "M30",
              "M40",
              "M50",
              "M60",
              "M80",
              "M90",
              "M200",
              "R40",
              "R50",
              "R60",
              "R80",
              "R200",
              "R300",
              "R400"
            ]
          },
          "minInstanceSize": {
            "type": "string",
            "description": "Minimum instance size to which your cluster can automatically scale.",
            "enum": [
              "M10",
              "M20",
              "M30",
              "M40",
              "M50",
              "M60",
              "M80",
              "M90",
              "M200",
              "R40",
              "R50",
              "R60",
              "R80",
              "R200",
              "R300",
              "R400"
            ]
          }
        },
        "title": "Azure"
      },
      "ApiAtlasAzureInstanceSizesManual": {
        "type": "string",
        "enum": [
          "M10",
          "M20",
          "M30",
          "M40",
          "M50",
          "M60",
          "M80",
          "M90",
          "M200",
          "R40",
          "R50",
          "R60",
          "R80",
          "R200",
          "R300",
          "R400"
        ],
        "title": "Azure Cluster Instance Types"
      },
      "ApiAtlasAzurePeerNetworkRequestView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiAtlasNetPeerRequestBase"
          },
          {
            "$ref": "#/components/schemas/ApiAtlasAzurePeerNetworkView"
          }
        ]
      },
      "ApiAtlasAzurePeerNetworkView": {
        "type": "object",
        "description": "Group of Network Peering connection settings.",
        "properties": {
          "azureDirectoryId": {
            "type": "string",
            "description": "Unique string that identifies the Azure AD directory in which the VNet peered with the MongoDB Cloud VNet resides.",
            "maxLength": 32,
            "minLength": 32,
            "pattern": "^[0-9A-F]{8}-([0-9A-F]{4}-){3}[0-9A-F]{12}$"
          },
          "azureSubscriptionId": {
            "type": "string",
            "description": "Unique string that identifies the Azure subscription in which the VNet you peered with the MongoDB Cloud VNet resides.",
            "maxLength": 32,
            "minLength": 32,
            "pattern": "^[0-9A-F]{8}-([0-9A-F]{4}-){3}[0-9A-F]{12}$"
          },
          "containerId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the MongoDB Cloud network container that contains the specified network peering connection.",
            "example": "2f3ed24096c4b70db8993cb7",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$"
          },
          "errorState": {
            "type": "string",
            "description": "Error message returned when a requested Azure network peering resource returns `\"status\" : \"FAILED\"`. The resource returns `null` if the request succeeded.",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the network peering connection.",
            "example": "f29c6d03c5ca80634eeba63b",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "resourceGroupName": {
            "type": "string",
            "description": "Human-readable label that identifies the resource group in which the VNet to peer with the MongoDB Cloud VNet resides.",
            "pattern": "^([-\\w._()])+$"
          },
          "status": {
            "type": "string",
            "description": "State of the network peering connection at the time you made the request.",
            "enum": [
              "ADDING_PEER",
              "AVAILABLE",
              "DELETING",
              "FAILED",
              "WAITING_FOR_USER"
            ],
            "readOnly": true
          },
          "vnetName": {
            "type": "string",
            "description": "Human-readable label that identifies the VNet that you want to peer with the MongoDB Cloud VNet.",
            "pattern": "^([-\\w._()])+$"
          }
        },
        "required": [
          "azureDirectoryId",
          "azureSubscriptionId",
          "containerId",
          "resourceGroupName",
          "vnetName"
        ],
        "title": "AZURE"
      },
      "ApiAtlasAzurePrivateEndpointView": {
        "type": "object",
        "description": "Group of Private Endpoint settings.",
        "properties": {
          "deleteRequested": {
            "type": "boolean",
            "description": "Flag that indicates whether MongoDB Cloud received a request to remove the specified private endpoint from the private endpoint service.",
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "description": "Error message returned when requesting private connection resource. The resource returns `null` if the request succeeded.",
            "readOnly": true
          },
          "privateEndpointConnectionName": {
            "type": "string",
            "description": "Human-readable label that MongoDB Cloud generates that identifies the private endpoint connection.",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}%2[fF]([-\\w._()]+)%2[fF]([-\\w._()]+)",
            "readOnly": true
          },
          "privateEndpointIPAddress": {
            "type": "string",
            "format": "ipv4",
            "description": "IPv4 address of the private endpoint in your Azure VNet that someone added to this private endpoint service.",
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}"
          },
          "privateEndpointResourceId": {
            "type": "string",
            "description": "Unique string that identifies the Azure private endpoint's network interface that someone added to this private endpoint service.",
            "example": "/subscriptions/cba6d9c6-1d3f-3c11-03cb-c705d895e636/resourcegroups/qrRTqi4TSN)7yB5YLRjVDveH3.yLzpNR7Br0D3-SGrU3j0.0/providers/Microsoft.Network/privateEndpoints/pVP(vb(XeckpxtXzP0NaOsDjeWDbOK)DX8A2j2E_vBYL2.GEYIdln",
            "pattern": "^\\/subscriptions\\/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\\/resource[gG]roups\\/([-\\w._()]+)\\/providers\\/Microsoft\\.Network\\/privateEndpoints\\/([-\\w._()]+)",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "State of the Azure Private Link Service connection when MongoDB Cloud received this request.",
            "enum": [
              "AVAILABLE",
              "DELETING",
              "FAILED",
              "INITIATING"
            ],
            "readOnly": true
          }
        },
        "title": "AZURE"
      },
      "ApiAtlasAzurePrivateLinkConnectionView": {
        "type": "object",
        "description": "Group of Private Endpoint Service settings.",
        "properties": {
          "errorMessage": {
            "type": "string",
            "description": "Error message returned when requesting private connection resource. The resource returns `null` if the request succeeded.",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the Private Endpoint Service.",
            "example": "3a876d84705fbf5833488cde",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "privateEndpoints": {
            "type": "array",
            "description": "List of private endpoints assigned to this Azure Private Link Service.",
            "items": {
              "type": "string",
              "description": "Root-relative path to one private endpoint assigned to this Azure Private Link Service.",
              "pattern": "^\\/subscriptions\\/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\\/resource[gG]roups\\/([-\\w._()]+)\\/providers\\/Microsoft\\.Network\\/privateEndpoints\\/([-\\w._()]+)",
              "readOnly": true
            },
            "readOnly": true
          },
          "privateLinkServiceName": {
            "type": "string",
            "description": "Unique string that identifies the Azure Private Link Service that MongoDB Cloud manages.",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^pls_[0-9a-f]{24}$",
            "readOnly": true
          },
          "privateLinkServiceResourceId": {
            "type": "string",
            "description": "Root-relative path that identifies of the Azure Private Link Service that MongoDB Cloud manages. Use this value to create a private endpoint connection to an Azure VNet.",
            "example": "/subscriptions/ae349d51-d12b-ee3d-2a27-7d53f6479cf0/resourcegroups/KObGGz/providers/Microsoft.Network/privateLinkServices/pls_d1820713f8153388d533e9de",
            "pattern": "^\\/subscriptions\\/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\\/resource[gG]roups\\/([-\\w._()]+)\\/providers\\/Microsoft\\.Network\\/privateLinkServices\\/pls_[0-9a-f]{24}",
            "readOnly": true
          },
          "regionName": {
            "type": "string",
            "description": "Cloud provider region that manages this Private Endpoint Service.",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "State of the Private Endpoint Service connection when MongoDB Cloud received this request.",
            "enum": [
              "AVAILABLE",
              "DELETING",
              "FAILED",
              "INITIATING",
              "WAITING_FOR_USER"
            ],
            "readOnly": true
          }
        },
        "title": "AZURE"
      },
      "ApiAtlasAzureProviderSettingsViewManual": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiAtlasProviderSettingsViewManual"
          },
          {
            "type": "object",
            "properties": {
              "autoScaling": {
                "$ref": "#/components/schemas/ApiAtlasAzureAutoScalingViewManual"
              },
              "diskTypeName": {
                "type": "string",
                "default": "P2 (M10), P4 (M20 and M30), P10 (M40+)",
                "description": "Disk type that corresponds to the host's root volume for Azure instances. If omitted, the default disk type for the selected **providerSettings.instanceSizeName** applies.",
                "enum": [
                  "P2",
                  "P3",
                  "P4",
                  "P6",
                  "P10",
                  "P15",
                  "P20",
                  "P30",
                  "P40",
                  "P50"
                ],
                "externalDocs": {
                  "description": "Disk type",
                  "url": "https://docs.microsoft.com/en-us/azure/virtual-machines/premium-storage-performance#premium-storage-disk-sizes"
                }
              },
              "instanceSizeName": {
                "type": "string",
                "description": "Cluster tier, with a default storage and memory capacity, that applies to all the data-bearing hosts in your cluster.",
                "enum": [
                  "M10",
                  "M20",
                  "M30",
                  "M40",
                  "M50",
                  "M60",
                  "M80",
                  "M90",
                  "M200",
                  "R40",
                  "R50",
                  "R60",
                  "R80",
                  "R200",
                  "R300",
                  "R400"
                ]
              },
              "regionName": {
                "type": "string",
                "description": "Human-readable label that identifies the geographic location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases. For multi-region clusters, see **replicationSpec.{region}**.",
                "enum": [
                  "US_CENTRAL",
                  "US_EAST",
                  "US_EAST_2",
                  "US_NORTH_CENTRAL",
                  "US_WEST",
                  "US_SOUTH_CENTRAL",
                  "EUROPE_NORTH",
                  "EUROPE_WEST",
                  "US_WEST_CENTRAL",
                  "US_WEST_2",
                  "US_WEST_3",
                  "CANADA_EAST",
                  "CANADA_CENTRAL",
                  "BRAZIL_SOUTH",
                  "BRAZIL_SOUTHEAST",
                  "AUSTRALIA_CENTRAL",
                  "AUSTRALIA_CENTRAL_2",
                  "AUSTRALIA_EAST",
                  "AUSTRALIA_SOUTH_EAST",
                  "GERMANY_CENTRAL",
                  "GERMANY_NORTH_EAST",
                  "GERMANY_WEST_CENTRAL",
                  "GERMANY_NORTH",
                  "SWEDEN_CENTRAL",
                  "SWEDEN_SOUTH",
                  "SWITZERLAND_NORTH",
                  "SWITZERLAND_WEST",
                  "UK_SOUTH",
                  "UK_WEST",
                  "NORWAY_EAST",
                  "NORWAY_WEST",
                  "INDIA_CENTRAL",
                  "INDIA_SOUTH",
                  "INDIA_WEST",
                  "CHINA_EAST",
                  "CHINA_NORTH",
                  "ASIA_EAST",
                  "JAPAN_EAST",
                  "JAPAN_WEST",
                  "ASIA_SOUTH_EAST",
                  "KOREA_CENTRAL",
                  "KOREA_SOUTH",
                  "FRANCE_CENTRAL",
                  "FRANCE_SOUTH",
                  "SOUTH_AFRICA_NORTH",
                  "SOUTH_AFRICA_WEST",
                  "UAE_CENTRAL",
                  "UAE_NORTH"
                ],
                "externalDocs": {
                  "description": "Azure",
                  "url": "https://docs.atlas.mongodb.com/reference/microsoft-azure/"
                }
              }
            }
          }
        ]
      },
      "ApiAtlasAzureRegionsManual": {
        "type": "string",
        "description": "Physical location where MongoDB Cloud deploys your Azure-hosted MongoDB cluster nodes. The region you choose can affect network latency for clients accessing your databases.\nWhen MongoDB Cloud deploys a dedicated cluster, it checks if a VPC or VPC connection exists for that provider and region. If not, MongoDB Cloud creates them as part of the deployment. MongoDB Cloud assigns the VPC a CIDR block.\nTo limit a new VPC peering connection to one CIDR block and region, create the connection first. Deploy the cluster after the connection starts.",
        "enum": [
          "ASIA_EAST",
          "ASIA_SOUTH_EAST",
          "AUSTRALIA_CENTRAL",
          "AUSTRALIA_CENTRAL_2",
          "AUSTRALIA_EAST",
          "AUSTRALIA_SOUTH_EAST",
          "BRAZIL_SOUTH",
          "BRAZIL_SOUTHEAST",
          "CANADA_CENTRAL",
          "CANADA_EAST",
          "CHINA_EAST",
          "CHINA_NORTH",
          "EUROPE_NORTH",
          "EUROPE_WEST",
          "FRANCE_CENTRAL",
          "FRANCE_SOUTH",
          "GERMANY_CENTRAL",
          "GERMANY_NORTH",
          "GERMANY_NORTH_EAST",
          "GERMANY_WEST_CENTRAL",
          "INDIA_CENTRAL",
          "INDIA_SOUTH",
          "INDIA_WEST",
          "JAPAN_EAST",
          "JAPAN_WEST",
          "KOREA_CENTRAL",
          "KOREA_SOUTH",
          "NORWAY_EAST",
          "NORWAY_WEST",
          "SOUTH_AFRICA_NORTH",
          "SOUTH_AFRICA_WEST",
          "SWEDEN_CENTRAL",
          "SWEDEN_SOUTH",
          "SWITZERLAND_NORTH",
          "SWITZERLAND_WEST",
          "UAE_CENTRAL",
          "UAE_NORTH",
          "UK_SOUTH",
          "UK_WEST",
          "US_CENTRAL",
          "US_EAST",
          "US_EAST_2",
          "US_NORTH_CENTRAL",
          "US_SOUTH_CENTRAL",
          "US_WEST",
          "US_WEST_2",
          "US_WEST_3",
          "US_WEST_CENTRAL"
        ],
        "title": "Azure Regions",
        "x-stoplight": {
          "id": "okgmbf20d9lvm"
        }
      },
      "ApiAtlasBiConnectorView": {
        "type": "object",
        "description": "Settings needed to configure the MongoDB Connector for Business Intelligence for this cluster.",
        "externalDocs": {
          "description": "MongoDB Connector for Business Intelligence",
          "url": "https://docs.mongodb.com/bi-connector/current/"
        },
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Flag that indicates whether MongoDB Connector for Business Intelligence is enabled on the specified cluster."
          },
          "readPreference": {
            "type": "string",
            "description": "Data source node designated for the MongoDB Connector for Business Intelligence on MongoDB Cloud. The MongoDB Connector for Business Intelligence on MongoDB Cloud reads data from the primary, secondary, or analytics node based on your read preferences. Defaults to `ANALYTICS` node, or `SECONDARY` if there are no `ANALYTICS` nodes.",
            "enum": [
              "PRIMARY",
              "SECONDARY",
              "ANALYTICS"
            ],
            "externalDocs": {
              "description": "Read preferences for BI Connector",
              "url": "https://docs.atlas.mongodb.com/cluster-config/enable-bic/#std-label-bic-read-preferences"
            }
          }
        },
        "title": "MongoDB Connector for Business Intelligence Settings"
      },
      "ApiAtlasCheckpointView": {
        "type": "object",
        "properties": {
          "clusterId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the cluster that contains the checkpoint.",
            "example": "5faec72692cee15b51eb22a4",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "completed": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the checkpoint completed and the balancer restarted. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "groupId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that owns the checkpoints.",
            "example": "32b6e34b3d91647abb20e7b8",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies checkpoint.",
            "example": "866164af7f46083e4f3a964b",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "parts": {
            "type": "array",
            "description": "Metadata that describes the complete snapshot.\n\n- For a replica set, this array contains a single document.\n- For a sharded cluster, this array contains one document for each shard plus one document for the config host.",
            "items": {
              "$ref": "#/components/schemas/ApiCheckpointPartView"
            },
            "readOnly": true
          },
          "restorable": {
            "type": "boolean",
            "description": "Flag that indicates whether MongoDB Cloud can use the checkpoint for a restore.",
            "readOnly": true
          },
          "started": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the balancer stopped and began the checkpoint. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time to which the checkpoint restores. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          }
        },
        "required": [
          "links"
        ]
      },
      "ApiAtlasCloudProviderAccessFeatureUsageDataLakeFeatureIdView": {
        "type": "object",
        "description": "Identifying characteristics about the data lake linked to this Amazon Web Services (AWS) Identity and Access Management (IAM) role.",
        "properties": {
          "groupId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies your project.",
            "example": "32b6e34b3d91647abb20e7b8",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies the data lake."
          }
        }
      },
      "ApiAtlasCloudProviderAccessFeatureUsageExportSnapshotFeatureIdView": {
        "type": "object",
        "description": "Identifying characteristics about the Amazon Web Services (AWS) Simple Storage Service (S3) export bucket linked to this AWS Identity and Access Management (IAM) role.",
        "properties": {
          "exportBucketId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the AWS S3 bucket to which you export your snapshots. ",
            "example": "d705ef7f03974e8363ffee5d",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "groupId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies your project.",
            "example": "32b6e34b3d91647abb20e7b8",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          }
        }
      },
      "ApiAtlasCloudProviderAccessFeatureUsageFeatureIdView": {
        "type": "object"
      },
      "ApiAtlasCloudProviderAccessRoleView": {
        "type": "object",
        "discriminator": {
          "propertyName": "providerName"
        },
        "properties": {
          "providerName": {
            "type": "string",
            "default": "AWS",
            "description": "Human-readable label that identifies the cloud provider of the role.",
            "enum": [
              "AWS"
            ]
          }
        },
        "required": [
          "providerName"
        ]
      },
      "ApiAtlasCloudProviderAccessView": {
        "type": "object",
        "properties": {
          "awsIamRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AWS"
            }
          }
        }
      },
      "ApiAtlasCloudProviderContainerView": {
        "type": "object",
        "description": " Collection of settings that configures the network container for a virtual private connection on Amazon Web Services.",
        "discriminator": {
          "mapping": {
            "AWS": "#/components/schemas/ApiAtlasAWSCloudProviderContainerView",
            "AZURE": "#/components/schemas/ApiAtlasAzureCloudProviderContainerView",
            "GCP": "#/components/schemas/ApiAtlasGCPCloudProviderContainerView"
          },
          "propertyName": "providerName"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the network peering container.",
            "example": "2f3ed24096c4b70db8993cb7",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "providerName": {
            "type": "string",
            "default": "AWS",
            "description": "Cloud service provider that serves the requested network peering containers.",
            "enum": [
              "AWS",
              "GCP",
              "AZURE",
              "TENANT",
              "SERVERLESS"
            ]
          },
          "provisioned": {
            "type": "boolean",
            "description": "Flag that indicates whether MongoDB Cloud clusters exist in the specified network peering container.",
            "readOnly": true
          }
        },
        "readOnly": true
      },
      "ApiAtlasClusterAnalyticsAutoScalingDescManual": {
        "type": "object",
        "description": "Options that determine how this cluster scales node resources for Analytics nodes."
      },
      "ApiAtlasClusterAutoScalingDescManual": {
        "type": "object",
        "description": "Options that determine how this cluster scales node resources for Analytics nodes."
      },
      "ApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointView": {
        "type": "object",
        "description": "List that contains the private endpoints through which you connect to MongoDB Cloud when you use **connectionStrings.privateEndpoint[n].connectionString** or **connectionStrings.privateEndpoint[n].srvConnectionString**.",
        "properties": {
          "endpointId": {
            "type": "string",
            "description": "Unique string that the cloud provider uses to identify the private endpoint.",
            "readOnly": true
          },
          "providerName": {
            "type": "string",
            "description": "Cloud provider in which MongoDB Cloud deploys the private endpoint.",
            "enum": [
              "AWS",
              "AZURE",
              "GCP"
            ],
            "readOnly": true
          },
          "region": {
            "type": "string",
            "description": "Region in which MongoDB Cloud deploys the private endpoint.",
            "readOnly": true
          }
        },
        "readOnly": true
      },
      "ApiAtlasClusterDescriptionConnectionStringsPrivateEndpointView": {
        "type": "object",
        "description": "List of private endpoint connection strings that you can use to connect to this cluster through a private endpoint. This parameter returns only if you deployed a private endpoint to all regions to which you deployed this clusters' nodes.",
        "externalDocs": {
          "description": "Private Endpoint for Dedicated Cluster",
          "url": "https://docs.atlas.mongodb.com/security-private-endpoint/"
        },
        "properties": {
          "connectionString": {
            "type": "string",
            "description": "Private endpoint-aware connection string that uses the `mongodb://` protocol to connect to MongoDB Cloud through a private endpoint.",
            "readOnly": true
          },
          "endpoints": {
            "type": "array",
            "description": "List that contains the private endpoints through which you connect to MongoDB Cloud when you use **connectionStrings.privateEndpoint[n].connectionString** or **connectionStrings.privateEndpoint[n].srvConnectionString**.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointView"
            },
            "readOnly": true
          },
          "srvConnectionString": {
            "type": "string",
            "description": "Private endpoint-aware connection string that uses the `mongodb+srv://` protocol to connect to MongoDB Cloud through a private endpoint. The `mongodb+srv` protocol tells the driver to look up the seed list of hosts in the Domain Name System (DNS). This list synchronizes with the nodes in a cluster. If the connection string uses this Uniform Resource Identifier (URI) format, you don't need to append the seed list or change the Uniform Resource Identifier (URI) if the nodes change. Use this Uniform Resource Identifier (URI) format if your application supports it. If it doesn't, use connectionStrings.privateEndpoint[n].connectionString.",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "description": "MongoDB process type to which your application connects. Use `MONGOD` for replica sets and `MONGOS` for sharded clusters.",
            "enum": [
              "MONGOD",
              "MONGOS"
            ],
            "readOnly": true
          }
        },
        "readOnly": true
      },
      "ApiAtlasClusterDescriptionConnectionStringsView": {
        "type": "object",
        "description": "Collection of Uniform Resource Locators that point to the MongoDB database.",
        "properties": {
          "awsPrivateLink": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Private endpoint-aware connection strings that use AWS-hosted clusters with Amazon Web Services (AWS) PrivateLink. Each key identifies an Amazon Web Services (AWS) interface endpoint. Each value identifies the related `mongodb://` connection string that you use to connect to MongoDB Cloud through the interface endpoint that the key names.",
              "externalDocs": {
                "description": "Network Peering Connection",
                "url": "https://docs.atlas.mongodb.com/security-vpc-peering/#std-label-vpc-peering/"
              },
              "readOnly": true
            },
            "description": "Private endpoint-aware connection strings that use AWS-hosted clusters with Amazon Web Services (AWS) PrivateLink. Each key identifies an Amazon Web Services (AWS) interface endpoint. Each value identifies the related `mongodb://` connection string that you use to connect to MongoDB Cloud through the interface endpoint that the key names.",
            "externalDocs": {
              "description": "Network Peering Connection",
              "url": "https://docs.atlas.mongodb.com/security-vpc-peering/#std-label-vpc-peering/"
            },
            "readOnly": true
          },
          "awsPrivateLinkSrv": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Private endpoint-aware connection strings that use AWS-hosted clusters with Amazon Web Services (AWS) PrivateLink. Each key identifies an Amazon Web Services (AWS) interface endpoint. Each value identifies the related `mongodb://` connection string that you use to connect to Atlas through the interface endpoint that the key names.",
              "externalDocs": {
                "description": "Network Peering Connection",
                "url": "https://docs.atlas.mongodb.com/security-vpc-peering/#std-label-vpc-peering/"
              },
              "readOnly": true
            },
            "description": "Private endpoint-aware connection strings that use AWS-hosted clusters with Amazon Web Services (AWS) PrivateLink. Each key identifies an Amazon Web Services (AWS) interface endpoint. Each value identifies the related `mongodb://` connection string that you use to connect to Atlas through the interface endpoint that the key names.",
            "externalDocs": {
              "description": "Network Peering Connection",
              "url": "https://docs.atlas.mongodb.com/security-vpc-peering/#std-label-vpc-peering/"
            },
            "readOnly": true
          },
          "private": {
            "type": "string",
            "description": "Network peering connection strings for each interface Virtual Private Cloud (VPC) endpoint that you configured to connect to this cluster. This connection string uses the `mongodb+srv://` protocol. The resource returns this parameter once someone creates a network peering connection to this cluster. This protocol tells the application to look up the host seed list in the Domain Name System (DNS). This list synchronizes with the nodes in a cluster. If the connection string uses this Uniform Resource Identifier (URI) format, you don't need to append the seed list or change the URI if the nodes change. Use this URI format if your driver supports it. If it doesn't, use connectionStrings.private. For Amazon Web Services (AWS) clusters, this resource returns this parameter only if you enable custom DNS.",
            "externalDocs": {
              "description": "Network Peering Connection",
              "url": "https://docs.atlas.mongodb.com/security-vpc-peering/#std-label-vpc-peering/"
            },
            "readOnly": true
          },
          "privateEndpoint": {
            "type": "array",
            "description": "List of private endpoint connection strings that you can use to connect to this cluster through a private endpoint. This parameter returns only if you deployed a private endpoint to all regions to which you deployed this clusters' nodes.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasClusterDescriptionConnectionStringsPrivateEndpointView"
            },
            "readOnly": true
          },
          "privateSrv": {
            "type": "string",
            "description": "Network peering connection strings for each interface Virtual Private Cloud (VPC) endpoint that you configured to connect to this cluster. This connection string uses the `mongodb+srv://` protocol. The resource returns this parameter when someone creates a network peering connection to this cluster. This protocol tells the application to look up the host seed list in the Domain Name System (DNS). This list synchronizes with the nodes in a cluster. If the connection string uses this Uniform Resource Identifier (URI) format, you don't need to append the seed list or change the Uniform Resource Identifier (URI) if the nodes change. Use this Uniform Resource Identifier (URI) format if your driver supports it. If it doesn't, use `connectionStrings.private`. For Amazon Web Services (AWS) clusters, this parameter returns only if you [enable custom DNS](https://docs.atlas.mongodb.com/reference/api/aws-custom-dns-update/).",
            "externalDocs": {
              "description": "Network Peering Connection",
              "url": "https://docs.atlas.mongodb.com/security-vpc-peering/#std-label-vpc-peering/"
            },
            "readOnly": true
          },
          "standard": {
            "type": "string",
            "description": "Public connection string that you can use to connect to this cluster. This connection string uses the `mongodb://` protocol.",
            "externalDocs": {
              "description": "Connection String URI Format",
              "url": "https://docs.mongodb.com/manual/reference/connection-string/"
            },
            "readOnly": true
          },
          "standardSrv": {
            "type": "string",
            "description": "Public connection string that you can use to connect to this cluster. This connection string uses the `mongodb+srv://` protocol.",
            "externalDocs": {
              "description": "Connection String URI Format",
              "url": "https://docs.mongodb.com/manual/reference/connection-string/"
            },
            "readOnly": true
          }
        },
        "readOnly": true,
        "title": "Connection Strings"
      },
      "ApiAtlasClusterDescriptionProcessArgsView": {
        "type": "object",
        "properties": {
          "defaultReadConcern": {
            "type": "string",
            "default": "available",
            "description": "[Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster.\n\nMongoDB 4.4 clusters default to `available`. MongoDB 5.0 and later clusters default to `local`.",
            "enum": [
              "local",
              "available",
              "majority",
              "linearizable",
              "snapshot"
            ]
          },
          "defaultWriteConcern": {
            "type": "string",
            "default": "1",
            "description": "[Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster.\n\nMongoDB 4.4 clusters default to `1`. MongoDB 5.0 and later clusters default to `majority`."
          },
          "failIndexKeyTooLong": {
            "type": "boolean",
            "default": true,
            "description": "Flag that indicates whether you can insert or update documents where all indexed entries don't exceed 1024 bytes. If you set this to false, [mongod](https://docs.mongodb.com/upcoming/reference/program/mongod/#mongodb-binary-bin.mongod) writes documents that exceed this limit but doesn't index them.",
            "externalDocs": {
              "description": "This option corresponds to the `failIndexKeyTooLong` `mongod` configuration file option.",
              "url": "https://docs.mongodb.com/upcoming/reference/parameters/#mongodb-parameter-param.failIndexKeyTooLong"
            }
          },
          "javascriptEnabled": {
            "type": "boolean",
            "default": true,
            "description": "Flag that indicates whether the cluster allows execution of operations that perform server-side executions of JavaScript.",
            "externalDocs": {
              "description": "If your cluster runs a MongoDB version less than 4.4, this option corresponds to modifying the `security.javascriptEnabled` configuration file option for each `mongod` in the cluster. If your cluster runs MongoDB version 4.4 or greater, this option corresponds to modifying the `security.javascriptEnabled` configuration file option for each `mongod` and `mongos` in the cluster.",
              "url": "https://docs.mongodb.com/upcoming/reference/configuration-options/#mongodb-setting-security.javascriptEnabled"
            }
          },
          "minimumEnabledTlsProtocol": {
            "type": "string",
            "description": "Minimum Transport Layer Security (TLS) version that the cluster accepts for incoming connections. Clusters using TLS 1.0 or 1.1 should consider setting TLS 1.2 as the minimum TLS protocol version.",
            "enum": [
              "TLS1_0",
              "TLS1_1",
              "TLS1_2"
            ],
            "externalDocs": {
              "description": "This option corresponds to the `net.ssl.disabledProtocols` `mongod` configuration file option.",
              "url": "https://docs.mongodb.com/upcoming/reference/configuration-options/#mongodb-setting-net.ssl.disabledProtocols"
            }
          },
          "noTableScan": {
            "type": "boolean",
            "default": false,
            "description": "Flag that indicates whether the cluster disables executing any query that requires a collection scan to return results.",
            "externalDocs": {
              "description": "This option corresponds to the `notablescan` `mongod` configuration file option.",
              "url": "https://docs.mongodb.com/upcoming/reference/parameters/#mongodb-parameter-param.notablescan"
            }
          },
          "oplogSizeMB": {
            "type": "integer",
            "format": "int32",
            "description": "Storage limit of cluster's oplog expressed in megabytes. A value of null indicates that the cluster uses the default oplog size that MongoDB Cloud calculates.",
            "externalDocs": {
              "description": "This option corresponds to the `replication.oplogSizeMB` `mongod` configuration file option.",
              "url": "https://docs.mongodb.com/upcoming/reference/configuration-options/#mongodb-setting-replication.oplogSizeMB"
            },
            "nullable": true
          },
          "sampleRefreshIntervalBIConnector": {
            "type": "integer",
            "format": "int32",
            "default": 0,
            "description": "Interval in seconds at which the mongosqld process re-samples data to create its relational schema.",
            "externalDocs": {
              "description": "This option corresponds to the `sampleRefreshIntervalSecs` `mongosqld` option.",
              "url": "https://docs.mongodb.com/bi-connector/current/reference/mongosqld/#std-option-mongosqld.--schemaRefreshIntervalSecs"
            },
            "minimum": 0
          },
          "sampleSizeBIConnector": {
            "type": "integer",
            "format": "int32",
            "default": 1000,
            "description": "Number of documents per database to sample when gathering schema information.",
            "externalDocs": {
              "description": "This option corresponds to the `sampleSize` `mongosqld` option.",
              "url": "https://docs.mongodb.com/bi-connector/current/reference/mongosqld/#std-option-mongosqld.--sampleSize"
            },
            "minimum": 0
          }
        }
      },
      "ApiAtlasClusterDescriptionV15View": {
        "type": "object",
        "properties": {
          "backupEnabled": {
            "type": "boolean",
            "default": false,
            "description": "Flag that indicates whether the cluster can perform backups. If set to `true`, the cluster can perform backups. You must set this value to `true` for NVMe clusters. Backup uses [Cloud Backups](https://docs.atlas.mongodb.com/backup/cloud-backup/overview/) for dedicated clusters and [Shared Cluster Backups](https://docs.atlas.mongodb.com/backup/shared-tier/overview/) for tenant clusters. If set to `false`, the cluster doesn't use backups."
          },
          "biConnector": {
            "$ref": "#/components/schemas/ApiAtlasBiConnectorView"
          },
          "clusterType": {
            "type": "string",
            "description": "Configuration of nodes that comprise the cluster.",
            "enum": [
              "REPLICASET",
              "SHARDED",
              "GEOSHARDED"
            ]
          },
          "connectionStrings": {
            "$ref": "#/components/schemas/ApiAtlasClusterDescriptionConnectionStringsView"
          },
          "createDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when MongoDB Cloud created this cluster. This parameter expresses its value in ISO 8601 format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "diskSizeGB": {
            "type": "number",
            "description": "Storage capacity that the host's root volume possesses expressed in gigabytes. Increase this number to add capacity. MongoDB Cloud requires this parameter if you set **replicationSpecs**. If you specify a disk size below the minimum (10 GB), this parameter defaults to the minimum disk size value. Storage charge calculations depend on whether you choose the default value or a custom value.  The maximum value for disk storage cannot exceed 50 times the maximum RAM for the selected cluster. If you require more storage space, consider upgrading your cluster to a higher tier.",
            "maximum": 4096,
            "minimum": 10
          },
          "encryptionAtRestProvider": {
            "type": "string",
            "description": "Cloud service provider that manages your customer keys to provide an additional layer of encryption at rest for the cluster. To enable customer key management for encryption at rest, the cluster **replicationSpecs[n].regionConfigs[m].{type}Specs.instanceSize** setting must be `M10` or higher and `\"backupEnabled\" : false` or omitted entirely.",
            "enum": [
              "AWS",
              "AZURE",
              "GCP",
              "NONE"
            ],
            "externalDocs": {
              "description": "Encryption at Rest using Customer Key Management",
              "url": "https://www.mongodb.com/docs/atlas/security-kms-encryption/"
            }
          },
          "groupId": {
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the project.",
            "example": "32b6e34b3d91647abb20e7b8",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the replication object for a zone in a Global Cluster. If you include existing zones in the request, you must specify this parameter. If you add a new zone to an existing Global Cluster, you may specify this parameter. The request deletes any existing zones in a Global Cluster that you exclude from the request.",
            "example": "6492cb3770e674ece4e89b41",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "labels": {
            "type": "array",
            "description": "Collection of key-value pairs between 1 to 255 characters in length that tag and categorize the cluster. The MongoDB Cloud console doesn't display your labels.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasNDSLabelView"
            },
            "maxLength": 255,
            "minLength": 1
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "mongoDBMajorVersion": {
            "type": "string",
            "default": "5.0",
            "description": "Major MongoDB version of the cluster. MongoDB Cloud deploys the cluster with the latest stable release of the specified version.",
            "enum": [
              "4.0",
              "4.2",
              "4.4",
              "5.0"
            ]
          },
          "mongoDBVersion": {
            "type": "string",
            "description": "Version of MongoDB that the cluster runs.",
            "pattern": "([\\d]+\\.[\\d]+\\.[\\d]+)",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies the advanced cluster.",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
          },
          "paused": {
            "type": "boolean",
            "description": "Flag that indicates whether the cluster is paused.",
            "readOnly": true
          },
          "pitEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether the cluster uses continuous cloud backups.",
            "externalDocs": {
              "description": "Continuous Cloud Backups",
              "url": "https://docs.atlas.mongodb.com/backup/cloud-backup/overview/"
            }
          },
          "replicationSpecs": {
            "$ref": "#/components/schemas/ApiAtlasReplicationSpecsV15Manual"
          },
          "rootCertType": {
            "type": "string",
            "default": "ISRGROOTX1",
            "description": "Root Certificate Authority that MongoDB Cloud cluster uses. MongoDB Cloud supports Internet Security Research Group.",
            "enum": [
              "ISRGROOTX1"
            ]
          },
          "stateName": {
            "type": "string",
            "description": "Human-readable label that indicates the current operating condition of this cluster.",
            "enum": [
              "CREATING",
              "DELETED",
              "DELETING",
              "IDLE",
              "REPAIRING",
              "UPDATING"
            ],
            "readOnly": true
          },
          "versionReleaseSystem": {
            "type": "string",
            "default": "LTS",
            "description": "Method by which the cluster maintains the MongoDB versions. If value is `CONTINUOUS`, you must not specify **mongoDBMajorVersion**.",
            "enum": [
              "CONTINUOUS",
              "LTS"
            ]
          }
        },
        "required": [
          "links"
        ]
      },
      "ApiAtlasClusterHardwareSpecsV15AWSManual": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "diskIOPS": {
                "type": "integer",
                "description": "Target throughput desired for storage attached to your AWS-provisioned cluster. Only change this parameter if you:\n\n- set `\"replicationSpecs[n].regionConfigs[m].providerName\" : \"AWS\"`.\n- set `\"replicationSpecs[n].regionConfigs[m].electableSpecs.instanceSize\" : \"M30\"` or greater not including `Mxx_NVME` tiers.\n\nThe maximum input/output operations per second (IOPS) depend on the selected **.instanceSize** and **.diskSizeGB**.\nThis parameter defaults to the cluster tier's standard IOPS value.\nChanging this value impacts cluster cost.\nMongoDB Cloud enforces minimum ratios of storage capacity to system memory for given cluster tiers. This keeps cluster performance consistent with large datasets.\n\n- Instance sizes `M10` to `M40` have a ratio of disk capacity to system memory of 60:1.\n- Instance sizes greater than `M40` have a ratio of 120:1."
              },
              "ebsVolumeType": {
                "type": "string",
                "default": "PROVISIONED",
                "description": "Type of storage you want to attach to your AWS-provisioned cluster.\n\n- `STANDARD` volume types can't exceed the default input/output operations per second (IOPS) rate for the selected volume size.\n\n- `PROVISIONED` volume types must fall within the allowable IOPS range for the selected volume size.\",",
                "enum": [
                  "STANDARD",
                  "PROVISIONED"
                ]
              },
              "instanceSize": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiAtlasClusterInstanceSizesDescManual"
                  },
                  {
                    "$ref": "#/components/schemas/ApiAtlasAWSinstanceSizesManual"
                  }
                ]
              }
            }
          },
          {
            "$ref": "#/components/schemas/ApiAtlasHardwareSpecsV15NodeCountManual"
          }
        ],
        "description": "Hardware specifications for all electable nodes deployed in the region. Electable nodes can become the primary and can enable local reads. If you don't specify this option, MongoDB Cloud deploys no electable nodes to the region.",
        "title": "AWS Hardware Specifications",
        "x-examples": {
          "example-1": {
            "diskIOPS": 100,
            "ebsVolumeType": "STANDARD",
            "instanceSize": "M10",
            "nodeCount": 0
          }
        }
      },
      "ApiAtlasClusterHardwareSpecsV15AzureManual": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "instanceSize": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiAtlasClusterInstanceSizesDescManual"
                  },
                  {
                    "$ref": "#/components/schemas/ApiAtlasAzureInstanceSizesManual"
                  }
                ]
              }
            }
          },
          {
            "$ref": "#/components/schemas/ApiAtlasHardwareSpecsV15NodeCountManual"
          }
        ],
        "title": "Azure Hardware Specifications"
      },
      "ApiAtlasClusterHardwareSpecsV15GCPManual": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "instanceSize": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiAtlasClusterInstanceSizesDescManual"
                  },
                  {
                    "$ref": "#/components/schemas/ApiAtlasGCPInstanceSizesManual"
                  }
                ]
              }
            }
          },
          {
            "$ref": "#/components/schemas/ApiAtlasHardwareSpecsV15NodeCountManual"
          }
        ],
        "title": "GCP Hardware Specifications"
      },
      "ApiAtlasClusterHardwareSpecsV15TenantManual": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "instanceSize": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiAtlasClusterInstanceSizesDescManual"
                  },
                  {
                    "$ref": "#/components/schemas/ApiAtlasTenantInstanceSizesManual"
                  }
                ]
              }
            }
          },
          {
            "$ref": "#/components/schemas/ApiAtlasHardwareSpecsV15NodeCountManual"
          }
        ],
        "title": "Tenant Hardware Specifications"
      },
      "ApiAtlasClusterInstanceSizesDescManual": {
        "type": "string",
        "description": "Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size. If you deploy a Global Cluster, you must choose a instance size of `M30` or greater.",
        "title": "Cluster Instance Sizes"
      },
      "ApiAtlasClusterMaxInstanceSizeDescManual": {
        "type": "string",
        "description": "Maximum instance size to which your cluster can automatically scale. MongoDB Cloud requires this parameter if `\"replicationSpecs[n].regionConfigs[m].autoScaling.compute.enabled\" : true`.",
        "example": "M400_NVME"
      },
      "ApiAtlasClusterMinInstanceSizeDescManual": {
        "type": "string",
        "description": "Minimum instance size to which your cluster can automatically scale. MongoDB Cloud requires this parameter if `\"replicationSpecs[n].regionConfigs[m].autoScaling.compute.enabled\" : true`."
      },
      "ApiAtlasClusterRegionConfigsV15AWSManual": {
        "type": "object",
        "description": "Hardware specifications for nodes set for a given region. Each **regionConfigs** object describes the region's priority in elections and the number and type of MongoDB nodes that MongoDB Cloud deploys to the region. Each **regionConfigs** object must have either an **analyticsSpecs** object, **electableSpecs** object, or **readOnlySpecs** object. Tenant clusters only require **electableSpecs. Dedicated** clusters can specify any of these specifications, but must have at least one **electableSpecs** object within a **replicationSpec**. Every hardware specification must use the same **instanceSize**.\n\n**Example:**\n\nIf you set `\\\"replicationSpecs[n].regionConfigs[m].analyticsSpecs.instanceSize\\\" : \\\"M30\\\"`, set `\\\"replicationSpecs[n].regionConfigs[m].electableSpecs.instanceSize\\\" : `\\\"M30\\\"` if you have electable nodes and `\\\"replicationSpecs[n].regionConfigs[m].readOnlySpecs.instanceSize\\\" : `\\\"M30\\\"` if you have read-only nodes.\",",
        "properties": {
          "analyticsAutoScaling": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiAtlasClusterV15AutoScalingAWSManual"
              },
              {
                "$ref": "#/components/schemas/ApiAtlasClusterAnalyticsAutoScalingDescManual"
              }
            ]
          },
          "analyticsSpecs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiAtlasClusterHardwareSpecsV15AWSManual"
              },
              {
                "$ref": "#/components/schemas/ApiAtlasClusterV15AnalyticsNodesDescManual"
              }
            ]
          },
          "autoScaling": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiAtlasClusterV15AutoScalingAWSManual"
              },
              {
                "$ref": "#/components/schemas/ApiAtlasClusterAutoScalingDescManual"
              }
            ]
          },
          "electableSpecs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiAtlasClusterHardwareSpecsV15AWSManual"
              },
              {
                "$ref": "#/components/schemas/ApiAtlasClusterV15ElectableNodesDescManual"
              }
            ]
          },
          "priority": {
            "type": "integer",
            "description": "Precedence that MongoDB Cloud gives this region when a primary election occurs. If your **regionConfigs** has only **readOnlySpecs**, **analyticsSpecs**, or both, set this value to `0`. If you have multiple **regionConfigs** objects, set priorities in descending order starting from `7`.\n\nExample: If you have three regions, their priorities would be `7`, `6`, and `5` respectively. If you added two more regions for supporting electable nodes, the priorities of those regions would be `4` and `3` respectively.\n",
            "example": 7,
            "maximum": 7,
            "minimum": 0
          },
          "providerName": {
            "type": "string",
            "description": "Cloud service provider on which MongoDB Cloud provisions the hosts.\n",
            "enum": [
              "AWS",
              "Azure",
              "GCP",
              "TENANT"
            ],
            "example": "AWS"
          },
          "readOnlySpecs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiAtlasClusterHardwareSpecsV15AWSManual"
              },
              {
                "$ref": "#/components/schemas/ApiAtlasClusterV15ReadOnlyNodesDescManual"
              }
            ]
          },
          "regionName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiAtlasClusterRegionNamesDescManual"
              },
              {
                "$ref": "#/components/schemas/ApiAtlasAWSRegionsManual"
              }
            ]
          }
        },
        "title": "AWS Regional Cluster Configuration"
      },
      "ApiAtlasClusterRegionConfigsV15AzureManual": {
        "type": "object",
        "description": "Hardware specifications for nodes set for a given region. Each **regionConfigs** object describes the region's priority in elections and the number and type of MongoDB nodes that MongoDB Cloud deploys to the region. Each **regionConfigs** object must have either an **analyticsSpecs** object, **electableSpecs** object, or **readOnlySpecs** object. Tenant clusters only require **electableSpecs. Dedicated** clusters can specify any of these specifications, but must have at least one **electableSpecs** object within a **replicationSpec**. Every hardware specification must use the same **instanceSize**.\n\n**Example:**\n\nIf you set `\\\"replicationSpecs[n].regionConfigs[m].analyticsSpecs.instanceSize\\\" : \\\"M30\\\"`, set `\\\"replicationSpecs[n].regionConfigs[m].electableSpecs.instanceSize\\\" : `\\\"M30\\\"` if you have electable nodes and `\\\"replicationSpecs[n].regionConfigs[m].readOnlySpecs.instanceSize\\\" : `\\\"M30\\\"` if you have read-only nodes.\",",
        "properties": {
          "analyticsAutoScaling": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiAtlasClusterV15AutoScalingAzureManual"
              },
              {
                "$ref": "#/components/schemas/ApiAtlasClusterAnalyticsAutoScalingDescManual"
              }
            ]
          },
          "analyticsSpecs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiAtlasClusterHardwareSpecsV15AzureManual"
              },
              {
                "$ref": "#/components/schemas/ApiAtlasClusterV15AnalyticsNodesDescManual"
              }
            ]
          },
          "autoScaling": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiAtlasClusterV15AutoScalingAzureManual"
              },
              {
                "$ref": "#/components/schemas/ApiAtlasClusterAutoScalingDescManual"
              }
            ]
          },
          "electableSpecs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiAtlasClusterHardwareSpecsV15AzureManual"
              },
              {
                "$ref": "#/components/schemas/ApiAtlasClusterV15ElectableNodesDescManual"
              }
            ]
          },
          "priority": {
            "type": "integer",
            "description": "Precedence that MongoDB Cloud gives this region when a primary election occurs. If your **regionConfigs** has only **readOnlySpecs**, **analyticsSpecs**, or both, set this value to `0`. If you have multiple **regionConfigs** objects, set priorities in descending order starting from `7`.\n\nExample: If you have three regions, their priorities would be `7`, `6`, and `5` respectively. If you added two more regions for supporting electable nodes, the priorities of those regions would be `4` and `3` respectively.\n",
            "example": 7,
            "maximum": 7,
            "minimum": 0
          },
          "providerName": {
            "type": "string",
            "description": "Cloud service provider on which MongoDB Cloud provisions the hosts.\n",
            "enum": [
              "Azure",
              "AWS",
              "GCP",
              "TENANT"
            ],
            "example": "Azure"
          },
          "readOnlySpecs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiAtlasClusterHardwareSpecsV15AzureManual"
              },
              {
                "$ref": "#/components/schemas/ApiAtlasClusterV15ReadOnlyNodesDescManual"
              }
            ]
          },
          "regionName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiAtlasClusterRegionNamesDescManual"
              },
              {
                "$ref": "#/components/schemas/ApiAtlasAzureRegionsManual"
              }
            ]
          }
        },
        "title": "Azure Regional Cluster Configuration"
      },
      "ApiAtlasClusterRegionConfigsV15GCPManual": {
        "type": "object",
        "description": "Hardware specifications for nodes set for a given region. Each **regionConfigs** object describes the region's priority in elections and the number and type of MongoDB nodes that MongoDB Cloud deploys to the region. Each **regionConfigs** object must have either an **analyticsSpecs** object, **electableSpecs** object, or **readOnlySpecs** object. Tenant clusters only require **electableSpecs. Dedicated** clusters can specify any of these specifications, but must have at least one **electableSpecs** object within a **replicationSpec**. Every hardware specification must use the same **instanceSize**.\n\n**Example:**\n\nIf you set `\\\"replicationSpecs[n].regionConfigs[m].analyticsSpecs.instanceSize\\\" : \\\"M30\\\"`, set `\\\"replicationSpecs[n].regionConfigs[m].electableSpecs.instanceSize\\\" : `\\\"M30\\\"` if you have electable nodes and `\\\"replicationSpecs[n].regionConfigs[m].readOnlySpecs.instanceSize\\\" : `\\\"M30\\\"` if you have read-only nodes.\",",
        "properties": {
          "analyticsAutoScaling": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiAtlasClusterV15AutoScalingGCPManual"
              },
              {
                "$ref": "#/components/schemas/ApiAtlasClusterAnalyticsAutoScalingDescManual"
              }
            ]
          },
          "analyticsSpecs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiAtlasClusterHardwareSpecsV15GCPManual"
              },
              {
                "$ref": "#/components/schemas/ApiAtlasClusterV15AnalyticsNodesDescManual"
              }
            ]
          },
          "autoScaling": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiAtlasClusterV15AutoScalingGCPManual"
              },
              {
                "$ref": "#/components/schemas/ApiAtlasClusterAutoScalingDescManual"
              }
            ]
          },
          "electableSpecs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiAtlasClusterHardwareSpecsV15GCPManual"
              },
              {
                "$ref": "#/components/schemas/ApiAtlasClusterV15ElectableNodesDescManual"
              }
            ]
          },
          "priority": {
            "type": "integer",
            "description": "Precedence that MongoDB Cloud gives this region when a primary election occurs. If your **regionConfigs** has only **readOnlySpecs**, **analyticsSpecs**, or both, set this value to `0`. If you have multiple **regionConfigs** objects, set priorities in descending order starting from `7`.\n\nExample: If you have three regions, their priorities would be `7`, `6`, and `5` respectively. If you added two more regions for supporting electable nodes, the priorities of those regions would be `4` and `3` respectively.\n",
            "example": 7,
            "maximum": 7,
            "minimum": 0
          },
          "providerName": {
            "type": "string",
            "description": "Cloud service provider on which MongoDB Cloud provisions the MongoDB nodes.\n",
            "enum": [
              "AWS",
              "AZURE",
              "GCP",
              "TENANT"
            ],
            "example": "GCP"
          },
          "readOnlySpecs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiAtlasClusterHardwareSpecsV15GCPManual"
              },
              {
                "$ref": "#/components/schemas/ApiAtlasClusterV15ReadOnlyNodesDescManual"
              }
            ]
          },
          "regionName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiAtlasClusterRegionNamesDescManual"
              },
              {
                "$ref": "#/components/schemas/ApiAtlasGCPRegionsManual"
              }
            ]
          }
        },
        "title": "GCP Regional Cluster Configuration"
      },
      "ApiAtlasClusterRegionConfigsV15Manual": {
        "type": "object",
        "discriminator": {
          "mapping": {
            "AWS": "#/components/schemas/ApiAtlasClusterRegionConfigsV15AWSManual",
            "Azure": "#/components/schemas/ApiAtlasClusterRegionConfigsV15AzureManual",
            "GCP": "#/components/schemas/ApiAtlasClusterRegionConfigsV15GCPManual",
            "TENANT": "#/components/schemas/ApiAtlasClusterRegionConfigsV15TenantManual"
          },
          "propertyName": "providerName"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/ApiAtlasClusterRegionConfigsV15AWSManual"
          },
          {
            "$ref": "#/components/schemas/ApiAtlasClusterRegionConfigsV15AzureManual"
          },
          {
            "$ref": "#/components/schemas/ApiAtlasClusterRegionConfigsV15GCPManual"
          },
          {
            "$ref": "#/components/schemas/ApiAtlasClusterRegionConfigsV15TenantManual"
          }
        ],
        "title": "Regional Cluster Configuration"
      },
      "ApiAtlasClusterRegionConfigsV15TenantManual": {
        "type": "object",
        "description": "Hardware specifications for nodes set for a given region. Each **regionConfigs** object describes the region's priority in elections and the number and type of MongoDB nodes that MongoDB Cloud deploys to the region. Each **regionConfigs** object must have either an **analyticsSpecs** object, **electableSpecs** object, or **readOnlySpecs** object. Tenant clusters only require **electableSpecs. Dedicated** clusters can specify any of these specifications, but must have at least one **electableSpecs** object within a **replicationSpec**. Every hardware specification must use the same **instanceSize**.\n\n**Example:**\n\nIf you set `\\\"replicationSpecs[n].regionConfigs[m].analyticsSpecs.instanceSize\\\" : \\\"M30\\\"`, set `\\\"replicationSpecs[n].regionConfigs[m].electableSpecs.instanceSize\\\" : `\\\"M30\\\"` if you have electable nodes and `\\\"replicationSpecs[n].regionConfigs[m].readOnlySpecs.instanceSize\\\" : `\\\"M30\\\"` if you have read-only nodes.\",",
        "properties": {
          "analyticsSpecs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiAtlasClusterHardwareSpecsV15TenantManual"
              },
              {
                "$ref": "#/components/schemas/ApiAtlasClusterV15AnalyticsNodesDescManual"
              }
            ]
          },
          "backingProviderName": {
            "type": "string",
            "description": "Cloud service provider on which MongoDB Cloud provisioned the tenant cluster.",
            "enum": [
              "AWS",
              "AZURE",
              "GCP"
            ]
          },
          "electableSpecs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiAtlasClusterHardwareSpecsV15TenantManual"
              },
              {
                "$ref": "#/components/schemas/ApiAtlasClusterV15ElectableNodesDescManual"
              }
            ]
          },
          "priority": {
            "type": "integer",
            "description": "Precedence that MongoDB Cloud gives this region when a primary election occurs. If your **regionConfigs** has only **readOnlySpecs**, **analyticsSpecs**, or both, set this value to `0`. If you have multiple **regionConfigs** objects, set priorities in descending order starting from `7`.\n\nExample: If you have three regions, their priorities would be `7`, `6`, and `5` respectively. If you added two more regions for supporting electable nodes, the priorities of those regions would be `4` and `3` respectively.\n",
            "example": 7,
            "maximum": 7,
            "minimum": 0
          },
          "providerName": {
            "type": "string",
            "description": "Cloud service provider on which MongoDB Cloud provisions the MongoDB nodes.\n",
            "enum": [
              "AWS",
              "AZURE",
              "GCP",
              "TENANT"
            ],
            "example": "TENANT"
          },
          "readOnlySpecs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiAtlasClusterHardwareSpecsV15TenantManual"
              },
              {
                "$ref": "#/components/schemas/ApiAtlasClusterV15ReadOnlyNodesDescManual"
              }
            ]
          },
          "regionName": {
            "$ref": "#/components/schemas/ApiAtlasClusterTenantRegionsV15Manual"
          }
        },
        "title": "Tenant Regional Cluster Configuration"
      },
      "ApiAtlasClusterRegionNamesDescManual": {
        "type": "string",
        "description": "Physical location from which MongoDB Cloud serves your MongoDB cluster nodes. The region you choose can affect network latency for clients accessing your databases. When MongoDB Cloud deploys a dedicated cluster, it checks if a VPC or VPC connection exists for that provider and region. If not, MongoDB Cloud creates them as part of the deployment. It assigns the VPC a Classless Inter-Domain Routing (CIDR) block.\n\nTo limit a new VPC peering connection to one CIDR block and region, create the connection first. Deploy the cluster after the connection starts. GCP Clusters and Multi-region clusters require one VPC peering connection for each region. MongoDB nodes can use only the peering connection that resides in the same region as the nodes to communicate with the peered VPC.",
        "title": "regionNames",
        "x-stoplight": {
          "id": "j8qrzj6o0f38y"
        }
      },
      "ApiAtlasClusterStatusView": {
        "type": "object",
        "properties": {
          "changeStatus": {
            "type": "string",
            "description": "State of cluster at the time of this request.",
            "enum": [
              "APPLIED",
              "PENDING"
            ]
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          }
        },
        "required": [
          "links"
        ]
      },
      "ApiAtlasClusterTenantRegionsV15AWSManual": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiAtlasClusterRegionNamesDescManual"
          },
          {
            "type": "string",
            "enum": [
              "AF_SOUTH_1",
              "AP_EAST_1",
              "AP_NORTHEAST_1",
              "AP_NORTHEAST_2",
              "AP_SOUTH_1",
              "AP_SOUTHEAST_1",
              "AP_SOUTHEAST_2",
              "AP_SOUTHEAST_3",
              "EU_CENTRAL_1",
              "EU_NORTH_1",
              "EU_WEST_1",
              "EU_WEST_3",
              "ME_SOUTH_1",
              "SA_EAST_1",
              "US_EAST_1",
              "US_WEST_2"
            ],
            "properties": {}
          }
        ],
        "title": "AWS Tenant Regions"
      },
      "ApiAtlasClusterTenantRegionsV15AzureManual": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiAtlasClusterRegionNamesDescManual"
          },
          {
            "type": "string",
            "enum": [
              "CANADA_CENTRAL",
              "EUROPE_NORTH",
              "INDIA_CENTRAL",
              "US_EAST_2",
              "US_WEST"
            ],
            "properties": {}
          }
        ],
        "title": "Azure Tenant Regions"
      },
      "ApiAtlasClusterTenantRegionsV15GCPManual": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiAtlasClusterRegionNamesDescManual"
          },
          {
            "type": "string",
            "enum": [
              "ASIA_NORTHEAST_3",
              "ASIA_SOUTH_1",
              "ASIA_SOUTHEAST_2",
              "CENTRAL_US",
              "EASTERN_ASIA_PACIFIC",
              "NORTHEASTERN_ASIA_PACIFIC",
              "WESTERN_EUROPE"
            ],
            "properties": {}
          }
        ],
        "title": "GCP Tenant Regions"
      },
      "ApiAtlasClusterTenantRegionsV15Manual": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ApiAtlasClusterTenantRegionsV15AWSManual"
          },
          {
            "$ref": "#/components/schemas/ApiAtlasClusterTenantRegionsV15AzureManual"
          },
          {
            "$ref": "#/components/schemas/ApiAtlasClusterTenantRegionsV15GCPManual"
          }
        ]
      },
      "ApiAtlasClusterV15AnalyticsNodesDescManual": {
        "type": "object",
        "description": "Hardware specifications for analytic nodes in the region. Analytic nodes can never become the primary member, but can enable local reads. If you don't specify this parameter, MongoDB Cloud doesn't deploy analytic nodes to the region."
      },
      "ApiAtlasClusterV15AutoScalingAWSManual": {
        "type": "object",
        "properties": {
          "compute": {
            "$ref": "#/components/schemas/ApiAtlasClusterV15ComputeAutoScalingAWSManual"
          },
          "diskGB": {
            "type": "object",
            "description": "Automatic cluster storage settings that apply to this cluster.",
            "properties": {
              "enabled": {
                "type": "boolean",
                "description": "Flag that indicates whether this cluster enables disk auto-scaling. The maximum memory allowed for the selected cluster tier and the oplog size can limit storage auto-scaling."
              }
            }
          }
        },
        "title": "AWS Automatic Cluster Scaling",
        "x-examples": {
          "example-1": {
            "compute": {
              "enabled": true,
              "maxInstanceSize": "M100",
              "minInstanceSize": "M100",
              "scaleDownEnabled": true
            },
            "diskGB": {
              "enabled": true
            }
          }
        }
      },
      "ApiAtlasClusterV15AutoScalingAzureManual": {
        "type": "object",
        "properties": {
          "compute": {
            "$ref": "#/components/schemas/ApiAtlasClusterV15ComputeAutoScalingAzureManual"
          },
          "diskGB": {
            "type": "object",
            "description": "Automatic cluster storage settings that apply to this cluster.",
            "properties": {
              "enabled": {
                "type": "boolean",
                "description": "Flag that indicates whether this cluster enables disk auto-scaling. The maximum memory allowed for the selected cluster tier and the oplog size can limit storage auto-scaling."
              }
            }
          }
        },
        "title": "Azure Automatic Cluster Scaling",
        "x-examples": {
          "example-1": {
            "compute": {
              "enabled": true,
              "maxInstanceSize": "M100",
              "minInstanceSize": "M100",
              "scaleDownEnabled": true
            },
            "diskGB": {
              "enabled": true
            }
          }
        }
      },
      "ApiAtlasClusterV15AutoScalingGCPManual": {
        "type": "object",
        "properties": {
          "compute": {
            "$ref": "#/components/schemas/ApiAtlasClusterV15ComputeAutoScalingGCPManual"
          },
          "diskGB": {
            "type": "object",
            "description": "Automatic cluster storage settings that apply to this cluster.",
            "properties": {
              "enabled": {
                "type": "boolean",
                "description": "Flag that indicates whether this cluster enables disk auto-scaling. The maximum memory allowed for the selected cluster tier and the oplog size can limit storage auto-scaling."
              }
            }
          }
        },
        "title": "GCP Automatic Cluster Scaling",
        "x-examples": {
          "example-1": {
            "compute": {
              "enabled": true,
              "maxInstanceSize": "M400",
              "minInstanceSize": "M100",
              "scaleDownEnabled": true
            },
            "diskGB": {
              "enabled": true
            }
          }
        }
      },
      "ApiAtlasClusterV15ComputeAutoScalingAWSManual": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "maxInstanceSize": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiAtlasClusterMaxInstanceSizeDescManual"
                  },
                  {
                    "$ref": "#/components/schemas/ApiAtlasAWSinstanceSizesManual"
                  }
                ]
              },
              "minInstanceSize": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiAtlasClusterMinInstanceSizeDescManual"
                  },
                  {
                    "$ref": "#/components/schemas/ApiAtlasAWSinstanceSizesManual"
                  }
                ]
              }
            }
          },
          {
            "$ref": "#/components/schemas/autoScalingComputeBase"
          }
        ],
        "title": "AWS Automatic Compute Scaling"
      },
      "ApiAtlasClusterV15ComputeAutoScalingAzureManual": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "maxInstanceSize": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiAtlasClusterMaxInstanceSizeDescManual"
                  },
                  {
                    "$ref": "#/components/schemas/ApiAtlasAzureInstanceSizesManual"
                  }
                ]
              },
              "minInstanceSize": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiAtlasClusterMinInstanceSizeDescManual"
                  },
                  {
                    "$ref": "#/components/schemas/ApiAtlasAzureInstanceSizesManual"
                  }
                ]
              }
            }
          },
          {
            "$ref": "#/components/schemas/autoScalingComputeBase"
          }
        ],
        "title": "Azure Automatic Compute Scaling"
      },
      "ApiAtlasClusterV15ComputeAutoScalingGCPManual": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "maxInstanceSize": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiAtlasClusterMaxInstanceSizeDescManual"
                  },
                  {
                    "$ref": "#/components/schemas/ApiAtlasGCPInstanceSizesManual"
                  }
                ]
              },
              "minInstanceSize": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiAtlasClusterMinInstanceSizeDescManual"
                  },
                  {
                    "$ref": "#/components/schemas/ApiAtlasGCPInstanceSizesManual"
                  }
                ]
              }
            }
          },
          {
            "$ref": "#/components/schemas/autoScalingComputeBase"
          }
        ],
        "title": "GCP Automatic Compute Scaling"
      },
      "ApiAtlasClusterV15ElectableNodesDescManual": {
        "type": "object",
        "description": "Hardware specifications for all electable nodes deployed in the region. Electable nodes can become the primary and can enable local reads. If you don't specify this option, MongoDB Cloud deploys no electable nodes to the region."
      },
      "ApiAtlasClusterV15ReadOnlyNodesDescManual": {
        "type": "object",
        "description": "Hardware specifications for read-only nodes in the region. Read-only nodes can never become the primary member, but can enable local reads. If you don't specify this parameter, MongoDB Cloud doesn't deploy read-only nodes to the region."
      },
      "ApiAtlasComputeAutoScalingView": {
        "type": "object",
        "description": "Collection of settings that configures how a cluster might scale its cluster tier and whether the cluster can scale down. Cluster tier auto-scaling is unavailable for clusters using Low CPU or NVME storage classes.",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Flag that indicates whether cluster tier auto-scaling is enabled. Set to `true` to enable cluster tier auto-scaling. If enabled, you must specify a value for **providerSettings.autoScaling.compute.maxInstanceSize** also. Set to `false` to disable cluster tier auto-scaling."
          },
          "scaleDownEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether the cluster tier can scale down. This is required if **autoScaling.compute.enabled** is `true`. If you enable this option, specify a value for **providerSettings.autoScaling.compute.minInstanceSize**."
          }
        }
      },
      "ApiAtlasContainerPeerView": {
        "type": "object",
        "properties": {
          "containerId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the MongoDB Cloud network container that contains the specified network peering connection.",
            "example": "2f3ed24096c4b70db8993cb7",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$"
          },
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the network peering connection.",
            "example": "f29c6d03c5ca80634eeba63b",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          }
        },
        "required": [
          "containerId"
        ]
      },
      "ApiAtlasContainerPeerViewRequest": {
        "type": "object",
        "description": "Collection of settings that configures the network connection for a virtual private connection.",
        "discriminator": {
          "mapping": {
            "AWS": "#/components/schemas/ApiAtlasAWSPeerVpcRequestView",
            "AZURE": "#/components/schemas/ApiAtlasAzurePeerNetworkRequestView",
            "GCP": "#/components/schemas/ApiAtlasGCPPeerVpcRequestView"
          },
          "propertyName": "providerName"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/ApiAtlasAWSPeerVpcRequestView"
          },
          {
            "$ref": "#/components/schemas/ApiAtlasAzurePeerNetworkRequestView"
          },
          {
            "$ref": "#/components/schemas/ApiAtlasGCPPeerVpcRequestView"
          }
        ]
      },
      "ApiAtlasCreateEndpointRequestView": {
        "type": "object"
      },
      "ApiAtlasCreateEndpointServiceRequestView": {
        "type": "object",
        "properties": {
          "providerName": {
            "type": "string",
            "description": "Human-readable label that identifies the cloud service provider for which you want to create the private endpoint service.",
            "enum": [
              "AWS",
              "AZURE",
              "GCP"
            ],
            "writeOnly": true
          },
          "region": {
            "type": "string",
            "description": "Cloud provider region in which you want to create the private endpoint service. Regions accepted as values differ for [Amazon Web Services](https://docs.atlas.mongodb.com/reference/amazon-aws/), [Google Cloud Platform](https://docs.atlas.mongodb.com/reference/google-gcp/), and [Microsoft Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).",
            "writeOnly": true
          }
        },
        "required": [
          "providerName",
          "region"
        ]
      },
      "ApiAtlasCreateGCPEndpointGroupRequestView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiAtlasCreateEndpointRequestView"
          },
          {
            "type": "object",
            "properties": {
              "endpointGroupName": {
                "type": "string",
                "description": "Human-readable label that identifies a set of endpoints.",
                "writeOnly": true
              },
              "endpoints": {
                "type": "array",
                "description": "List of individual private endpoints that comprise this endpoint group.",
                "externalDocs": {
                  "description": "Google Cloud Forwarding Rule Concepts",
                  "url": "https://cloud.google.com/load-balancing/docs/forwarding-rule-concepts"
                },
                "items": {
                  "$ref": "#/components/schemas/ApiAtlasCreateGCPForwardingRuleRequestView"
                }
              },
              "gcpProjectId": {
                "type": "string",
                "description": "Unique string that identifies the Google Cloud project in which you created the endpoints.",
                "example": "p-fdeeb3e43b8e733e5ab627b1",
                "externalDocs": {
                  "description": "Google Cloud Creating and Managing Projects",
                  "url": "https://cloud.google.com/resource-manager/docs/creating-managing-projects"
                },
                "pattern": "^p-[0-9a-z]{24}$",
                "writeOnly": true
              }
            }
          }
        ],
        "description": "Group of Private Endpoint settings.",
        "title": "GCP"
      },
      "ApiAtlasCreateGCPForwardingRuleRequestView": {
        "type": "object",
        "properties": {
          "endpointName": {
            "type": "string",
            "description": "Human-readable label that identifies the Google Cloud consumer forwarding rule that you created.",
            "externalDocs": {
              "description": "Google Cloud Forwarding Rule Concepts",
              "url": "https://cloud.google.com/load-balancing/docs/forwarding-rule-concepts"
            },
            "writeOnly": true
          },
          "ipAddress": {
            "type": "string",
            "format": "ipv4",
            "description": "One Private Internet Protocol version 4 (IPv4) address to which this Google Cloud consumer forwarding rule resolves.",
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}",
            "writeOnly": true
          }
        }
      },
      "ApiAtlasCustomDBRoleView": {
        "type": "object",
        "properties": {
          "actions": {
            "type": "array",
            "description": "List of the individual privilege actions that the role grants.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasDBActionView"
            }
          },
          "inheritedRoles": {
            "type": "array",
            "description": "List of the built-in roles that this custom role inherits.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasInheritedRoleView"
            },
            "uniqueItems": true
          },
          "roleName": {
            "type": "string",
            "description": "Human-readable label that identifies the role for the request. This name must be unique for this custom role in this project.",
            "pattern": "^\\b(?!xgen-)([0-9A-Za-z_\\-]+)\\b(?<!\\atlasAdmin|read|readWrite|dbAdmin|dbOwner|userAdmin|clusterAdmin|clusterManager|clusterMonitor|hostManager|backup|restore|readAnyDatabase|readWriteAnyDatabase|userAdminAnyDatabase|dbAdminAnyDatabase|root|__system)$"
          }
        },
        "required": [
          "roleName"
        ]
      },
      "ApiAtlasCustomZoneMappingsView": {
        "type": "object",
        "properties": {
          "customZoneMappings": {
            "type": "array",
            "description": "List that contains comma-separated key value pairs to map zones to geographic regions. These pairs map an ISO 3166-1a2 location code, with an ISO 3166-2 subdivision code when possible, to the human-readable label for the desired custom zone. MongoDB Cloud maps the ISO 3166-1a2 code to the nearest geographical zone by default. Include this parameter to override the default mappings.\n\nThis parameter returns an empty object if no custom zones exist.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasZoneMappingView"
            }
          }
        },
        "required": [
          "customZoneMappings"
        ]
      },
      "ApiAtlasCustomerX509View": {
        "type": "object",
        "description": "Settings to configure TLS Certificates for database users.",
        "properties": {
          "cas": {
            "type": "string",
            "description": "Concatenated list of customer certificate authority (CA) certificates needed to authenticate database users. MongoDB Cloud expects this as a PEM-formatted certificate."
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          }
        },
        "required": [
          "links"
        ],
        "title": "Database User TLS Certificate Settings"
      },
      "ApiAtlasDBActionView": {
        "type": "object",
        "description": "List of the individual privilege actions that the role grants.",
        "properties": {
          "action": {
            "type": "string",
            "description": "Human-readable label that identifies the privilege action.",
            "enum": [
              "FIND",
              "INSERT",
              "REMOVE",
              "UPDATE",
              "BYPASS_DOCUMENT_VALIDATION",
              "USE_UUID",
              "CREATE_COLLECTION",
              "CREATE_INDEX",
              "DROP_COLLECTION",
              "ENABLE_PROFILER",
              "CHANGE_STREAM",
              "COLL_MOD",
              "COMPACT",
              "CONVERT_TO_CAPPED",
              "DROP_DATABASE",
              "DROP_INDEX",
              "RE_INDEX",
              "RENAME_COLLECTION_SAME_DB",
              "LIST_SESSIONS",
              "KILL_ANY_SESSION",
              "COLL_STATS",
              "CONN_POOL_STATS",
              "DB_HASH",
              "DB_STATS",
              "LIST_DATABASES",
              "LIST_COLLECTIONS",
              "LIST_INDEXES",
              "SERVER_STATUS",
              "VALIDATE",
              "TOP",
              "SQL_GET_SCHEMA",
              "SQL_SET_SCHEMA",
              "VIEW_ALL_HISTORY",
              "OUT_TO_S3",
              "STORAGE_GET_CONFIG",
              "STORAGE_SET_CONFIG"
            ]
          },
          "resources": {
            "type": "array",
            "description": "List of resources on which you grant the action.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasDBResourceView"
            }
          }
        },
        "required": [
          "action",
          "resources"
        ],
        "title": "Database Privilege Action"
      },
      "ApiAtlasDBResourceView": {
        "type": "object",
        "description": "Namespace to which this database user has access.",
        "externalDocs": {
          "description": "Cluster Resources",
          "url": "https://docs.mongodb.com/manual/reference/resource-document/#cluster-resource"
        },
        "properties": {
          "cluster": {
            "type": "boolean",
            "description": "Flag that indicates whether to grant the action on the cluster resource. If `true`, MongoDB Cloud ignores the **actions.resources.collection** and **actions.resources.db** parameters."
          },
          "collection": {
            "type": "string",
            "description": "Human-readable label that identifies the collection on which you grant the action to one MongoDB user. If you don't set this parameter, you grant the action to all collections in the database specified in the **actions.resources.db** parameter. If you set `\"actions.resources.cluster\" : true`, MongoDB Cloud ignores this parameter."
          },
          "db": {
            "type": "string",
            "description": "Human-readable label that identifies the database on which you grant the action to one MongoDB user. If you set `\"actions.resources.cluster\" : true`, MongoDB Cloud ignores this parameter."
          }
        },
        "required": [
          "cluster",
          "collection",
          "db"
        ],
        "title": "Permitted Namespace"
      },
      "ApiAtlasDataLakeAWSCloudProviderConfigView": {
        "type": "object",
        "description": "Name of the cloud service that hosts the data lake's data stores.",
        "properties": {
          "_testS3Bucket": {
            "type": "string",
            "description": "Name of the S3 data bucket that the provided role ID is authorized to access.Required if specifying cloudProviderConfig.",
            "writeOnly": true
          },
          "externalId": {
            "type": "string",
            "description": "Unique identifier associated with the Identity and Access Management (IAM) role that the data lake assumes when accessing the data stores.",
            "readOnly": true
          },
          "iamAssumedRoleARN": {
            "type": "string",
            "description": "Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role that the data lake assumes when accessing data stores.",
            "example": "arn:aws:iam::123456789012:root",
            "maxLength": 2048,
            "minLength": 20,
            "readOnly": true
          },
          "iamUserARN": {
            "type": "string",
            "description": "Amazon Resource Name (ARN) of the user that the data lake assumes when accessing data stores.",
            "readOnly": true
          },
          "roleId": {
            "type": "string",
            "description": "Unique identifier of the role that the data lake can use to access the data stores.Required if specifying cloudProviderConfig."
          }
        },
        "required": [
          "roleId"
        ]
      },
      "ApiAtlasDataLakeAtlasStoreReadPreferenceTagView": {
        "type": "object",
        "description": "List that contains [tag sets](https://docs.mongodb.com/manual/core/read-preference-tags/) or tag specification documents. If specified, Atlas Data Lake routes read requests to replica set member or members that are associated with the specified tags.",
        "properties": {
          "name": {
            "type": "string",
            "description": "Human-readable label of the tag."
          },
          "value": {
            "type": "string",
            "description": "Value of the tag."
          }
        }
      },
      "ApiAtlasDataLakeAtlasStoreReadPreferenceView": {
        "type": "object",
        "description": "MongoDB Cloud cluster read preference, which describes how to route read requests to the cluster.",
        "properties": {
          "maxStalenessSeconds": {
            "type": "number",
            "description": "Maximum replication lag, or **staleness**, for reads from secondaries."
          },
          "mode": {
            "type": "string",
            "description": "[Read preference mode](https://docs.mongodb.com/manual/core/read-preference/#read-preference-modes) that specifies to which replica set member to route the read requests.",
            "enum": [
              "primary",
              "primaryPreferred",
              "secondary",
              "secondaryPreferred",
              "nearest"
            ]
          },
          "tagSets": {
            "type": "array",
            "description": "List that contains [tag sets](https://docs.mongodb.com/manual/core/read-preference-tags/) or tag specification documents. If specified, Atlas Data Lake routes read requests to replica set member or members that are associated with the specified tags.",
            "items": {
              "type": "array",
              "description": "List that contains [tag sets](https://docs.mongodb.com/manual/core/read-preference-tags/) or tag specification documents. If specified, Atlas Data Lake routes read requests to replica set member or members that are associated with the specified tags.",
              "items": {
                "$ref": "#/components/schemas/ApiAtlasDataLakeAtlasStoreReadPreferenceTagView"
              }
            }
          }
        },
        "readOnly": true
      },
      "ApiAtlasDataLakeAtlasStoreView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/provider"
          },
          {
            "type": "object",
            "properties": {
              "clusterName": {
                "type": "string",
                "description": "Human-readable label of the MongoDB Cloud cluster on which the store is based."
              },
              "projectId": {
                "type": "string",
                "description": "Unique 24-hexadecimal digit string that identifies the project.",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^([a-f0-9]{24})$",
                "readOnly": true
              },
              "readPreference": {
                "$ref": "#/components/schemas/ApiAtlasDataLakeAtlasStoreReadPreferenceView"
              }
            }
          }
        ]
      },
      "ApiAtlasDataLakeCloudProviderConfigView": {
        "type": "object",
        "description": "Cloud provider linked to this data lake.",
        "properties": {
          "aws": {
            "$ref": "#/components/schemas/ApiAtlasDataLakeAWSCloudProviderConfigView"
          }
        },
        "required": [
          "aws"
        ],
        "title": "Data Lake Cloud Provider"
      },
      "ApiAtlasDataLakeDLSStoreView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/provider"
          },
          {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "string",
                "description": "ID of the Project."
              }
            }
          }
        ],
        "required": [
          "projectId"
        ]
      },
      "ApiAtlasDataLakeDataProcessRegionView": {
        "type": "object",
        "description": "Information about the cloud provider region to which the data lake routes client connections. MongoDB Cloud supports AWS only.",
        "properties": {
          "cloudProvider": {
            "type": "string",
            "description": "Name of the cloud service that hosts the data lake's data stores.",
            "enum": [
              "AWS",
              "GCP",
              "AZURE",
              "TENANT",
              "SERVERLESS"
            ]
          },
          "region": {
            "type": "string",
            "description": "Name of the region to which the data lake routes client connections.",
            "enum": [
              "DUBLIN_IRL",
              "FRANKFURT_DEU",
              "LONDON_GBR",
              "MUMBAI_IND",
              "OREGON_USA",
              "SYDNEY_AUS",
              "VIRGINIA_USA"
            ]
          }
        },
        "readOnly": true,
        "required": [
          "cloudProvider",
          "region"
        ]
      },
      "ApiAtlasDataLakeDatabaseCollectionView": {
        "type": "object",
        "description": "A collection and data sources that map to a ``stores`` data store.",
        "properties": {
          "dataSources": {
            "type": "array",
            "description": "Array that contains the data stores that map to a collection for this data lake.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasDataLakeDatabaseDataSourceView"
            },
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies the collection to which MongoDB Cloud maps the data in the data stores.",
            "readOnly": true
          }
        },
        "readOnly": true
      },
      "ApiAtlasDataLakeDatabaseDataSourceView": {
        "type": "object",
        "description": "Data store that maps to a collection for this data lake.",
        "properties": {
          "allowInsecure": {
            "type": "boolean",
            "default": false,
            "description": "Flag that validates the scheme in the specified URLs. If `true`, allows insecure `HTTP` scheme, doesn't verify the server's certificate chain and hostname, and accepts any certificate with any hostname presented by the server. If `false`, allows secure `HTTPS` scheme only."
          },
          "collection": {
            "type": "string",
            "description": "Human-readable label that identifies the collection in the database. For creating a wildcard (`*`) collection, you must omit this parameter."
          },
          "collectionRegex": {
            "type": "string",
            "description": "Regex pattern to use for creating the wildcard (*) collection. To learn more about the regex syntax, see [Go programming language](https://pkg.go.dev/regexp)."
          },
          "database": {
            "type": "string",
            "description": "Human-readable label that identifies the database, which contains the collection in the cluster. You must omit this parameter to generate wildcard (`*`) collections for dynamically generated databases."
          },
          "defaultFormat": {
            "type": "string",
            "description": "File format that MongoDB Cloud uses if it encounters a file without a file extension while searching **storeName**.",
            "enum": [
              ".avro",
              ".avro.gz",
              ".bson",
              ".bson.gz",
              ".csv",
              ".json",
              ".json.gz",
              ".orc",
              ".tsv",
              ".tsv.gz"
            ]
          },
          "path": {
            "type": "string",
            "description": "File path that controls how MongoDB Cloud searches for and parses files in the **storeName** before mapping them to a collection.Specify ``/`` to capture all files and folders from the ``prefix`` path."
          },
          "storeName": {
            "type": "string",
            "description": "Human-readable label that identifies the data store that MongoDB Cloud maps to the collection.",
            "readOnly": true
          },
          "urls": {
            "type": "array",
            "description": "URLs of the publicly accessible data files. You can't specify URLs that require authentication. Atlas Data Lake creates a partition for each URL. If empty or omitted, Data Lake uses the URLs from the store specified in the **dataSources.storeName** parameter.",
            "items": {
              "type": "string"
            }
          }
        },
        "readOnly": true
      },
      "ApiAtlasDataLakeDatabaseView": {
        "type": "object",
        "description": "Database associated with this data lake. Databases contain collections and views.",
        "properties": {
          "collections": {
            "type": "array",
            "description": "Array of collections and data sources that map to a ``stores`` data store.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasDataLakeDatabaseCollectionView"
            },
            "readOnly": true
          },
          "maxWildcardCollections": {
            "type": "number",
            "default": 100,
            "description": "Maximum number of wildcard collections in the database. This only applies to S3 data sources.",
            "maximum": 1000,
            "minimum": 1,
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies the database to which the data lake maps data.",
            "readOnly": true
          },
          "views": {
            "type": "array",
            "description": "Array of aggregation pipelines that apply to the collection. This only applies to S3 data sources.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasDataLakeViewView"
            },
            "readOnly": true
          }
        },
        "readOnly": true
      },
      "ApiAtlasDataLakeHTTPStoreView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/provider"
          },
          {
            "type": "object",
            "properties": {
              "allowInsecure": {
                "type": "boolean",
                "default": false,
                "description": "Flag that validates the scheme in the specified URLs. If `true`, allows insecure `HTTP` scheme, doesn't verify the server's certificate chain and hostname, and accepts any certificate with any hostname presented by the server. If `false`, allows secure `HTTPS` scheme only."
              },
              "defaultFormat": {
                "type": "string",
                "description": "Default format that Data Lake assumes if it encounters a file without an extension while searching the `storeName`. If omitted, Data Lake attempts to detect the file type by processing a few bytes of the file. The specified format only applies to the URLs specified in the **databases.[n].collections.[n].dataSources** object."
              },
              "urls": {
                "type": "array",
                "description": "Comma-separated list of publicly accessible HTTP URLs where data is stored. You can't specify URLs that require authentication.",
                "items": {
                  "type": "string",
                  "description": "Comma-separated list of publicly accessible HTTP URLs where data is stored. You can't specify URLs that require authentication."
                }
              }
            }
          }
        ]
      },
      "ApiAtlasDataLakeOnlineArchiveStoreView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/provider"
          },
          {
            "type": "object",
            "properties": {
              "clusterId": {
                "type": "string",
                "description": "ID of the Cluster the Online Archive belongs to."
              },
              "clusterName": {
                "type": "string",
                "description": "Name of the Cluster the Online Archive belongs to."
              },
              "projectId": {
                "type": "string",
                "description": "ID of the Project the Online Archive belongs to."
              }
            }
          }
        ],
        "required": [
          "clusterId",
          "clusterName",
          "projectId"
        ]
      },
      "ApiAtlasDataLakeS3StoreView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/provider"
          },
          {
            "type": "object",
            "properties": {
              "additionalStorageClasses": {
                "type": "array",
                "description": "Collection of AWS S3 [storage classes](https://aws.amazon.com/s3/storage-classes/). Atlas Data Lake includes the files in these storage classes in the query results.",
                "items": {
                  "type": "string",
                  "description": "AWS S3 [storage class](https://aws.amazon.com/s3/storage-classes/) where the files to include in the results are stored."
                }
              },
              "bucket": {
                "type": "string",
                "description": "Human-readable label that identifies the AWS S3 bucket. This label must exactly match the name of an S3 bucket that the data lake can access with the configured AWS Identity and Access Management (IAM) credentials."
              },
              "delimiter": {
                "type": "string",
                "description": "The delimiter that separates **databases.[n].collections.[n].dataSources.[n].path** segments in the data store. MongoDB Cloud uses the delimiter to efficiently traverse S3 buckets with a hierarchical directory structure. You can specify any character supported by the S3 object keys as the delimiter. For example, you can specify an underscore (_) or a plus sign (+) or multiple characters, such as double underscores (__) as the delimiter. If omitted, defaults to `/`."
              },
              "includeTags": {
                "type": "boolean",
                "default": false,
                "description": "Flag that indicates whether to use S3 tags on the files in the given path as additional partition attributes. If set to `true`, data lake adds the S3 tags as additional partition attributes and adds new top-level BSON elements associating each tag to each document."
              },
              "prefix": {
                "type": "string",
                "description": "Prefix that MongoDB Cloud applies when searching for files in the S3 bucket. The data store prepends the value of prefix to the **databases.[n].collections.[n].dataSources.[n].path** to create the full path for files to ingest. If omitted, MongoDB Cloud searches all files from the root of the S3 bucket."
              },
              "public": {
                "type": "boolean",
                "default": false,
                "description": "Flag that indicates whether the bucket is public. If set to `true`, MongoDB Cloud doesn't use the configured AWS Identity and Access Management (IAM) role to access the S3 bucket. If set to `false`, the configured AWS IAM role must include permissions to access the S3 bucket."
              },
              "region": {
                "$ref": "#/components/schemas/ApiAtlasAWSRegionNameView"
              }
            }
          }
        ]
      },
      "ApiAtlasDataLakeStorageView": {
        "type": "object",
        "description": "Configuration information for each data store and its mapping to MongoDB Cloud databases.",
        "properties": {
          "databases": {
            "type": "array",
            "description": "Array that contains the queryable databases and collections for this data lake.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasDataLakeDatabaseView"
            },
            "readOnly": true
          },
          "stores": {
            "type": "array",
            "description": "Array that contains the data stores for the data lake.",
            "items": {
              "$ref": "#/components/schemas/provider"
            }
          }
        },
        "readOnly": true
      },
      "ApiAtlasDataLakeTenantView": {
        "type": "object",
        "properties": {
          "cloudProviderConfig": {
            "$ref": "#/components/schemas/ApiAtlasDataLakeCloudProviderConfigView"
          },
          "dataProcessRegion": {
            "$ref": "#/components/schemas/ApiAtlasDataLakeDataProcessRegionView"
          },
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies the data lake.",
            "readOnly": true
          },
          "storage": {
            "$ref": "#/components/schemas/ApiAtlasDataLakeStorageView"
          }
        }
      },
      "ApiAtlasDataLakeViewView": {
        "type": "object",
        "description": "An aggregation pipeline that applies to the collection.",
        "properties": {
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies the view, which corresponds to an aggregation pipeline on a collection."
          },
          "pipeline": {
            "type": "string",
            "description": "Aggregation pipeline stages to apply to the source collection.",
            "externalDocs": {
              "description": "Aggregation Pipelines",
              "url": "https://docs.mongodb.com/manual/core/aggregation-pipeline/"
            }
          },
          "source": {
            "type": "string",
            "description": "Human-readable label that identifies the source collection for the view."
          }
        },
        "readOnly": true
      },
      "ApiAtlasDatabaseUserView": {
        "type": "object",
        "properties": {
          "awsIAMType": {
            "type": "string",
            "default": "NONE",
            "description": "Human-readable label that indicates whether the new database user authenticates with the Amazon Web Services (AWS) Identity and Access Management (IAM) credentials associated with the user or the user's role.",
            "enum": [
              "NONE",
              "USER",
              "ROLE"
            ]
          },
          "databaseName": {
            "type": "string",
            "default": "admin",
            "description": "Database against which the database user authenticates. Database users must provide both a username and authentication database to log into MongoDB.",
            "enum": [
              "admin",
              "$external"
            ]
          },
          "deleteAfterDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when MongoDB Cloud deletes the user. This parameter expresses its value in the ISO 8601 timestamp format in UTC and can include the time zone designation. You must specify a future date that falls within one week of making the Application Programming Interface (API) request.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$"
          },
          "groupId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project.",
            "example": "32b6e34b3d91647abb20e7b8",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "writeOnly": true
          },
          "labels": {
            "type": "array",
            "description": "List that contains the key-value pairs for tagging and categorizing the MongoDB database user. The labels that you define do not appear in the console.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasNDSLabelView"
            }
          },
          "ldapAuthType": {
            "type": "string",
            "default": "NONE",
            "description": "Part of the Lightweight Directory Access Protocol (LDAP) record that the database uses to authenticate this database user on the LDAP host.",
            "enum": [
              "NONE",
              "USER",
              "GROUP"
            ]
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "password": {
            "type": "string",
            "description": "Alphanumeric string that authenticates this database user against the database specified in `databaseName`. To authenticate with SCRAM-SHA, you must specify this parameter. This parameter doesn't appear in this response.",
            "externalDocs": {
              "description": "SCRAM-SHA",
              "url": "https://docs.mongodb.com/manual/core/security-scram/"
            },
            "minLength": 8,
            "writeOnly": true
          },
          "roles": {
            "type": "array",
            "description": "List that provides the pairings of one role with one applicable database.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasRoleView"
            }
          },
          "scopes": {
            "type": "array",
            "description": "List that contains clusters and MongoDB Atlas Data Lakes that this database user can access. If omitted, MongoDB Cloud grants the database user access to all the clusters and MongoDB Atlas Data Lakes in the project.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasUserScopeView"
            }
          },
          "username": {
            "type": "string",
            "description": "Human-readable label that represents the user that authenticates to MongoDB. The format of this label depends on the method of authentication:\n\n| Authentication Method | Parameter Needed | Parameter Value | username Format |\n|---|---|---|---|\n| AWS IAM | awsType | ROLE | <abbr title=\"Amazon Resource Name\">ARN</abbr> |\n| AWS IAM | awsType | USER | <abbr title=\"Amazon Resource Name\">ARN</abbr> |\n| x.509 | x509Type | CUSTOMER | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |\n| x.509 | x509Type | MANAGED | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |\n| LDAP | ldapAuthType | USER | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |\n| LDAP | ldapAuthType | GROUP | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |\n| SCRAM-SHA | awsType, x509Type, ldapAuthType | NONE | Alphanumeric string |\n",
            "maxLength": 1024
          },
          "x509Type": {
            "type": "string",
            "default": "NONE",
            "description": "X.509 method that MongoDB Cloud uses to authenticate the database user.\n\n- For application-managed X.509, specify `MANAGED`.\n- For self-managed X.509, specify `CUSTOMER`.\n\nUsers created with the `CUSTOMER` method require a Common Name (CN) in the **username** parameter. You must create externally authenticated users on the `$external` database.",
            "enum": [
              "NONE",
              "MANAGED",
              "CUSTOMER"
            ]
          }
        },
        "required": [
          "databaseName",
          "groupId",
          "links",
          "roles",
          "username"
        ]
      },
      "ApiAtlasDatabaseUserViewBase": {
        "type": "object",
        "properties": {
          "databaseName": {
            "type": "string",
            "default": "admin",
            "description": "MongoDB database against which the MongoDB database user authenticates. MongoDB database users must provide both a username and authentication database to log into MongoDB.",
            "enum": [
              "admin",
              "$external"
            ]
          },
          "deleteAfterDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when MongoDB Cloud deletes the user. This parameter expresses its value in the ISO 8601 timestamp format in UTC and can include the time zone designation. You must specify a future date that falls within one week of making the Application Programming Interface (API) request.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z|[+-][01]\\d:[0-5]\\d)$"
          },
          "groupId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project.",
            "example": "32b6e34b3d91647abb20e7b8",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "writeOnly": true
          },
          "labels": {
            "type": "array",
            "description": "List that contains the key-value pairs for tagging and categorizing the MongoDB database user. The labels that you define do not appear in the console.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasNDSLabelView"
            }
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "roles": {
            "type": "array",
            "description": "List that provides the pairings of one role with one applicable database.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasRoleView"
            }
          },
          "scopes": {
            "type": "array",
            "description": "List that contains clusters and MongoDB Atlas Data Lakes that this database user can access. If omitted, MongoDB Cloud grants the database user access to all the clusters and MongoDB Atlas Data Lakes in the project.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasUserScopeView"
            }
          }
        }
      },
      "ApiAtlasDatabaseUserViewManual": {
        "type": "object",
        "description": "Authentication method that this MongoDB Database user applies.",
        "oneOf": [
          {
            "$ref": "#/components/schemas/ApiDatabaseUserSCRAMView"
          },
          {
            "$ref": "#/components/schemas/ApiDatabaseUserLDAPView"
          },
          {
            "$ref": "#/components/schemas/ApiDatabaseUserX509View"
          },
          {
            "$ref": "#/components/schemas/ApiDatabaseUserIAMView"
          }
        ]
      },
      "ApiAtlasDefaultCreateEndpointRequestView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiAtlasCreateEndpointRequestView"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique string that identifies the private endpoint's network interface that someone added to this private endpoint service.",
                "pattern": "^(vpce-[0-9a-f]{17}|\\/subscriptions\\/[0-9a-f]{8}-([0-9a-f]{4}-){3}[0-9a-f]{12}\\/resource[gG]roups\\/private[Ll]ink\\/providers\\/Microsoft\\.Network\\/privateEndpoints\\/[-\\w._()]+)$",
                "writeOnly": true
              },
              "privateEndpointIPAddress": {
                "type": "string",
                "description": "IPv4 address of the private endpoint in your Azure VNet that someone added to this private endpoint service.",
                "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}"
              }
            }
          }
        ],
        "description": "Group of Private Endpoint settings.",
        "title": "AWS or AZURE"
      },
      "ApiAtlasDiskBackupBaseRestoreMemberView": {
        "type": "object",
        "properties": {
          "replicaSetName": {
            "type": "string",
            "description": "Human-readable label that identifies the replica set on the sharded cluster.",
            "readOnly": true
          }
        }
      },
      "ApiAtlasDiskBackupExportJobRequestView": {
        "type": "object",
        "properties": {
          "customData": {
            "type": "array",
            "description": "Collection of key-value pairs that represent custom data to add to the metadata file that MongoDB Cloud uploads to the bucket when the export job finishes.",
            "items": {
              "$ref": "#/components/schemas/customData"
            }
          },
          "exportBucketId": {
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the AWS bucket to which MongoDB Cloud exports the Cloud Backup snapshot.",
            "example": "d705ef7f03974e8363ffee5d",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "writeOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "snapshotId": {
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the Cloud Backup snasphot to export.",
            "example": "78e18e587716102f711a5bca",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "writeOnly": true
          }
        },
        "required": [
          "exportBucketId",
          "links",
          "snapshotId"
        ]
      },
      "ApiAtlasDiskBackupExportJobView": {
        "type": "object",
        "properties": {
          "components": {
            "type": "array",
            "description": "Information on the export job for each replica set in the sharded cluster.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasDiskBackupBaseRestoreMemberView"
            },
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when someone created this export job. MongoDB Cloud represents this timestamp in ISO 8601 format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "customData": {
            "type": "array",
            "description": "Collection of key-value pairs that represent custom data for the metadata file that MongoDB Cloud uploads to the bucket when the export job finishes.",
            "items": {
              "$ref": "#/components/schemas/customData"
            }
          },
          "deliveryUrl": {
            "type": "array",
            "description": "One or more Uniform Resource Locators (URLs) that point to the compressed snapshot files for manual download. MongoDB Cloud returns this parameter when `\"deliveryType\" : \"download\"`.",
            "items": {
              "type": "string",
              "description": "One Uniform Resource Locator that point to the compressed snapshot files for manual download."
            },
            "readOnly": true
          },
          "exportBucketId": {
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the AWS bucket to which MongoDB Cloud exports the Cloud Backup snapshot.",
            "example": "d705ef7f03974e8363ffee5d",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "exportStatus": {
            "$ref": "#/components/schemas/ApiExportStatusView"
          },
          "finishedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when this export job completed. MongoDB Cloud represents this timestamp in ISO 8601 format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the restore job.",
            "example": "e7cb93f480f357b5139ccf37",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "prefix": {
            "type": "string",
            "description": "Full path on the cloud provider bucket to the folder where the snapshot is exported.",
            "pattern": "/exported_snapshots/\\{ORG-NAME\\}/\\{PROJECT-NAME\\}/\\{CLUSTER-NAME\\}/\\{SNAPSHOT-INITIATION-DATE\\}/\\{TIMESTAMP\\}",
            "readOnly": true
          },
          "snapshotId": {
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the snapshot.",
            "example": "78e18e587716102f711a5bca",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$"
          },
          "state": {
            "type": "string",
            "description": "State of the export job.",
            "enum": [
              "Cancelled",
              "Failed",
              "InProgress",
              "Queued",
              "Successful"
            ],
            "readOnly": true
          }
        },
        "required": [
          "exportBucketId",
          "links"
        ]
      },
      "ApiAtlasDiskBackupOnDemandSnapshotRequestView": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Human-readable phrase or sentence that explains the purpose of the snapshot. The resource returns this parameter when `\"status\" : \"onDemand\"`."
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "retentionInDays": {
            "type": "number",
            "description": "Number of days that MongoDB Cloud should retain the on-demand snapshot. Must be at least **1**",
            "minimum": 1
          }
        },
        "required": [
          "links"
        ]
      },
      "ApiAtlasDiskBackupReplicaSetView": {
        "type": "object",
        "description": "Details of the replica set snapshot that MongoDB Cloud created.",
        "properties": {
          "cloudProvider": {
            "type": "string",
            "description": "Human-readable label that identifies the cloud provider that stores this snapshot. The resource returns this parameter when `\"type\": \"replicaSet\".`",
            "enum": [
              "AWS",
              "AZURE",
              "GCP"
            ],
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when MongoDB Cloud took the snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "Human-readable phrase or sentence that explains the purpose of the snapshot. The resource returns this parameter when `\"status\": \"onDemand\"`.",
            "readOnly": true
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when MongoDB Cloud deletes the snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "frequencyType": {
            "type": "string",
            "description": "Human-readable label that identifies how often this snapshot triggers.",
            "enum": [
              "hourly",
              "daily",
              "weekly",
              "monthly"
            ],
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the snapshot.",
            "example": "78e18e587716102f711a5bca",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "masterKeyUUID": {
            "type": "string",
            "format": "uuid",
            "description": "Unique string that identifies the Amazon Web Services (AWS) Key Management Service (KMS) Customer Master Key (CMK) used to encrypt the snapshot. The resource returns this value when `\"encryptionEnabled\" : true`.",
            "readOnly": true
          },
          "mongodVersion": {
            "type": "string",
            "description": "Version of the MongoDB host that this snapshot backs up.",
            "pattern": "([\\d]+\\.[\\d]+\\.[\\d]+)",
            "readOnly": true
          },
          "policyItems": {
            "type": "array",
            "description": "List that contains unique identifiers for the policy items.",
            "items": {
              "type": "string",
              "description": "Unique 24-hexadecimal digit string that identifies one policy item.",
              "example": "f9fd98556fbe1a4eb3a396cb",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            },
            "readOnly": true
          },
          "replicaSetName": {
            "type": "string",
            "description": "Human-readable label that identifies the replica set from which MongoDB Cloud took this snapshot. The resource returns this parameter when `\"type\": \"replicaSet\"`",
            "readOnly": true
          },
          "snapshotType": {
            "type": "string",
            "description": "Human-readable label that identifies when this snapshot triggers.",
            "enum": [
              "onDemand",
              "scheduled"
            ],
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "Human-readable label that indicates the stage of the backup process for this snapshot.",
            "enum": [
              "queued",
              "inProgress",
              "completed",
              "failed"
            ],
            "readOnly": true
          },
          "storageSizeBytes": {
            "type": "integer",
            "format": "int32",
            "description": "Number of bytes taken to store the backup snapshot.",
            "pattern": "^([0-9]+)$",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "description": "Human-readable label that categorizes the cluster as a replica set or sharded cluster.",
            "enum": [
              "REPLICA_SET",
              "SHARDED_CLUSTER"
            ],
            "readOnly": true
          }
        },
        "required": [
          "links"
        ],
        "title": "Replica Set Snapshot"
      },
      "ApiAtlasDiskBackupRestoreJobView": {
        "type": "object",
        "properties": {
          "cancelled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone canceled this restore job.",
            "readOnly": true
          },
          "components": {
            "type": "array",
            "description": "Information on the export job for each replica set in the sharded cluster.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasDiskBackupBaseRestoreMemberView"
            },
            "readOnly": true
          },
          "deliveryType": {
            "type": "string",
            "description": "Human-readable label that categorizes the restore job to create.",
            "enum": [
              "automated",
              "download",
              "pointInTime"
            ]
          },
          "deliveryUrl": {
            "type": "array",
            "description": "One or more Uniform Resource Locators (URLs) that point to the compressed snapshot files for manual download. MongoDB Cloud returns this parameter when `\"deliveryType\" : \"download\"`.",
            "items": {
              "type": "string",
              "description": "One Uniform Resource Locator that point to the compressed snapshot files for manual download."
            },
            "readOnly": true
          },
          "desiredTimestamp": {
            "$ref": "#/components/schemas/BSONTimestamp"
          },
          "expired": {
            "type": "boolean",
            "description": "Flag that indicates whether the restore job expired.",
            "readOnly": true
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the restore job expires. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "failed": {
            "type": "boolean",
            "description": "Flag that indicates whether the restore job failed.",
            "readOnly": true
          },
          "finishedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the restore job completed. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the restore job.",
            "example": "e7cb93f480f357b5139ccf37",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "oplogInc": {
            "type": "integer",
            "format": "int32",
            "description": "Oplog operation number from which you want to restore this snapshot. This number represents the second part of an Oplog timestamp. The resource returns this parameter when `\"deliveryType\" : \"pointInTime\"` and **oplogTs** exceeds `0`.",
            "example": 1,
            "minimum": 1
          },
          "oplogTs": {
            "type": "integer",
            "format": "int32",
            "description": "Date and time from which you want to restore this snapshot. This parameter expresses this timestamp in the number of seconds that have elapsed since the UNIX epoch. This number represents the first part of an Oplog timestamp. The resource returns this parameter when `\"deliveryType\" : \"pointInTime\"` and **oplogTs** exceeds `0`.",
            "minimum": 1199145600
          },
          "pointInTimeUTCSeconds": {
            "type": "number",
            "description": "Date and time from which MongoDB Cloud restored this snapshot. This parameter expresses this timestamp in the number of seconds that have elapsed since the UNIX epoch. The resource returns this parameter when `\"deliveryType\" : \"pointInTime\"` and **pointInTimeUTCSeconds** exceeds `0`.",
            "minimum": 1199145600
          },
          "snapshotId": {
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the snapshot.",
            "example": "78e18e587716102f711a5bca",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$"
          },
          "targetClusterName": {
            "type": "string",
            "description": "Human-readable label that identifies the target cluster to which the restore job restores the snapshot. The resource returns this parameter when `\"deliveryType\":` `\"automated\"`.",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
          },
          "targetGroupId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the target project for the specified **targetClusterName**.",
            "example": "ca4d8a18b96b317422974eec",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when MongoDB Cloud took the snapshot associated with **snapshotId**. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          }
        },
        "required": [
          "deliveryType",
          "links",
          "targetClusterName",
          "targetGroupId"
        ]
      },
      "ApiAtlasDiskBackupShardedClusterSnapshotMemberView": {
        "type": "object",
        "description": "List that includes the snapshots and the cloud provider that stores the snapshots. The resource returns this parameter when `\"type\" : \"SHARDED_CLUSTER\"`.",
        "properties": {
          "cloudProvider": {
            "type": "string",
            "description": "Human-readable label that identifies the cloud provider that stores this snapshot. The resource returns this parameter when `\"type\": \"replicaSet\".`",
            "enum": [
              "AWS",
              "AZURE",
              "GCP"
            ],
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the snapshot.",
            "example": "78e18e587716102f711a5bca",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "replicaSetName": {
            "type": "string",
            "description": "Human-readable label that identifies the shard or config host from which MongoDB Cloud took this snapshot.",
            "readOnly": true
          }
        },
        "readOnly": true,
        "required": [
          "cloudProvider",
          "id",
          "replicaSetName"
        ]
      },
      "ApiAtlasDiskBackupShardedClusterSnapshotView": {
        "type": "object",
        "description": "Details of the sharded cluster snapshot that MongoDB Cloud created.",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when MongoDB Cloud took the snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "Human-readable phrase or sentence that explains the purpose of the snapshot. The resource returns this parameter when `\"status\": \"onDemand\"`.",
            "readOnly": true
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when MongoDB Cloud deletes the snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "frequencyType": {
            "type": "string",
            "description": "Human-readable label that identifies how often this snapshot triggers.",
            "enum": [
              "hourly",
              "daily",
              "weekly",
              "monthly"
            ],
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the snapshot.",
            "example": "78e18e587716102f711a5bca",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "masterKeyUUID": {
            "type": "string",
            "format": "uuid",
            "description": "Unique string that identifies the Amazon Web Services (AWS) Key Management Service (KMS) Customer Master Key (CMK) used to encrypt the snapshot. The resource returns this value when `\"encryptionEnabled\" : true`.",
            "readOnly": true
          },
          "members": {
            "type": "array",
            "description": "List that includes the snapshots and the cloud provider that stores the snapshots. The resource returns this parameter when `\"type\" : \"SHARDED_CLUSTER\"`.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasDiskBackupShardedClusterSnapshotMemberView"
            },
            "readOnly": true
          },
          "mongodVersion": {
            "type": "string",
            "description": "Version of the MongoDB host that this snapshot backs up.",
            "pattern": "([\\d]+\\.[\\d]+\\.[\\d]+)",
            "readOnly": true
          },
          "policyItems": {
            "type": "array",
            "description": "List that contains unique identifiers for the policy items.",
            "items": {
              "type": "string",
              "description": "Unique 24-hexadecimal digit string that identifies one policy item.",
              "example": "f9fd98556fbe1a4eb3a396cb",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            },
            "readOnly": true
          },
          "snapshotIds": {
            "type": "array",
            "description": "List that contains the unique identifiers of the snapshots created for the shards and config host for a sharded cluster. The resource returns this parameter when `\"type\": \"SHARDED_CLUSTER\"`. These identifiers should match the ones specified in the **members[n].id** parameters. This allows you to map a snapshot to its shard or config host name.",
            "items": {
              "type": "string",
              "description": "Unique 24-hexadecimal digit string that identifies the snapshot for part of the sharded cluster.",
              "example": "78e18e587716102f711a5bca",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$",
              "readOnly": true
            },
            "readOnly": true
          },
          "snapshotType": {
            "type": "string",
            "description": "Human-readable label that identifies when this snapshot triggers.",
            "enum": [
              "onDemand",
              "scheduled"
            ],
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "Human-readable label that indicates the stage of the backup process for this snapshot.",
            "enum": [
              "queued",
              "inProgress",
              "completed",
              "failed"
            ],
            "readOnly": true
          },
          "storageSizeBytes": {
            "type": "integer",
            "format": "int32",
            "description": "Number of bytes taken to store the backup snapshot.",
            "pattern": "^([0-9]+)$",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "description": "Human-readable label that categorizes the cluster as a replica set or sharded cluster.",
            "enum": [
              "REPLICA_SET",
              "SHARDED_CLUSTER"
            ],
            "readOnly": true
          }
        },
        "required": [
          "links"
        ],
        "title": "Sharded Cluster Snapshot"
      },
      "ApiAtlasDiskBackupSnapshotAWSExportBucketView": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the Amazon Web Services (AWS) Simple Storage Service (S3) export bucket.",
            "example": "d705ef7f03974e8363ffee5d",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "bucketName": {
            "type": "string",
            "description": "Human-readable label that identifies the AWS bucket that the role is authorized to access."
          },
          "cloudProvider": {
            "type": "string",
            "description": "Human-readable label that identifies the cloud provider that stores this snapshot.",
            "enum": [
              "AWS",
              "AZURE",
              "GCP"
            ]
          },
          "iamRoleId": {
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the AWS IAM role that MongoDB Cloud uses to access the AWS S3 bucket.",
            "example": "3ede41953aba3592851299c1",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          }
        },
        "required": [
          "links"
        ]
      },
      "ApiAtlasDiskBackupSnapshotScheduleView": {
        "type": "object",
        "properties": {
          "autoExportEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether MongoDB Cloud automatically exports cloud backup snapshots to the AWS bucket."
          },
          "clusterId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the cluster with the snapshot you want to return.",
            "example": "5faec72692cee15b51eb22a4",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "clusterName": {
            "type": "string",
            "description": "Human-readable label that identifies the cluster with the snapshot you want to return.",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$",
            "readOnly": true
          },
          "export": {
            "$ref": "#/components/schemas/AutoExportPolicyView"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "nextSnapshot": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when MongoDB Cloud takes the next snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "policies": {
            "type": "array",
            "description": "Rules set for this backup schedule.",
            "items": {
              "$ref": "#/components/schemas/ApiPolicyView"
            },
            "maxItems": 1
          },
          "referenceHourOfDay": {
            "type": "number",
            "description": "Hour of day in Coordinated Universal Time (UTC) that represents when MongoDB Cloud takes the snapshot."
          },
          "referenceMinuteOfHour": {
            "type": "number",
            "description": "Minute of the **referenceHourOfDay** that represents when MongoDB Cloud takes the snapshot."
          },
          "restoreWindowDays": {
            "type": "number",
            "description": "Number of previous days that you can restore back to with Continuous Cloud Backup accuracy. You must specify a positive, non-zero integer. This parameter applies to continuous cloud backups only."
          },
          "updateSnapshots": {
            "type": "boolean",
            "description": "Flag that indicates whether to apply the retention changes in the updated backup policy to snapshots that MongoDB Cloud took previously.",
            "writeOnly": true
          },
          "useOrgAndGroupNamesInExportPrefix": {
            "type": "boolean",
            "description": "Flag that indicates whether to use organization and project names instead of organization and project UUIDs in the path to the metadata files that MongoDB Cloud uploads to your AWS bucket."
          }
        },
        "required": [
          "links",
          "policies"
        ]
      },
      "ApiAtlasEncryptionAtRestView": {
        "type": "object",
        "properties": {
          "awsKms": {
            "$ref": "#/components/schemas/awsKms"
          },
          "azureKeyVault": {
            "$ref": "#/components/schemas/azureKeyVault"
          },
          "googleCloudKms": {
            "$ref": "#/components/schemas/googleCloudKms"
          }
        }
      },
      "ApiAtlasFTSAnalyzersView": {
        "$ref": "#/components/schemas/ApiAtlasFTSAnalyzersViewManual"
      },
      "ApiAtlasFTSAnalyzersViewManual": {
        "type": "object",
        "description": "Settings that describe one Atlas Search custom analyzer.",
        "properties": {
          "charFilters": {
            "type": "array",
            "description": "Filters that examine text one character at a time and perform filtering operations.",
            "items": {
              "type": "object",
              "oneOf": [
                {
                  "$ref": "#/components/schemas/charFilterhtmlStrip"
                },
                {
                  "$ref": "#/components/schemas/charFiltericuNormalize"
                },
                {
                  "$ref": "#/components/schemas/charFiltermapping"
                },
                {
                  "$ref": "#/components/schemas/charFilterpersian"
                }
              ]
            }
          },
          "name": {
            "type": "string",
            "description": "Human-readable name that identifies the custom analyzer. Names must be unique within an index, and must not start with any of the following strings:\n- `lucene.`\n- `builtin.`\n- `mongodb.`"
          },
          "tokenFilters": {
            "type": "array",
            "description": "Filter that performs operations such as:\n\n- Stemming, which reduces related words, such as \"talking\", \"talked\", and \"talks\" to their root word \"talk\".\n\n- Redaction, the removal of sensitive information from public documents.",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/tokenFilterasciiFolding"
                },
                {
                  "$ref": "#/components/schemas/tokenFilterdaitchMokotoffSoundex"
                },
                {
                  "$ref": "#/components/schemas/tokenFilteredgeGram"
                },
                {
                  "$ref": "#/components/schemas/tokenFiltericuFolding"
                },
                {
                  "$ref": "#/components/schemas/tokenFiltericuNormalizer"
                },
                {
                  "$ref": "#/components/schemas/tokenFilterlength"
                },
                {
                  "$ref": "#/components/schemas/tokenFilterlowercase"
                },
                {
                  "$ref": "#/components/schemas/tokenFilternGram"
                },
                {
                  "$ref": "#/components/schemas/tokenFilterregex"
                },
                {
                  "$ref": "#/components/schemas/tokenFilterreverse"
                },
                {
                  "$ref": "#/components/schemas/tokenFiltershingle"
                },
                {
                  "$ref": "#/components/schemas/tokenFiltersnowballStemming"
                },
                {
                  "$ref": "#/components/schemas/tokenFilterstopword"
                },
                {
                  "$ref": "#/components/schemas/tokenFiltertrim"
                }
              ]
            }
          },
          "tokenizer": {
            "type": "object",
            "description": "Tokenizer that you want to use to create tokens. Tokens determine how Atlas Search splits up text into discrete chunks for indexing.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/tokenizeredgeGram"
              },
              {
                "$ref": "#/components/schemas/tokenizerkeyword"
              },
              {
                "$ref": "#/components/schemas/tokenizernGram"
              },
              {
                "$ref": "#/components/schemas/tokenizerregexCaptureGroup"
              },
              {
                "$ref": "#/components/schemas/tokenizerregexSplit"
              },
              {
                "$ref": "#/components/schemas/tokenizerstandard"
              },
              {
                "$ref": "#/components/schemas/tokenizeruaxUrlEmail"
              },
              {
                "$ref": "#/components/schemas/tokenizerwhitespace"
              }
            ]
          }
        },
        "required": [
          "name",
          "tokenizer"
        ],
        "title": "analyzers"
      },
      "ApiAtlasFTSIndexView": {
        "type": "object",
        "properties": {
          "analyzer": {
            "type": "string",
            "default": "lucene.standard",
            "description": "Specific pre-defined method chosen to convert database field text into searchable words. This conversion reduces the text of fields into the smallest units of text. These units are called a **term** or **token**. This process, known as tokenization, involves a variety of changes made to the text in fields:\n\n- extracting words\n- removing punctuation\n- removing accents\n- changing to lowercase\n- removing common words\n- reducing words to their root form (stemming)\n- changing words to their base form (lemmatization)\n MongoDB Cloud uses the selected process to build the Atlas Search index.",
            "enum": [
              "lucene.standard",
              "lucene.simple",
              "lucene.whitespace",
              "lucene.keyword",
              "lucene.arabic",
              "lucene.armenian",
              "lucene.basque",
              "lucene.bengali",
              "lucene.brazilian",
              "lucene.bulgarian",
              "lucene.catalan",
              "lucene.chinese",
              "lucene.cjk",
              "lucene.czech",
              "lucene.danish",
              "lucene.dutch",
              "lucene.english",
              "lucene.finnish",
              "lucene.french",
              "lucene.galician",
              "lucene.german",
              "lucene.greek",
              "lucene.hindi",
              "lucene.hungarian",
              "lucene.indonesian",
              "lucene.irish",
              "lucene.italian",
              "lucene.japanese",
              "lucene.korean",
              "lucene.kuromoji",
              "lucene.latvian",
              "lucene.lithuanian",
              "lucene.morfologik",
              "lucene.nori",
              "lucene.norwegian",
              "lucene.persian",
              "lucene.portuguese",
              "lucene.romanian",
              "lucene.russian",
              "lucene.smartcn",
              "lucene.sorani",
              "lucene.spanish",
              "lucene.swedish",
              "lucene.thai",
              "lucene.turkish",
              "lucene.ukrainian"
            ],
            "externalDocs": {
              "description": "Atlas Search Analyzers",
              "url": "https://docs.atlas.mongodb.com/atlas-search/analyzers/"
            }
          },
          "analyzers": {
            "type": "array",
            "description": "List of user-defined methods to convert database field text into searchable words.",
            "externalDocs": {
              "description": "Custom Atlas Search Analyzers",
              "url": "https://docs.atlas.mongodb.com/atlas-search/analyzers/custom/"
            },
            "items": {
              "$ref": "#/components/schemas/ApiAtlasFTSAnalyzersViewManual"
            }
          },
          "collectionName": {
            "type": "string",
            "description": "Human-readable label that identifies the collection that contains one or more Atlas Search indexes."
          },
          "database": {
            "type": "string",
            "description": "Human-readable label that identifies the database that contains the collection with one or more Atlas Search indexes."
          },
          "indexID": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this Atlas Search index.",
            "example": "2dc22bf163e2f83527cc3838",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "mappings": {
            "$ref": "#/components/schemas/ApiAtlasFTSMappingsViewManual"
          },
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies this index. Within each namespace, names of all indexes in the namespace must be unique."
          },
          "searchAnalyzer": {
            "type": "string",
            "default": "lucene.standard",
            "description": "Method applied to identify words when searching this index.",
            "enum": [
              "lucene.standard",
              "lucene.simple",
              "lucene.whitespace",
              "lucene.keyword",
              "lucene.arabic",
              "lucene.armenian",
              "lucene.basque",
              "lucene.bengali",
              "lucene.brazilian",
              "lucene.bulgarian",
              "lucene.catalan",
              "lucene.chinese",
              "lucene.cjk",
              "lucene.czech",
              "lucene.danish",
              "lucene.dutch",
              "lucene.english",
              "lucene.finnish",
              "lucene.french",
              "lucene.galician",
              "lucene.german",
              "lucene.greek",
              "lucene.hindi",
              "lucene.hungarian",
              "lucene.indonesian",
              "lucene.irish",
              "lucene.italian",
              "lucene.japanese",
              "lucene.korean",
              "lucene.kuromoji",
              "lucene.latvian",
              "lucene.lithuanian",
              "lucene.morfologik",
              "lucene.nori",
              "lucene.norwegian",
              "lucene.persian",
              "lucene.portuguese",
              "lucene.romanian",
              "lucene.russian",
              "lucene.smartcn",
              "lucene.sorani",
              "lucene.spanish",
              "lucene.swedish",
              "lucene.thai",
              "lucene.turkish",
              "lucene.ukrainian"
            ]
          },
          "status": {
            "type": "string",
            "description": "Condition of the search index when you made this request.\n\n| Status | Index Condition |\n |---|---|\n | IN_PROGRESS | Atlas is building or re-building the index after an edit. |\n | STEADY | You can use this search index. |\n | FAILED | Atlas could not build the index. |\n | MIGRATING | Atlas is upgrading the underlying cluster tier and migrating indexes. |\n",
            "enum": [
              "FAILED",
              "IN_PROGRESS",
              "MIGRATING",
              "STEADY"
            ],
            "readOnly": true
          },
          "synonyms": {
            "type": "array",
            "description": "Rule sets that map words to their synonyms in this index.",
            "externalDocs": {
              "description": "Synonym Mapping",
              "url": "https://docs.atlas.mongodb.com/atlas-search/synonyms/"
            },
            "items": {
              "$ref": "#/components/schemas/ApiAtlasFTSSynonymMappingDefinitionView"
            }
          }
        },
        "required": [
          "collectionName",
          "database",
          "name"
        ]
      },
      "ApiAtlasFTSMappingsViewManual": {
        "type": "object",
        "description": "Index specifications for the collection's fields.",
        "properties": {
          "dynamic": {
            "type": "boolean",
            "default": false,
            "description": "Flag that indicates whether the index uses dynamic or static mappings. Required if **mappings.fields** is omitted.",
            "externalDocs": {
              "description": "Dynamic or Static Mappings",
              "url": "https://www.mongodb.com/docs/atlas/atlas-search/index-definitions/#field-mapping-examples"
            }
          },
          "fields": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "externalDocs": {
                "description": "Atlas Search Field Mappings",
                "url": "https://www.mongodb.com/docs/atlas/atlas-search/define-field-mappings/#define-field-mappings"
              }
            },
            "description": "One or more field specifications for the Atlas Search index. Required if **mappings.dynamic** is omitted or set to **false**.",
            "externalDocs": {
              "description": "Atlas Search Index",
              "url": "https://www.mongodb.com/docs/atlas/atlas-search/index-definitions/"
            }
          }
        },
        "title": "mappings"
      },
      "ApiAtlasFTSSynonymMappingDefinitionView": {
        "type": "object",
        "description": "Synonyms used for this full text index.",
        "properties": {
          "analyzer": {
            "type": "string",
            "default": "lucene.standard",
            "description": "Specific pre-defined method chosen to apply to the synonyms to be searched.",
            "enum": [
              "lucene.standard",
              "lucene.simple",
              "lucene.whitespace",
              "lucene.keyword",
              "lucene.arabic",
              "lucene.armenian",
              "lucene.basque",
              "lucene.bengali",
              "lucene.brazilian",
              "lucene.bulgarian",
              "lucene.catalan",
              "lucene.chinese",
              "lucene.cjk",
              "lucene.czech",
              "lucene.danish",
              "lucene.dutch",
              "lucene.english",
              "lucene.finnish",
              "lucene.french",
              "lucene.galician",
              "lucene.german",
              "lucene.greek",
              "lucene.hindi",
              "lucene.hungarian",
              "lucene.indonesian",
              "lucene.irish",
              "lucene.italian",
              "lucene.japanese",
              "lucene.korean",
              "lucene.kuromoji",
              "lucene.latvian",
              "lucene.lithuanian",
              "lucene.morfologik",
              "lucene.nori",
              "lucene.norwegian",
              "lucene.persian",
              "lucene.portuguese",
              "lucene.romanian",
              "lucene.russian",
              "lucene.smartcn",
              "lucene.sorani",
              "lucene.spanish",
              "lucene.swedish",
              "lucene.thai",
              "lucene.turkish",
              "lucene.ukrainian"
            ]
          },
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies the synonym definition. Each **synonym.name** must be unique within the same index definition."
          },
          "source": {
            "$ref": "#/components/schemas/SynonymSource"
          }
        },
        "required": [
          "analyzer",
          "name",
          "source"
        ],
        "title": "Synonym Mapping Definition"
      },
      "ApiAtlasFreeAutoScalingViewManual": {
        "type": "object",
        "description": "Range of instance sizes to which your cluster can scale.",
        "properties": {
          "compute": {
            "$ref": "#/components/schemas/ApiAtlasFreeComputeAutoScalingViewManual"
          }
        }
      },
      "ApiAtlasFreeComputeAutoScalingViewManual": {
        "type": "object",
        "description": "Collection of settings that configures how a cluster might scale its cluster tier and whether the cluster can scale down.",
        "properties": {
          "maxInstanceSize": {
            "type": "string",
            "description": "Maximum instance size to which your cluster can automatically scale.",
            "enum": [
              "M0",
              "M2",
              "M5"
            ]
          },
          "minInstanceSize": {
            "type": "string",
            "description": "Minimum instance size to which your cluster can automatically scale.",
            "enum": [
              "M0",
              "M2",
              "M5"
            ]
          }
        },
        "title": "Tenant"
      },
      "ApiAtlasFreeProviderSettingsViewManual": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiAtlasProviderSettingsViewManual"
          },
          {
            "type": "object",
            "properties": {
              "autoScaling": {
                "$ref": "#/components/schemas/ApiAtlasFreeAutoScalingViewManual"
              },
              "backingProviderName": {
                "type": "string",
                "description": "Cloud service provider on which MongoDB Cloud provisioned the multi-tenant host. The resource returns this parameter when **providerSettings.providerName** is `TENANT` and **providerSetting.instanceSizeName** is `M2` or `M5`.",
                "enum": [
                  "AWS",
                  "AZURE",
                  "GCP",
                  "TENANT"
                ]
              },
              "instanceSizeName": {
                "type": "string",
                "description": "Cluster tier, with a default storage and memory capacity, that applies to all the data-bearing hosts in your cluster. You must set **providerSettings.providerName** to `TENANT` and specify the cloud service provider in **providerSettings.backingProviderName**.",
                "enum": [
                  "M0",
                  "M2",
                  "M5"
                ]
              },
              "regionName": {
                "type": "string",
                "description": "Human-readable label that identifies the geographic location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases. For a complete list of region names, see [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/#std-label-amazon-aws), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), and [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/). For multi-region clusters, see **replicationSpec.{region}**."
              }
            }
          }
        ]
      },
      "ApiAtlasGCPAutoScalingViewManual": {
        "type": "object",
        "description": "Range of instance sizes to which your cluster can scale.",
        "properties": {
          "compute": {
            "$ref": "#/components/schemas/ApiAtlasGCPComputeAutoScalingViewManual"
          }
        }
      },
      "ApiAtlasGCPCloudProviderContainerView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiAtlasCloudProviderContainerView"
          },
          {
            "type": "object",
            "properties": {
              "atlasCidrBlock": {
                "type": "string",
                "description": "IP addresses expressed in Classless Inter-Domain Routing (CIDR) notation that MongoDB Cloud uses for the network peering containers in your project. MongoDB Cloud assigns all of the project's clusters deployed to this cloud provider an IP address from this range. MongoDB Cloud locks this value if an M10 or greater cluster or a network peering connection exists in this project.\n\nThese CIDR blocks must fall within the ranges reserved per RFC 1918. GCP further limits the block to a lower bound of the `/18` range.\n\nTo modify the CIDR block, the target project cannot have:\n\n- Any M10 or greater clusters\n- Any other VPC peering connections\n\n You can also create a new project and create a network peering connection to set the desired MongoDB Cloud network peering container CIDR block for that project. MongoDB Cloud limits the number of MongoDB nodes per network peering connection based on the CIDR block and the region selected for the project.\n\n **Example:** A project in an Google Cloud (GCP) region supporting three availability zones and an MongoDB CIDR network peering container block of limit of `/24` equals 27 three-node replica sets.",
                "pattern": "^((([0-9]{1,3}\\.){3}[0-9]{1,3})|([\\:]{0,2}([0-9a-f]{1,4}\\:){0,7}[0-9a-f]{1,4}[\\:]{0,2}))((%2[fF]|\\/)[0-9]{1,3})+$"
              },
              "gcpProjectId": {
                "type": "string",
                "description": "Unique string that identifies the GCP project in which MongoDB Cloud clusters in this network peering container exist. The response returns **null** if no clusters exist in this network peering container.",
                "maxLength": 26,
                "minLength": 26,
                "pattern": "^p-[0-9a-z]{24}$",
                "readOnly": true
              },
              "networkName": {
                "type": "string",
                "description": "Human-readable label that identifies the network in which MongoDB Cloud clusters in this network peering container exist. MongoDB Cloud returns **null** if no clusters exist in this network peering container.",
                "maxLength": 36,
                "minLength": 36,
                "pattern": "^nt-[0-9a-f]{24}-[0-9a-z]{8}$",
                "readOnly": true
              },
              "regions": {
                "type": "array",
                "description": "List of GCP regions to which you want to deploy this MongoDB Cloud network peering container.  In this MongoDB Cloud project, you can deploy clusters only to the GCP regions in this list. To deploy MongoDB Cloud clusters to other GCP regions, create additional projects.",
                "items": {
                  "type": "string",
                  "description": "List of GCP regions to which you want to deploy this MongoDB Cloud network peering container.  In this MongoDB Cloud project, you can deploy clusters only to the GCP regions in this list. To deploy MongoDB Cloud clusters to other GCP regions, create additional projects.",
                  "enum": [
                    "ASIA_EAST_2",
                    "ASIA_NORTHEAST_2",
                    "ASIA_NORTHEAST_3",
                    "ASIA_SOUTH_1",
                    "ASIA_SOUTH_2",
                    "ASIA_SOUTHEAST_2",
                    "AUSTRALIA_SOUTHEAST_1",
                    "AUSTRALIA_SOUTHEAST_2",
                    "CENTRAL_US",
                    "EASTERN_ASIA_PACIFIC",
                    "EASTERN_US",
                    "EUROPE_CENTRAL_2",
                    "EUROPE_NORTH_1",
                    "EUROPE_WEST_2",
                    "EUROPE_WEST_3",
                    "EUROPE_WEST_4",
                    "EUROPE_WEST_6",
                    "NORTH_AMERICA_NORTHEAST_1",
                    "NORTH_AMERICA_NORTHEAST_2",
                    "NORTHEASTERN_ASIA_PACIFIC",
                    "SOUTH_AMERICA_EAST_1",
                    "SOUTH_AMERICA_WEST_1",
                    "SOUTHEASTERN_ASIA_PACIFIC",
                    "US_EAST_4",
                    "US_WEST_2",
                    "US_WEST_3",
                    "US_WEST_4",
                    "WESTERN_EUROPE",
                    "WESTERN_US"
                  ]
                }
              }
            }
          }
        ],
        "description": "Collection of settings that configures the network container for a virtual private connection on Amazon Web Services.",
        "required": [
          "atlasCidrBlock",
          "regions"
        ],
        "title": "GCP"
      },
      "ApiAtlasGCPComputeAutoScalingViewManual": {
        "type": "object",
        "description": "Collection of settings that configures how a cluster might scale its cluster tier and whether the cluster can scale down. Cluster tier auto-scaling is unavailable for clusters using Low CPU or NVME storage classes.",
        "properties": {
          "maxInstanceSize": {
            "type": "string",
            "description": "Maximum instance size to which your cluster can automatically scale.",
            "enum": [
              "M10",
              "M20",
              "M30",
              "M40",
              "M50",
              "M60",
              "M80",
              "M140",
              "M200",
              "M250",
              "M300",
              "M400",
              "R40",
              "R50",
              "R60",
              "R80",
              "R200",
              "R300",
              "R400",
              "R600"
            ]
          },
          "minInstanceSize": {
            "type": "string",
            "description": "Minimum instance size to which your cluster can automatically scale.",
            "enum": [
              "M10",
              "M20",
              "M30",
              "M40",
              "M50",
              "M60",
              "M80",
              "M140",
              "M200",
              "M250",
              "M300",
              "M400",
              "R40",
              "R50",
              "R60",
              "R80",
              "R200",
              "R300",
              "R400",
              "R600"
            ]
          }
        },
        "title": "GCP"
      },
      "ApiAtlasGCPConsumerForwardingRuleView": {
        "type": "object",
        "properties": {
          "endpointName": {
            "type": "string",
            "description": "Human-readable label that identifies the Google Cloud consumer forwarding rule that you created.",
            "externalDocs": {
              "description": "Google Cloud Forwarding Rule Concepts",
              "url": "https://cloud.google.com/load-balancing/docs/forwarding-rule-concepts"
            },
            "readOnly": true
          },
          "ipAddress": {
            "type": "string",
            "format": "ipv4",
            "description": "One Private Internet Protocol version 4 (IPv4) address to which this Google Cloud consumer forwarding rule resolves.",
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}\\:){7}[0-9a-f]{1,4}$",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "State of the MongoDB Cloud endpoint group when MongoDB Cloud received this request.",
            "enum": [
              "AVAILABLE",
              "DELETING",
              "FAILED",
              "INITIATING",
              "VERIFIED"
            ],
            "readOnly": true
          }
        }
      },
      "ApiAtlasGCPEndpointGroupView": {
        "type": "object",
        "description": "Group of Private Endpoint settings.",
        "properties": {
          "deleteRequested": {
            "type": "boolean",
            "description": "Flag that indicates whether MongoDB Cloud received a request to remove the specified private endpoint from the private endpoint service.",
            "readOnly": true
          },
          "endpointGroupName": {
            "type": "string",
            "description": "Human-readable label that identifies a set of endpoints.",
            "externalDocs": {
              "description": "Google Cloud Forwarding Rule Concepts",
              "url": "https://cloud.google.com/load-balancing/docs/forwarding-rule-concepts"
            },
            "readOnly": true
          },
          "endpoints": {
            "type": "array",
            "description": "List of individual private endpoints that comprise this endpoint group.",
            "externalDocs": {
              "description": "Google Cloud Forwarding Rule Concepts",
              "url": "https://cloud.google.com/load-balancing/docs/forwarding-rule-concepts"
            },
            "items": {
              "$ref": "#/components/schemas/ApiAtlasGCPConsumerForwardingRuleView"
            },
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "description": "Error message returned when requesting private connection resource. The resource returns `null` if the request succeeded.",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "State of the Google Cloud network endpoint group when MongoDB Cloud received this request.",
            "enum": [
              "AVAILABLE",
              "DELETING",
              "FAILED",
              "INITIATING",
              "VERIFIED"
            ],
            "readOnly": true
          }
        },
        "title": "GCP"
      },
      "ApiAtlasGCPEndpointServiceView": {
        "type": "object",
        "description": "Group of Private Endpoint Service settings.",
        "properties": {
          "endpointGroupNames": {
            "type": "array",
            "description": "List of Google Cloud network endpoint groups that corresponds to the Private Service Connect endpoint service.",
            "externalDocs": {
              "description": "Google Cloud Forwarding Rule Concepts",
              "url": "https://cloud.google.com/load-balancing/docs/forwarding-rule-concepts"
            },
            "items": {
              "type": "string",
              "description": "One Google Cloud network endpoint group that corresponds to the Private Service Connect endpoint service."
            }
          },
          "errorMessage": {
            "type": "string",
            "description": "Error message returned when requesting private connection resource. The resource returns `null` if the request succeeded.",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the Private Endpoint Service.",
            "example": "3a876d84705fbf5833488cde",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "regionName": {
            "type": "string",
            "description": "Cloud provider region that manages this Private Endpoint Service.",
            "readOnly": true
          },
          "serviceAttachmentNames": {
            "type": "array",
            "description": "List of Uniform Resource Locators (URLs) that identifies endpoints that MongoDB Cloud can use to access one Google Cloud Service across a Google Cloud Virtual Private Connection (VPC) network.",
            "externalDocs": {
              "description": "Google Cloud Private Service Connect Service Attachments",
              "url": "https://cloud.google.com/vpc/docs/private-service-connect#service-attachments"
            },
            "items": {
              "type": "string",
              "description": "Uniform Resource Locator (URL) that identifies one endpoint that MongoDB Cloud can use to access one Google Cloud Service across a Google Cloud Virtual Private Connection (VPC) network.",
              "pattern": "https:\\/\\/([a-z0-9\\.]+)+\\.[a-z]{2,}(\\/[a-z0-9\\-]+)+\\/projects\\/p-[a-z0-9]+\\/regions\\/[a-z\\-0-9]+\\/serviceAttachments\\/[a-z0-9\\-]+"
            }
          },
          "status": {
            "type": "string",
            "description": "State of the Private Endpoint Service connection when MongoDB Cloud received this request.",
            "enum": [
              "AVAILABLE",
              "DELETING",
              "FAILED",
              "INITIATING",
              "WAITING_FOR_USER"
            ],
            "readOnly": true
          }
        },
        "title": "GCP"
      },
      "ApiAtlasGCPInstanceSizesManual": {
        "type": "string",
        "enum": [
          "M10",
          "M20",
          "M30",
          "M40",
          "M50",
          "M60",
          "M80",
          "M140",
          "M200",
          "M250",
          "M300",
          "M400",
          "R40",
          "R50",
          "R60",
          "R80",
          "R200",
          "R300",
          "R400",
          "R600"
        ],
        "title": "GCP Cluster Instance Types"
      },
      "ApiAtlasGCPPeerVpcRequestView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiAtlasNetPeerRequestBase"
          },
          {
            "$ref": "#/components/schemas/ApiAtlasGCPPeerVpcView"
          }
        ]
      },
      "ApiAtlasGCPPeerVpcView": {
        "type": "object",
        "description": "Group of Network Peering connection settings.",
        "properties": {
          "containerId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the MongoDB Cloud network container that contains the specified network peering connection.",
            "example": "2f3ed24096c4b70db8993cb7",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$"
          },
          "errorMessage": {
            "type": "string",
            "description": "Details of the error returned when requesting a GCP network peering resource. The resource returns `null` if the request succeeded.",
            "readOnly": true
          },
          "gcpProjectId": {
            "type": "string",
            "description": "Human-readable label that identifies the GCP project that contains the network that you want to peer with the MongoDB Cloud VPC.",
            "maxLength": 30,
            "minLength": 6,
            "pattern": "^[a-z][0-9a-z-]{4,28}[0-9a-z]{1}"
          },
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the network peering connection.",
            "example": "f29c6d03c5ca80634eeba63b",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "networkName": {
            "type": "string",
            "description": "Human-readable label that identifies the network to peer with the MongoDB Cloud VPC.",
            "maxLength": 63,
            "minLength": 1,
            "pattern": "[a-z]([-a-z0-9]{0,62}[a-z0-9]{0,1})?"
          },
          "status": {
            "type": "string",
            "description": "State of the network peering connection at the time you made the request.",
            "enum": [
              "ADDING_PEER",
              "AVAILABLE",
              "DELETING",
              "FAILED",
              "WAITING_FOR_USER"
            ],
            "readOnly": true
          }
        },
        "required": [
          "containerId",
          "gcpProjectId",
          "networkName"
        ],
        "title": "GCP"
      },
      "ApiAtlasGCPProviderSettingsViewManual": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiAtlasProviderSettingsViewManual"
          },
          {
            "type": "object",
            "properties": {
              "autoScaling": {
                "$ref": "#/components/schemas/ApiAtlasGCPAutoScalingViewManual"
              },
              "instanceSizeName": {
                "type": "string",
                "description": "Cluster tier, with a default storage and memory capacity, that applies to all the data-bearing hosts in your cluster.",
                "enum": [
                  "M10",
                  "M20",
                  "M30",
                  "M40",
                  "M50",
                  "M60",
                  "M80",
                  "M140",
                  "M200",
                  "M250",
                  "M300",
                  "M400",
                  "R40",
                  "R50",
                  "R60",
                  "R80",
                  "R200",
                  "R300",
                  "R400",
                  "R600"
                ]
              },
              "regionName": {
                "type": "string",
                "description": "Human-readable label that identifies the geographic location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases. For multi-region clusters, see **replicationSpec.{region}**.",
                "enum": [
                  "EASTERN_US",
                  "US_EAST_4",
                  "US_WEST_2",
                  "US_WEST_3",
                  "US_WEST_4",
                  "CENTRAL_US",
                  "WESTERN_US",
                  "NORTH_AMERICA_NORTHEAST_1",
                  "NORTH_AMERICA_NORTHEAST_2",
                  "SOUTH_AMERICA_EAST_1",
                  "SOUTH_AMERICA_WEST_1",
                  "WESTERN_EUROPE",
                  "EUROPE_NORTH_1",
                  "EUROPE_WEST_2",
                  "EUROPE_WEST_3",
                  "EUROPE_WEST_4",
                  "EUROPE_WEST_6",
                  "EUROPE_CENTRAL_2",
                  "AUSTRALIA_SOUTHEAST_1",
                  "AUSTRALIA_SOUTHEAST_2",
                  "EASTERN_ASIA_PACIFIC",
                  "NORTHEASTERN_ASIA_PACIFIC",
                  "SOUTHEASTERN_ASIA_PACIFIC",
                  "ASIA_EAST_2",
                  "ASIA_NORTHEAST_2",
                  "ASIA_NORTHEAST_3",
                  "ASIA_SOUTH_1",
                  "ASIA_SOUTH_2",
                  "ASIA_SOUTHEAST_2"
                ],
                "externalDocs": {
                  "description": "GCP",
                  "url": "https://docs.atlas.mongodb.com/reference/google-gcp/"
                }
              }
            }
          }
        ]
      },
      "ApiAtlasGCPRegionsManual": {
        "type": "string",
        "description": "Physical location where MongoDB Cloud deploys your Google Compute-hosted MongoDB cluster nodes. The region you choose can affect network latency for clients accessing your databases.\nWhen MongoDB Cloud deploys a dedicated cluster, it checks if a VPC or VPC connection exists for that provider and region. If not, MongoDB Cloud creates them as part of the deployment. MongoDB Cloud assigns the VPC a CIDR block.\nTo limit a new VPC peering connection to one CIDR block and region, create the connection first. Deploy the cluster after the connection starts.",
        "enum": [
          "ASIA_EAST_2",
          "ASIA_NORTHEAST_2",
          "ASIA_NORTHEAST_3",
          "ASIA_SOUTH_1",
          "ASIA_SOUTH_2",
          "ASIA_SOUTHEAST_2",
          "AUSTRALIA_SOUTHEAST_1",
          "AUSTRALIA_SOUTHEAST_2",
          "CENTRAL_US",
          "EASTERN_ASIA_PACIFIC",
          "EASTERN_US",
          "EUROPE_CENTRAL_2",
          "EUROPE_NORTH_1",
          "EUROPE_WEST_2",
          "EUROPE_WEST_3",
          "EUROPE_WEST_4",
          "EUROPE_WEST_6",
          "NORTH_AMERICA_NORTHEAST_1",
          "NORTH_AMERICA_NORTHEAST_2",
          "NORTHEASTERN_ASIA_PACIFIC",
          "SOUTH_AMERICA_EAST_1",
          "SOUTH_AMERICA_WEST_1",
          "SOUTHEASTERN_ASIA_PACIFIC",
          "US_EAST_4",
          "US_WEST_2",
          "US_WEST_3",
          "US_WEST_4",
          "WESTERN_EUROPE",
          "WESTERN_US"
        ],
        "title": "GCP Regions",
        "x-stoplight": {
          "id": "okgmbf20d9lvm"
        }
      },
      "ApiAtlasGeoShardingView": {
        "type": "object",
        "properties": {
          "customZoneMapping": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ObjectId"
            },
            "description": "List that contains comma-separated key value pairs to map zones to geographic regions. These pairs map an ISO 3166-1a2 location code, with an ISO 3166-2 subdivision code when possible, to a unique 24-hexadecimal string that identifies the custom zone.\n\nThis parameter returns an empty object if no custom zones exist.",
            "readOnly": true
          },
          "managedNamespaces": {
            "type": "array",
            "description": "List that contains a namespace for a Global Cluster. MongoDB Cloud manages this cluster.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasManagedNamespacesView"
            },
            "readOnly": true
          }
        }
      },
      "ApiAtlasGroupMaintenanceWindowView": {
        "type": "object",
        "properties": {
          "autoDeferOnceEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether MongoDB Cloud should defer all maintenance windows for one week after you enable them."
          },
          "dayOfWeek": {
            "type": "number",
            "description": "One-based integer that represents the day of the week that the maintenance window starts.\n\n| Value | Day of Week |\n|---|---|\n| `1` | Sunday |\n| `2` | Monday |\n| `3` | Tuesday |\n| `4` | Wednesday |\n| `5` | Thursday |\n| `6` | Friday |\n| `7` | Saturday |\n",
            "maximum": 7,
            "minimum": 1
          },
          "hourOfDay": {
            "type": "number",
            "description": "Zero-based integer that represents the hour of the of the day that the maintenance window starts according to a 24-hour clock. Use `0` for midnight and `12` for noon.",
            "maximum": 23,
            "minimum": 0
          },
          "startASAP": {
            "type": "boolean",
            "description": "Flag that indicates whether MongoDB Cloud starts the maintenance window immediately upon receiving this request. To start the maintenance window immediately for your project, MongoDB Cloud must have maintenance scheduled and you must set a maintenance window. This flag resets to `false` after MongoDB Cloud completes maintenance."
          }
        },
        "required": [
          "dayOfWeek",
          "hourOfDay"
        ]
      },
      "ApiAtlasGroupSettingsView": {
        "type": "object",
        "description": "Collection of settings that configures the project.",
        "properties": {
          "isCollectDatabaseSpecificsStatisticsEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether to collect database-specific metrics  for the specified project."
          },
          "isDataExplorerEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether to enable the Data Explorer for the specified project."
          },
          "isPerformanceAdvisorEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether to enable the Performance Advisor and Profiler  for the specified project."
          },
          "isRealtimePerformancePanelEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether to enable the Real Time Performance Panel for the specified project."
          },
          "isSchemaAdvisorEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether to enable the Schema Advisor for the specified project."
          }
        }
      },
      "ApiAtlasGroupView": {
        "type": "object",
        "properties": {
          "clusterCount": {
            "type": "number",
            "description": "Quantity of MongoDB Cloud clusters deployed in this project.",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when MongoDB Cloud created this project. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the MongoDB Cloud project.",
            "example": "32b6e34b3d91647abb20e7b8",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies the project included in the MongoDB Cloud organization.",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[\\p{L}\\p{N}\\-_.(),:&@+']{1,64}$"
          },
          "orgId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the MongoDB Cloud organization to which the project belongs.",
            "example": "4888442a3354817a7320eb61",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$"
          },
          "withDefaultAlertsSettings": {
            "type": "boolean",
            "description": "Flag that indicates whether to create the project with default alert settings.",
            "writeOnly": true
          }
        },
        "required": [
          "links",
          "name",
          "orgId"
        ]
      },
      "ApiAtlasHardwareSpecsV15NodeCountManual": {
        "type": "object",
        "description": "",
        "properties": {
          "nodeCount": {
            "type": "integer",
            "description": "Number of read-only nodes for MongoDB Cloud deploys to the region. Read-only nodes can never become the primary, but can enable local reads."
          }
        },
        "title": "Hardware Node Count",
        "x-examples": {
          "example-1": {
            "diskIOPS": 100,
            "ebsVolumeType": "STANDARD",
            "instanceSize": "M10",
            "nodeCount": 0
          }
        }
      },
      "ApiAtlasInheritedRoleView": {
        "type": "object",
        "description": "Role inherited from another context for this database user.",
        "externalDocs": {
          "description": "Built-in MongoDB Roles",
          "url": "https://docs.mongodb.com/manual/reference/built-in-roles/"
        },
        "properties": {
          "db": {
            "type": "string",
            "description": "Human-readable label that identifies the database on which someone grants the action to one MongoDB user."
          },
          "role": {
            "type": "string",
            "description": "Human-readable label that identifies the role inherited. Set this value to `admin` for every role except `read` or `readWrite`.",
            "externalDocs": {
              "description": "MongoDB Built-In Roles",
              "url": "https://docs.mongodb.com/manual/reference/built-in-roles/"
            },
            "pattern": "^\\b(?!xgen-)([0-9A-Za-z_\\-]+)\\b(?<!\\atlasAdmin|read|readWrite|dbAdmin|dbOwner|userAdmin|clusterAdmin|clusterManager|clusterMonitor|hostManager|backup|restore|readAnyDatabase|readWriteAnyDatabase|userAdminAnyDatabase|dbAdminAnyDatabase|root|__system)$"
          }
        },
        "required": [
          "db",
          "role"
        ],
        "title": "Inherited Role"
      },
      "ApiAtlasLegacyClusterDescriptionView": {
        "type": "object",
        "properties": {
          "autoScaling": {
            "$ref": "#/components/schemas/ApiAtlasAutoScalingView"
          },
          "backupEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether the cluster can perform backups. If set to `true`, the cluster can perform backups. You must set this value to `true` for NVMe clusters. Backup uses Cloud Backups for dedicated clusters and Shared Cluster Backups for tenant clusters. If set to `false`, the cluster doesn't use MongoDB Cloud backups."
          },
          "biConnector": {
            "$ref": "#/components/schemas/ApiAtlasBiConnectorView"
          },
          "clusterType": {
            "type": "string",
            "description": "Configuration of nodes that comprise the cluster.",
            "enum": [
              "REPLICASET",
              "SHARDED",
              "GEOSHARDED"
            ]
          },
          "connectionStrings": {
            "$ref": "#/components/schemas/ApiAtlasClusterDescriptionConnectionStringsView"
          },
          "createDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when MongoDB Cloud created this cluster. MongoDB Cloud represents this timestamp in ISO 8601 format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "diskSizeGB": {
            "type": "number",
            "description": "Storage capacity that the host's root volume possesses expressed in gigabytes. Increase this number to add capacity. MongoDB Cloud requires this parameter if you set **replicationSpecs**. If you specify a disk size below the minimum (10 GB), this parameter defaults to the minimum disk size value. Storage charge calculations depend on whether you choose the default value or a custom value.  The maximum value for disk storage cannot exceed 50 times the maximum RAM for the selected cluster. If you require more storage space, consider upgrading your cluster to a higher tier.",
            "maximum": 4096,
            "minimum": 10
          },
          "encryptionAtRestProvider": {
            "type": "string",
            "description": "Cloud service provider that manages your customer keys to provide an additional layer of Encryption at Rest for the cluster.",
            "enum": [
              "AWS",
              "AZURE",
              "GCP",
              "NONE"
            ],
            "externalDocs": {
              "description": "Encryption at Rest using Customer Key Management",
              "url": "https://www.mongodb.com/docs/atlas/security-kms-encryption/"
            }
          },
          "groupId": {
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the project.",
            "example": "32b6e34b3d91647abb20e7b8",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the cluster.",
            "example": "5faec72692cee15b51eb22a4",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "labels": {
            "type": "array",
            "description": "Collection of key-value pairs between 1 to 255 characters in length that tag and categorize the cluster. The MongoDB Cloud console doesn't display your labels.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasNDSLabelView"
            }
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "mongoDBMajorVersion": {
            "type": "string",
            "default": "4.4",
            "description": "Major MongoDB version of the cluster. MongoDB Cloud deploys the cluster with the latest stable release of the specified version.",
            "enum": [
              "3.6",
              "4.0",
              "4.2",
              "4.4",
              "5.0"
            ]
          },
          "mongoDBVersion": {
            "type": "string",
            "description": "Version of MongoDB that the cluster runs.",
            "pattern": "([\\d]+\\.[\\d]+\\.[\\d]+)",
            "readOnly": true
          },
          "mongoURI": {
            "type": "string",
            "description": "Base connection string that you can use to connect to the cluster. MongoDB Cloud displays the string only after the cluster starts, not while it builds the cluster.",
            "externalDocs": {
              "description": "Connection string URI format.",
              "url": "https://docs.mongodb.com/manual/reference/connection-string/"
            },
            "readOnly": true
          },
          "mongoURIUpdated": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when someone last updated the connection string. MongoDB Cloud represents this timestamp in ISO 8601 format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "mongoURIWithOptions": {
            "type": "string",
            "description": "Connection string that you can use to connect to the cluster including the `replicaSet`, `ssl`, and `authSource` query parameters with values appropriate for the cluster. You may need to add MongoDB database users. The response returns this parameter once the cluster can receive requests, not while it builds the cluster.",
            "externalDocs": {
              "description": "Connection string URI format.",
              "url": "https://docs.mongodb.com/manual/reference/connection-string/"
            },
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies the cluster.",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
          },
          "numShards": {
            "type": "number",
            "default": 1,
            "description": "Number of shards up to 50 to deploy for a sharded cluster. The resource returns `1` to indicate a replica set and values of `2` and higher to indicate a sharded cluster. The returned value equals the number of shards in the cluster.",
            "externalDocs": {
              "description": "Sharding",
              "url": "https://docs.mongodb.com/manual/sharding/"
            },
            "maximum": 50,
            "minimum": 1
          },
          "paused": {
            "type": "boolean",
            "description": "Flag that indicates whether the cluster is paused."
          },
          "pitEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether the cluster uses continuous cloud backups.",
            "externalDocs": {
              "description": "Continuous Cloud Backups",
              "url": "https://docs.atlas.mongodb.com/backup/cloud-backup/overview/"
            }
          },
          "providerBackupEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether the M10 or higher cluster can perform Cloud Backups. If set to `true`, the cluster can perform backups. If this and **backupEnabled** are set to `false`, the cluster doesn't use MongoDB Cloud backups."
          },
          "providerSettings": {
            "$ref": "#/components/schemas/ApiAtlasProviderSettingsViewManual"
          },
          "replicationFactor": {
            "type": "number",
            "default": 3,
            "deprecated": true,
            "description": "Number of members that belong to the replica set. Each member retains a copy of your databases, providing high availability and data redundancy. Use **replicationSpecs** instead.",
            "enum": [
              3,
              5,
              7
            ]
          },
          "replicationSpec": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ApiAtlasRegionSpecView"
            },
            "deprecated": true,
            "description": "Physical location where MongoDB Cloud provisions cluster nodes.",
            "title": "Region Configuration"
          },
          "replicationSpecs": {
            "type": "array",
            "description": "List of settings that configure your cluster regions.\n\n- For Global Clusters, each object in the array represents one zone where MongoDB Cloud deploys your clusters nodes.\n- For non-Global sharded clusters and replica sets, the single object represents where MongoDB Cloud deploys your clusters nodes.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasLegacyReplicationSpecViewManual"
            }
          },
          "rootCertType": {
            "type": "string",
            "default": "ISRGROOTX1",
            "description": "Root Certificate Authority that MongoDB Atlas clusters uses. MongoDB Cloud supports Internet Security Research Group.",
            "enum": [
              "ISRGROOTX1"
            ]
          },
          "srvAddress": {
            "type": "string",
            "description": "Connection string that you can use to connect to the cluster. The `+srv` modifier forces the connection to use Transport Layer Security (TLS). The `mongoURI` parameter lists additional options.",
            "externalDocs": {
              "description": "Connection string URI format.",
              "url": "https://docs.mongodb.com/manual/reference/connection-string/"
            },
            "readOnly": true
          },
          "stateName": {
            "type": "string",
            "description": "Human-readable label that indicates the current operating condition of the cluster.",
            "enum": [
              "CREATING",
              "DELETED",
              "DELETING",
              "IDLE",
              "REPAIRING",
              "UPDATING"
            ],
            "readOnly": true
          },
          "versionReleaseSystem": {
            "type": "string",
            "default": "LTS",
            "description": "Method by which the cluster maintains the MongoDB versions. If value is `CONTINUOUS`, you must not specify **mongoDBMajorVersion**.",
            "enum": [
              "CONTINUOUS",
              "LTS"
            ]
          }
        },
        "required": [
          "links"
        ]
      },
      "ApiAtlasLegacyRegionsConfigView": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/ApiAtlasRegionSpecView"
        },
        "deprecated": true,
        "description": "Physical location where MongoDB Cloud provisions cluster nodes.",
        "title": "Region Configuration"
      },
      "ApiAtlasLegacyReplicationSpecViewManual": {
        "type": "object",
        "description": "List of settings that configure your cluster regions.\n- For Global Clusters, each object in the array represents a zone where your clusters\n  nodes deploy.\n- For non-Global replica sets and sharded clusters, this array has one object\n  representing where your clusters nodes deploy.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the replication object for a zone in a Global Cluster.\n- If you include existing zones in the request, you must specify this parameter.\n- If you add a new zone to an existing Global Cluster, you may specify this\n  parameter. The request deletes any existing zones in a Global Cluster that you\n  exclude from the request.",
            "example": "6492cb3770e674ece4e89b41",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$"
          },
          "numShards": {
            "type": "number",
            "default": 1,
            "description": "Positive integer that specifies the number of shards to deploy in each specified zone.\nIf you set this value to `1` and `\"clusterType\" : \"SHARDED\"`, MongoDB Cloud deploys a single-shard sharded cluster. Don't create a sharded cluster with a single shard for production environments. Single-shard sharded clusters don't provide the same benefits as multi-shard configurations."
          },
          "regionsConfig": {
            "$ref": "#/components/schemas/ApiAtlasReplSpecsRegionViewManual"
          },
          "zoneName": {
            "type": "string",
            "description": "Human-readable label that identifies the zone in a Global Cluster. Provide this value only if `\"clusterType\" : \"GEOSHARDED\"`."
          }
        },
        "title": "Replication Settings"
      },
      "ApiAtlasManagedNamespacesView": {
        "type": "object",
        "description": "List that contains a namespace for a Global Cluster. MongoDB Cloud manages this cluster.",
        "properties": {
          "collection": {
            "type": "string",
            "description": "Human-readable label of the collection to manage for this Global Cluster."
          },
          "customShardKey": {
            "type": "string",
            "description": "Database parameter used to divide the *collection* into shards. Global clusters require a compound shard key. This compound shard key combines the location parameter and the user-selected custom key.",
            "readOnly": true
          },
          "db": {
            "type": "string",
            "description": "Human-readable label of the database to manage for this Global Cluster."
          },
          "isCustomShardKeyHashed": {
            "type": "boolean",
            "default": false,
            "description": "Flag that indicates whether someone hashed the custom shard key for the specified collection. If you set this value to `false`, MongoDB Cloud uses ranged sharding.",
            "externalDocs": {
              "description": "Hashed Shard Keys",
              "url": "https://www.mongodb.com/docs/manual/reference/method/sh.shardCollection/#hashed-shard-keys"
            },
            "writeOnly": true
          },
          "isShardKeyUnique": {
            "type": "boolean",
            "default": false,
            "description": "Flag that indicates whether someone [hashed](https://www.mongodb.com/docs/manual/reference/method/sh.shardCollection/#hashed-shard-keys) the custom shard key. If this parameter returns `false`, this cluster uses [ranged sharding](https://www.mongodb.com/docs/manual/core/ranged-sharding/).",
            "writeOnly": true
          },
          "numInitialChunks": {
            "type": "number",
            "description": "Minimum number of chunks to create initially when sharding an empty collection with a [hashed shard key](https://www.mongodb.com/docs/manual/core/hashed-sharding/).",
            "externalDocs": {
              "description": "Global Cluster Sharding",
              "url": "https://www.mongodb.com/docs/atlas/shard-global-collection/"
            },
            "maximum": 8192,
            "pattern": "^[0-9]+$",
            "writeOnly": true
          },
          "presplitHashedZones": {
            "type": "boolean",
            "default": false,
            "description": "Flag that indicates whether MongoDB Cloud should create and distribute initial chunks for an empty or non-existing collection. MongoDB Cloud distributes data based on the defined zones and zone ranges for the collection.",
            "externalDocs": {
              "description": "Hashed Shard Key",
              "url": "https://www.mongodb.com/docs/manual/core/hashed-sharding/"
            },
            "writeOnly": true
          }
        },
        "readOnly": true,
        "required": [
          "collection",
          "customShardKey",
          "db"
        ]
      },
      "ApiAtlasNDSLDAPVerifyConnectivityJobRequestParamsView": {
        "type": "object",
        "description": "Request information needed to verify an Lightweight Directory Access Protocol (LDAP) over Transport Layer Security (TLS) configuration. The response does not return the **bindPassword**.",
        "properties": {
          "authzQueryTemplate": {
            "type": "string",
            "default": "{USER}?memberOf?base",
            "description": "Lightweight Directory Access Protocol (LDAP) query template that MongoDB Cloud applies to create an LDAP query to return the LDAP groups associated with the authenticated MongoDB user. MongoDB Cloud uses this parameter only for user authorization.\n\nUse the `{USER}` placeholder in the Uniform Resource Locator (URL) to substitute the authenticated username. The query relates to the host specified with the hostname. Format this query per [RFC 4515](https://tools.ietf.org/search/rfc4515) and [RFC 4516](https://datatracker.ietf.org/doc/html/rfc4516).",
            "example": "{USER}?memberOf?base",
            "writeOnly": true
          },
          "bindPassword": {
            "type": "string",
            "description": "Password that MongoDB Cloud uses to authenticate the **bindUsername**.",
            "writeOnly": true
          },
          "bindUsername": {
            "type": "string",
            "description": "Full Distinguished Name (DN) of the Lightweight Directory Access Protocol (LDAP) user that MongoDB Cloud uses to connect to the LDAP host. LDAP distinguished names must be formatted according to RFC 2253.",
            "example": "CN=BindUser,CN=Users,DC=myldapserver,DC=mycompany,DC=com",
            "externalDocs": {
              "description": "RFC 2253",
              "url": "https://tools.ietf.org/html/2253"
            },
            "pattern": "^(?:(?<cn>CN=(?<name>[^,]*)),)?(?:(?<path>(?:(?:CN|OU)=[^,]+,?)+),)?(?<domain>(?:DC=[^,]+,?)+)$"
          },
          "caCertificate": {
            "type": "string",
            "description": "Certificate Authority (CA) certificate that MongoDB Cloud uses to verify the identity of the Lightweight Directory Access Protocol (LDAP) host. MongoDB Cloud allows self-signed certificates. To delete an assigned value, pass an empty string: `\"caCertificate\": \"\"`"
          },
          "hostname": {
            "type": "string",
            "description": "Human-readable label that identifies the hostname or Internet Protocol (IP) address of the Lightweight Directory Access Protocol (LDAP) host. This host must have access to the internet or have a Virtual Private Cloud (VPC) peering connection to your cluster.",
            "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?$"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "port": {
            "type": "number",
            "default": 636,
            "description": "IANA port to which the Lightweight Directory Access Protocol (LDAP) host listens for client connections."
          }
        },
        "required": [
          "bindUsername",
          "hostname",
          "links",
          "port"
        ]
      },
      "ApiAtlasNDSLDAPVerifyConnectivityJobRequestValidationView": {
        "type": "object",
        "description": "One test that MongoDB Cloud runs to test verification of the provided Lightweight Directory Access Protocol (LDAP) over Transport Layer Security (TLS) configuration details.",
        "properties": {
          "status": {
            "type": "string",
            "description": "Human-readable string that indicates the result of this verification test.",
            "enum": [
              "FAIL",
              "OK"
            ],
            "readOnly": true
          },
          "validationType": {
            "type": "string",
            "description": "Human-readable label that identifies this verification test that MongoDB Cloud runs.",
            "enum": [
              "AUTHENTICATE",
              "AUTHORIZATION_ENABLED",
              "CONNECT",
              "PARSE_AUTHZ_QUERY",
              "QUERY_SERVER",
              "SERVER_SPECIFIED",
              "TEMPLATE"
            ],
            "readOnly": true
          }
        },
        "readOnly": true
      },
      "ApiAtlasNDSLDAPVerifyConnectivityJobRequestView": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project associated with this Lightweight Directory Access Protocol (LDAP) over Transport Layer Security (TLS) configuration.",
            "example": "32b6e34b3d91647abb20e7b8",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "request": {
            "$ref": "#/components/schemas/ApiAtlasNDSLDAPVerifyConnectivityJobRequestParamsView"
          },
          "requestId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this request to verify an Lightweight Directory Access Protocol (LDAP) configuration.",
            "example": "b9ac4fd1a309d8d20879cddd",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "Human-readable string that indicates the status of the Lightweight Directory Access Protocol (LDAP) over Transport Layer Security (TLS) configuration.",
            "enum": [
              "FAIL",
              "PENDING",
              "SUCCESS"
            ],
            "readOnly": true
          },
          "validations": {
            "type": "array",
            "description": "List that contains the validation messages related to the verification of the provided Lightweight Directory Access Protocol (LDAP) over Transport Layer Security (TLS) configuration details. The list contains a document for each test that MongoDB Cloud runs. MongoDB Cloud stops running tests after the first failure.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasNDSLDAPVerifyConnectivityJobRequestValidationView"
            },
            "readOnly": true
          }
        },
        "required": [
          "links"
        ]
      },
      "ApiAtlasNDSLDAPView": {
        "type": "object",
        "description": "Lightweight Directory Access Protocol (LDAP) over Transport Layer Security (TLS) configuration details that apply to the specified project.",
        "properties": {
          "authenticationEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether users can authenticate using an Lightweight Directory Access Protocol (LDAP) host."
          },
          "authorizationEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether users can authorize access to MongoDB Cloud resources using an Lightweight Directory Access Protocol (LDAP) host."
          },
          "authzQueryTemplate": {
            "type": "string",
            "default": "{USER}?memberOf?base",
            "description": "Lightweight Directory Access Protocol (LDAP) query template that MongoDB Cloud runs to obtain the LDAP groups associated with the authenticated user. MongoDB Cloud uses this parameter only for user authorization. Use the `{USER}` placeholder in the Uniform Resource Locator (URL) to substitute the authenticated username. The query relates to the host specified with the hostname. Format this query according to [RFC 4515](https://tools.ietf.org/search/rfc4515) and [RFC 4516](https://datatracker.ietf.org/doc/html/rfc4516).",
            "example": "{USER}?memberOf?base"
          },
          "bindPassword": {
            "type": "string",
            "description": "Password that MongoDB Cloud uses to authenticate the **bindUsername**.",
            "writeOnly": true
          },
          "bindUsername": {
            "type": "string",
            "description": "Full Distinguished Name (DN) of the Lightweight Directory Access Protocol (LDAP) user that MongoDB Cloud uses to connect to the LDAP host. LDAP distinguished names must be formatted according to RFC 2253.",
            "example": "CN=BindUser,CN=Users,DC=myldapserver,DC=mycompany,DC=com",
            "externalDocs": {
              "description": "RFC 2253",
              "url": "https://tools.ietf.org/html/2253"
            },
            "pattern": "^(?:(?<cn>CN=(?<name>[^,]*)),)?(?:(?<path>(?:(?:CN|OU)=[^,]+,?)+),)?(?<domain>(?:DC=[^,]+,?)+)$"
          },
          "caCertificate": {
            "type": "string",
            "description": "Certificate Authority (CA) certificate that MongoDB Cloud uses to verify the identity of the Lightweight Directory Access Protocol (LDAP) host. MongoDB Cloud allows self-signed certificates. To delete an assigned value, pass an empty string: `\"caCertificate\": \"\"`"
          },
          "hostname": {
            "type": "string",
            "description": "Human-readable label that identifies the hostname or Internet Protocol (IP) address of the Lightweight Directory Access Protocol (LDAP) host. This host must have access to the internet or have a Virtual Private Cloud (VPC) peering connection to your cluster.",
            "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?$"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "port": {
            "type": "number",
            "default": 636,
            "description": "Port to which the Lightweight Directory Access Protocol (LDAP) host listens for client connections."
          },
          "userToDNMapping": {
            "type": "array",
            "description": "User-to-Distinguished Name (DN) map that MongoDB Cloud uses to transform a Lightweight Directory Access Protocol (LDAP) username into an LDAP DN.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasNDSUserToDNMappingView"
            }
          }
        },
        "required": [
          "links"
        ],
        "title": "LDAP Security Settings"
      },
      "ApiAtlasNDSLabelView": {
        "type": "object",
        "description": "Human-readable labels applied to this MongoDB Cloud component.",
        "properties": {
          "key": {
            "type": "string",
            "description": "Key applied to tag and categorize this component.",
            "maxLength": 255,
            "minLength": 1
          },
          "value": {
            "type": "string",
            "description": "Value set to the Key applied to tag and categorize this component.",
            "maxLength": 255,
            "minLength": 1
          }
        },
        "title": "Component Label"
      },
      "ApiAtlasNDSUserToDNMappingView": {
        "type": "object",
        "description": "User-to-Distinguished Name (DN) map that MongoDB Cloud uses to transform a Lightweight Directory Access Protocol (LDAP) username into an LDAP DN.",
        "properties": {
          "ldapQuery": {
            "type": "string",
            "description": "Lightweight Directory Access Protocol (LDAP) query template that inserts the LDAP name that the regular expression matches into an LDAP query Uniform Resource Identifier (URI). The formatting for the query must conform to [RFC 4515](https://datatracker.ietf.org/doc/html/rfc4515) and [RFC 4516](https://datatracker.ietf.org/doc/html/rfc4516)."
          },
          "match": {
            "type": "string",
            "description": "Regular expression that MongoDB Cloud uses to match against the provided Lightweight Directory Access Protocol (LDAP) username. Each parenthesis-enclosed section represents a regular expression capture group that the substitution or `ldapQuery` template uses.",
            "example": "(.*)"
          },
          "substitution": {
            "type": "string",
            "description": "Lightweight Directory Access Protocol (LDAP) Distinguished Name (DN) template that converts the LDAP username that matches regular expression in the *match* parameter into an LDAP Distinguished Name (DN).",
            "example": "CN={0},CN=Users,DC=my-atlas-ldap-server,DC=example,DC=com"
          }
        },
        "required": [
          "ldapQuery",
          "match",
          "substitution"
        ],
        "title": "User to Distinguished Name Mapping"
      },
      "ApiAtlasNetPeerRequestBase": {
        "type": "object",
        "properties": {
          "containerId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the MongoDB Cloud network container that contains the specified network peering connection.",
            "example": "2f3ed24096c4b70db8993cb7",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$"
          },
          "providerName": {
            "type": "string",
            "description": "Cloud service provider that determines the needed settings to configure the network connection for a virtual private connection.",
            "enum": [
              "AWS",
              "AZURE",
              "GCP"
            ],
            "writeOnly": true
          }
        },
        "required": [
          "containerId",
          "providerName"
        ]
      },
      "ApiAtlasNetworkPermissionEntryStatusView": {
        "type": "object",
        "properties": {
          "STATUS": {
            "type": "string",
            "description": "State of the access list entry when MongoDB Cloud made this request.\n\n| Status | Activity |\n|---|---|\n| `ACTIVE` | This access list entry applies to all relevant cloud providers. |\n| `PENDING` | MongoDB Cloud has started to add access list entry. This access list entry may not apply to all cloud providers at the time of this request. |\n| `FAILED` | MongoDB Cloud didn't succeed in adding this access list entry. |\n",
            "enum": [
              "PENDING",
              "FAILED",
              "ACTIVE"
            ],
            "readOnly": true
          }
        },
        "required": [
          "STATUS"
        ]
      },
      "ApiAtlasNetworkPermissionEntryView": {
        "type": "object",
        "properties": {
          "awsSecurityGroup": {
            "type": "string",
            "description": "Unique string of the Amazon Web Services (AWS) security group that you want to add to the project's IP access list. Your IP access list entry can be one **awsSecurityGroup**, one **cidrBlock**, or one **ipAddress**. You must configure Virtual Private Connection (VPC) peering for your project before you can add an AWS security group to an IP access list. You cannot set AWS security groups as temporary access list entries. Don't set this parameter if you set **cidrBlock** or **ipAddress**.",
            "pattern": "^([0-9]*\\/)?sg-([0-9]*)"
          },
          "cidrBlock": {
            "type": "string",
            "description": "Range of IP addresses in Classless Inter-Domain Routing (CIDR) notation that you want to add to the project's IP access list. Your IP access list entry can be one **awsSecurityGroup**, one **cidrBlock**, or one **ipAddress**. Don't set this parameter if you set **awsSecurityGroup** or **ipAddress**.",
            "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\\:){7}[0-9a-f]{1,4}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\\:){1,6}\\:(%2[fF][0-9]{1,3})?$"
          },
          "comment": {
            "type": "string",
            "description": "Remark that explains the purpose or scope of this IP access list entry.",
            "maxLength": 80
          },
          "deleteAfterDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time after which MongoDB Cloud deletes the temporary access list entry. This parameter expresses its value in the ISO 8601 timestamp format in UTC and can include the time zone designation. The date must be later than the current date but no later than one week after you submit this request. The resource returns this parameter if you specified an expiration date when creating this IP access list entry.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z|[+-][01]\\d:[0-5]\\d)$"
          },
          "groupId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that contains the IP access list to which you want to add one or more entries.",
            "example": "32b6e34b3d91647abb20e7b8",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "ipAddress": {
            "type": "string",
            "description": "IP address that you want to add to the project's IP access list. Your IP access list entry can be one **awsSecurityGroup**, one **cidrBlock**, or one **ipAddress**. Don't set this parameter if you set **awsSecurityGroup** or **cidrBlock**.",
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}\\:){7}[0-9a-f]{1,4}$"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          }
        },
        "required": [
          "links"
        ]
      },
      "ApiAtlasOnlineArchiveScheduleView": {
        "type": "object",
        "description": "Regular frequency and duration when archiving process occurs.",
        "discriminator": {
          "mapping": {
            "DAILY": "#/components/schemas/DailyScheduleView",
            "DEFAULT": "#/components/schemas/DefaultScheduleView",
            "MONTHLY": "#/components/schemas/MonthlyScheduleView",
            "WEEKLY": "#/components/schemas/WeeklyScheduleView"
          },
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "Online Archive Schedule"
      },
      "ApiAtlasOnlineArchiveView": {
        "type": "object",
        "properties": {
          "clusterName": {
            "type": "string",
            "description": "Human-readable label that identifies the cluster that contains the collection for which you want to create an online archive.",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$",
            "readOnly": true
          },
          "collName": {
            "type": "string",
            "description": "Human-readable label that identifies the collection for which you created the online archive."
          },
          "collectionType": {
            "type": "string",
            "default": "STANDARD",
            "description": "Classification of MongoDB database collection that you want to return.\n\nIf you set this parameter to `TIMESERIES`, set `\"criteria.type\" : \"date\"` and `\"criteria.dateFormat\" : \"ISODATE\"`.",
            "enum": [
              "STANDARD",
              "TIMESERIES"
            ]
          },
          "criteria": {
            "$ref": "#/components/schemas/CriteriaView"
          },
          "dbName": {
            "type": "string",
            "description": "Human-readable label of the database that contains the collection that contains the online archive."
          },
          "groupId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that contains the specified cluster. The specified cluster contains the collection for which to create the online archive.",
            "example": "32b6e34b3d91647abb20e7b8",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the online archive.",
            "example": "1f0df9ed79cfc99dbcc6f5d8",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "partitionFields": {
            "type": "array",
            "description": "List that contains document parameters to use to logically divide data within a collection. Partitions provide a coarse level of filtering of the underlying collection data. To divide your data, specify up to two parameters that you frequently query. Any queries that don't use these parameters result in a full collection scan of all archived documents. This takes more time and increase your costs.",
            "items": {
              "$ref": "#/components/schemas/PartitionFieldView"
            },
            "minItems": 1
          },
          "schedule": {
            "$ref": "#/components/schemas/ApiAtlasOnlineArchiveScheduleView"
          },
          "state": {
            "type": "string",
            "description": "Phase of the process to create this online archive when you made this request.\n\n| State       | Indication |\n|-------------|------------|\n| `PENDING`   | MongoDB Cloud has queued documents for archive. Archiving hasn't started. |\n| `ARCHIVING` | MongoDB Cloud started archiving documents that meet the archival criteria. |\n| `IDLE`      | MongoDB Cloud waits to start the next archival job. |\n| `PAUSING`   | Someone chose to stop archiving. MongoDB Cloud finishes the running archival job then changes the state to `PAUSED` when that job completes. |\n| `PAUSED`    | MongoDB Cloud has stopped archiving. Archived documents can be queried. The specified archiving operation on the active cluster cannot archive additional documents. You can resume archiving for paused archives at any time. |\n| `ORPHANED`  | Someone has deleted the collection associated with an active or paused archive. MongoDB Cloud doesn't delete the archived data. You must manually delete the online archives associated with the deleted collection. |\n| `DELETED`   | Someone has deleted the archive was deleted. When someone deletes an online archive, MongoDB Cloud removes all associated archived documents from the cloud object storage. |",
            "enum": [
              "PENDING",
              "ARCHIVING",
              "IDLE",
              "PAUSING",
              "PAUSED",
              "ORPHANED",
              "DELETED"
            ],
            "readOnly": true
          }
        },
        "required": [
          "criteria"
        ]
      },
      "ApiAtlasPrivateNetworkEndpointIdEntryView": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Human-readable string to associate with this private endpoint."
          },
          "endpointId": {
            "type": "string",
            "description": "Unique 22-character alphanumeric string that identifies the private endpoint.",
            "example": "vpce-3bf78b0ddee411ba1",
            "externalDocs": {
              "description": "Atlas Data Lake supports Amazon Web Services private endpoints using the AWS PrivateLink feature.",
              "url": "https://aws.amazon.com/privatelink/?privatelink-blogs.sort-by=item.additionalFields.createdDate&privatelink-blogs.sort-order=desc"
            },
            "maxLength": 22,
            "minLength": 22,
            "pattern": "^vpce-[0-9a-f]{17}$"
          },
          "provider": {
            "type": "string",
            "default": "AWS",
            "description": "Human-readable label that identifies the cloud service provider. Atlas Data Lake supports Amazon Web Services only.",
            "enum": [
              "AWS"
            ]
          },
          "type": {
            "type": "string",
            "default": "DATA_LAKE",
            "description": "Human-readable label that identifies the resource type associated with this private endpoint.",
            "enum": [
              "DATA_LAKE"
            ]
          }
        },
        "required": [
          "endpointId"
        ]
      },
      "ApiAtlasProviderRegionsView": {
        "type": "object",
        "properties": {
          "instanceSizes": {
            "type": "array",
            "description": "List of instances sizes that this cloud provider supports.",
            "items": {
              "$ref": "#/components/schemas/ApiInstanceSizeView"
            },
            "readOnly": true
          },
          "provider": {
            "type": "string",
            "description": "Human-readable label that identifies the Cloud provider.",
            "enum": [
              "AWS",
              "GSP",
              "AZURE"
            ]
          }
        }
      },
      "ApiAtlasProviderSettingsView": {
        "$ref": "#/components/schemas/ApiAtlasProviderSettingsViewManual"
      },
      "ApiAtlasProviderSettingsViewManual": {
        "type": "object",
        "description": "Group of settings that configure the provisioned MongoDB hosts. The options available relate to the cloud service provider.",
        "discriminator": {
          "mapping": {
            "AWS": "#/components/schemas/ApiAtlasAWSProviderSettingsViewManual",
            "AZURE": "#/components/schemas/ApiAtlasAzureProviderSettingsViewManual",
            "GCP": "#/components/schemas/ApiAtlasGCPProviderSettingsViewManual",
            "TENANT": "#/components/schemas/ApiAtlasFreeProviderSettingsViewManual"
          },
          "propertyName": "providerName"
        },
        "properties": {
          "providerName": {
            "type": "string",
            "description": "Cloud service provider that applies to the provisioned the hosts.\nThe `TENANT` value corresponds to an `M2` or `M5` multi-tenant cluster. For multi-tenant deployments, set **providerSettings.providerName** to `TENANT` and specify the cloud service provider in **providerSettings.backingProviderName**.",
            "enum": [
              "AWS",
              "AZURE",
              "GCP",
              "TENANT"
            ]
          }
        },
        "required": [
          "providerName"
        ],
        "title": "Cloud Service Provider Settings"
      },
      "ApiAtlasRegionSpecView": {
        "type": "object",
        "deprecated": true,
        "description": "Physical location where MongoDB Cloud provisions cluster nodes.",
        "properties": {
          "analyticsNodes": {
            "type": "number",
            "description": "Number of analytics nodes in the region. Analytics nodes handle analytic data such as reporting queries from MongoDB Connector for Business Intelligence on MongoDB Cloud. Analytics nodes are read-only, and can never become the primary. Use **replicationSpecs[n].{region}.analyticsNodes** instead."
          },
          "electableNodes": {
            "type": "number",
            "description": "Number of electable nodes to deploy in the specified region. Electable nodes can become the primary and can facilitate local reads. Use **replicationSpecs[n].{region}.electableNodes** instead.",
            "enum": [
              0,
              3,
              5,
              7
            ]
          },
          "priority": {
            "type": "number",
            "description": "Number that indicates the election priority of the region. To identify the Preferred Region of the cluster, set this parameter to `7`. The primary node runs in the **Preferred Region**. To identify a read-only region, set this parameter to `0`.",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7
            ]
          },
          "readOnlyNodes": {
            "type": "number",
            "description": "Number of read-only nodes in the region. Read-only nodes can never become the primary member, but can facilitate local reads. Use **replicationSpecs[n].{region}.readOnlyNodes** instead."
          }
        },
        "title": "Region Configuration"
      },
      "ApiAtlasReplSpecsRegionSpecViewManual": {
        "type": "object",
        "description": "Physical location of the cloud provider that serves this collection of cluster nodes. MongoDB Cloud labels this parameter key with the cloud provider region in which it serves this set of nodes.",
        "properties": {
          "analyticsNodes": {
            "type": "number",
            "description": "Number of analytics nodes to deploy in the specified region. Analytics nodes handle dedicated queries for reporting such as those from MongoDB Connector for Business Intelligence on MongoDB Cloud. You can't write to an analytics node. Elections can't make an analytic node the primary node."
          },
          "electableNodes": {
            "type": "number",
            "description": "Number of electable nodes to deploy in the specified region. Electable nodes can become the primary and can facilitate local reads.",
            "enum": [
              0,
              3,
              5,
              7
            ]
          },
          "priority": {
            "type": "number",
            "description": "Number that indicates the election priority of the region.\n- To identify the preferred region of the cluster, set this parameter to `7`.\n  The primary node runs in the **Preferred Region**.\n- To identify a read-only region, set this parameter to `0`.",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7
            ]
          },
          "readOnlyNodes": {
            "type": "number",
            "description": "Number of read-only nodes to deploy in the specified region. Read-only nodes can never become the primary member, but can facilitate local reads."
          }
        },
        "title": "Regional Replication Specifications"
      },
      "ApiAtlasReplSpecsRegionViewManual": {
        "type": "object",
        "description": "Hardware specifications for nodes deployed in one specific region. Each **region** object describes the region's priority in elections and the number and type of MongoDB nodes that MongoDB Cloud deploys to the region.",
        "properties": {
          "region": {
            "$ref": "#/components/schemas/ApiAtlasReplSpecsRegionSpecViewManual"
          }
        },
        "required": [
          "region"
        ],
        "title": "Replication Specifications"
      },
      "ApiAtlasReplicationSpecsV15Manual": {
        "type": "array",
        "description": "List of settings that configure your cluster regions. For Global Clusters, each object in the array represents a zone where your clusters nodes deploy. For non-Global replica sets and sharded clusters, this array has one object representing where your clusters nodes deploy.",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique 24-hexadecimal digit string that identifies the replication object for a zone in a Multi-Cloud Cluster. If you include existing zones in the request, you must specify this parameter. If you add a new zone to an existing Multi-Cloud Cluster, you may specify this parameter. The request deletes any existing zones in the Multi-Cloud Cluster that you exclude from the request.",
              "example": "6492cb3770e674ece4e89b41",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            },
            "numShards": {
              "type": "integer",
              "description": "Positive integer that specifies the number of shards to deploy in each specified zone. If you set this value to `1` and `\"clusterType\" : \"SHARDED\"`, MongoDB Cloud deploys a single-shard sharded cluster. Don't create a sharded cluster with a single shard for production environments. Single-shard sharded clusters don't provide the same benefits as multi-shard configurations."
            },
            "regionConfigs": {
              "type": "array",
              "description": "Hardware specifications for nodes set for a given region. Each **regionConfigs** object describes the region's priority in elections and the number and type of MongoDB nodes that MongoDB Cloud deploys to the region. Each **regionConfigs** object must have either an **analyticsSpecs** object, **electableSpecs** object, or **readOnlySpecs** object. Tenant clusters only require **electableSpecs. Dedicated** clusters can specify any of these specifications, but must have at least one **electableSpecs** object within a **replicationSpec**. Every hardware specification must use the same **instanceSize**.\n\n**Example:**\n\nIf you set `\"replicationSpecs[n].regionConfigs[m].analyticsSpecs.instanceSize\" : \"M30\"`, set `\"replicationSpecs[n].regionConfigs[m].electableSpecs.instanceSize\" : `\"M30\"` if you have electable nodes and `\"replicationSpecs[n].regionConfigs[m].readOnlySpecs.instanceSize\" : `\"M30\"` if you have read-only nodes.\",",
              "items": {
                "$ref": "#/components/schemas/ApiAtlasClusterRegionConfigsV15Manual"
              }
            },
            "zoneName": {
              "type": "string",
              "description": "Human-readable label that identifies the zone in a Global Cluster. Provide this value only if `\"clusterType\" : \"GEOSHARDED\"`."
            }
          }
        },
        "title": "Replication Specifications",
        "x-examples": {
          "example-1": [
            {
              "id": "6492cb3770e674ece4e89b41",
              "numShards": 1,
              "regionConfigs": [
                {
                  "analyticsAutoScaling": {
                    "compute": {
                      "enabled": true,
                      "maxInstanceSize": "M100",
                      "minInstanceSize": "M100",
                      "scaleDownEnabled": true
                    },
                    "diskGB": {
                      "enabled": true
                    }
                  },
                  "analyticsSpecs": {
                    "diskIOPS": 100,
                    "ebsVolumeType": "STANDARD",
                    "instanceSize": "M10",
                    "nodeCount": 0
                  },
                  "autoScaling": {
                    "compute": {
                      "enabled": true,
                      "maxInstanceSize": "M100",
                      "minInstanceSize": "M100",
                      "scaleDownEnabled": true
                    },
                    "diskGB": {
                      "enabled": true
                    }
                  },
                  "electableSpecs": {
                    "diskIOPS": 100,
                    "ebsVolumeType": "STANDARD",
                    "instanceSize": "M10",
                    "nodeCount": 3
                  },
                  "priority": 7,
                  "providerName": "AWS",
                  "readOnlySpecs": {
                    "diskIOPS": 100,
                    "ebsVolumeType": "STANDARD",
                    "instanceSize": "M10",
                    "nodeCount": 0
                  },
                  "regionName": "US_EAST_1"
                }
              ],
              "zoneName": "Zone 1"
            }
          ]
        },
        "x-internal": false
      },
      "ApiAtlasRoleView": {
        "type": "object",
        "description": "Range of resources available to this database user.",
        "properties": {
          "collectionName": {
            "type": "string",
            "description": "Collection on which this role applies."
          },
          "databaseName": {
            "type": "string",
            "default": "admin",
            "description": "Database against which the database user authenticates. Database users must provide both a username and authentication database to log into MongoDB.",
            "enum": [
              "admin",
              "$external"
            ]
          },
          "roleName": {
            "type": "string",
            "description": "Human-readable label that identifies a group of privileges assigned to a database user. This value can either be a built-in role or a custom role.",
            "enum": [
              "atlasAdmin",
              "backup",
              "clusterMonitor",
              "dbAdmin",
              "dbAdminAnyDatabase",
              "enableSharding",
              "read",
              "readAnyDatabase",
              "readWrite",
              "readWriteAnyDatabase",
              "<a custom role name>"
            ]
          }
        },
        "required": [
          "collectionName",
          "databaseName",
          "roleName"
        ],
        "title": "Database User Role"
      },
      "ApiAtlasSampleDatasetStatusView": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies this sample dataset.",
            "example": "4c0971b71b6b7c6e2020b535",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "clusterName": {
            "type": "string",
            "description": "Human-readable label that identifies the cluster into which you loaded the sample dataset.",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$",
            "readOnly": true
          },
          "completeDate": {
            "type": "string",
            "description": "Date and time when the sample dataset load job completed. MongoDB Cloud represents this timestamp in ISO 8601 format in UTC.",
            "pattern": "^(?:[1-9]\\\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d(?:\\\\.\\\\d{1,9})?(?:Z|[+-][01]\\\\d:[0-5]\\\\d)$",
            "readOnly": true
          },
          "createDate": {
            "type": "string",
            "description": "Date and time when you started the sample dataset load job. MongoDB Cloud represents this timestamp in ISO 8601 format in UTC.",
            "pattern": "^(?:[1-9]\\\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d(?:\\\\.\\\\d{1,9})?(?:Z|[+-][01]\\\\d:[0-5]\\\\d)$",
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "description": "Details of the error returned when MongoDB Cloud loads the sample dataset. This endpoint returns null if state has a value other than FAILED.",
            "readOnly": true
          },
          "state": {
            "type": "string",
            "description": "Status of the sample dataset load job.",
            "enum": [
              "COMPLETED",
              "FAILED",
              "WORKING"
            ],
            "readOnly": true
          }
        }
      },
      "ApiAtlasServerlessAWSTenantEndpointUpdateView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/providerName"
          }
        ],
        "description": "Updates to a serverless AWS tenant endpoint.",
        "title": "AWS"
      },
      "ApiAtlasServerlessAzureTenantEndpointUpdateView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/providerName"
          },
          {
            "type": "object",
            "properties": {
              "privateEndpointIpAddress": {
                "type": "string",
                "description": "IPv4 address of the private endpoint in your Azure VNet that someone added to this private endpoint service.",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}",
                "writeOnly": true
              }
            }
          }
        ],
        "description": "Updates to a serverless Azure tenant endpoint.",
        "title": "AZURE"
      },
      "ApiAtlasServerlessBackupRestoreJobViewManual": {
        "type": "object",
        "properties": {
          "cancelled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone canceled this restore job.",
            "readOnly": true
          },
          "deliveryType": {
            "type": "string",
            "description": "Human-readable label that categorizes the restore job to create.",
            "enum": [
              "automated",
              "download",
              "pointInTime"
            ]
          },
          "deliveryUrl": {
            "type": "array",
            "description": "One or more Uniform Resource Locators (URLs) that point to the compressed snapshot files for manual download. MongoDB Cloud returns this parameter when `\"deliveryType\" : \"download\"`.\"",
            "items": {
              "type": "string",
              "description": "One Uniform Resource Locator that point to the compressed snapshot files for manual download."
            },
            "readOnly": true
          },
          "desiredTimestamp": {
            "$ref": "#/components/schemas/BSONTimestamp"
          },
          "expired": {
            "type": "boolean",
            "description": "Flag that indicates whether the restore job expired.",
            "readOnly": true
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the restore job expires. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "\"^(?:[1-9]\\\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\\\\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d(?:\\\\.\\\\d{1,9})?(?:Z)$\"",
            "readOnly": true
          },
          "failed": {
            "type": "boolean",
            "description": "Flag that indicates whether the restore job failed.",
            "readOnly": true
          },
          "finishedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the restore job completed. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "\"^(?:[1-9]\\\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\\\\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d(?:\\\\.\\\\d{1,9})?(?:Z)$\"",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the restore job.",
            "example": "e7cb93f480f357b5139ccf37",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "snapshotId": {
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the snapshot.",
            "example": "78e18e587716102f711a5bca",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$"
          },
          "targetClusterName": {
            "type": "string",
            "description": "Human-readable label that identifies the target cluster to which the restore job restores the snapshot. The resource returns this parameter when `\"deliveryType\":` `\"automated\"`.",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
          },
          "targetGroupId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the target project for the specified **targetClusterName**.",
            "example": "ca4d8a18b96b317422974eec",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when MongoDB Cloud took the snapshot associated with **snapshotId**. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "\"^(?:[1-9]\\\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\\\\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d(?:\\\\.\\\\d{1,9})?(?:Z)$\"",
            "readOnly": true
          }
        },
        "required": [
          "deliveryType",
          "targetClusterName",
          "targetGroupId"
        ],
        "title": "Serverless Restore Job"
      },
      "ApiAtlasServerlessBackupSnapshotViewManual": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when MongoDB Cloud took the snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "\"^(?:[1-9]\\\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\\\\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d(?:\\\\.\\\\d{1,9})?(?:Z|[+-][01]\\\\d:[0-5]\\\\d)$\"",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "Human-readable phrase or sentence that explains the purpose of the snapshot. The resource returns this parameter when `\"status\" : \"onDemand\"`.",
            "readOnly": true
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when MongoDB Cloud deletes the snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "\"^(?:[1-9]\\\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\\\\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d(?:\\\\.\\\\d{1,9})?(?:Z|[+-][01]\\\\d:[0-5]\\\\d)$\"",
            "readOnly": true
          },
          "frequencyType": {
            "type": "string",
            "description": "Human-readable label that identifies how often this snapshot triggers.",
            "enum": [
              "hourly",
              "daily",
              "weekly",
              "monthly"
            ],
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the snapshot.",
            "example": "78e18e587716102f711a5bca",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "mongodVersion": {
            "type": "string",
            "description": "Version of the MongoDB host that this snapshot backs up.",
            "example": "5.0.3",
            "pattern": "([\\d]+\\.[\\d]+\\.[\\d]+)",
            "readOnly": true
          },
          "serverlessInstanceName": {
            "type": "string",
            "description": "Human-readable label given to the serverless instance from which MongoDB Cloud took this snapshot.",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$",
            "readOnly": true
          },
          "snapshotType": {
            "type": "string",
            "description": "Human-readable label that identifies when this snapshot triggers.",
            "enum": [
              "onDemand",
              "scheduled"
            ],
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "Human-readable label that indicates the stage of the backup process for this snapshot.",
            "enum": [
              "queued",
              "inProgress",
              "completed",
              "failed"
            ],
            "readOnly": true
          },
          "storageSizeBytes": {
            "type": "integer",
            "format": "int32",
            "description": "Number of bytes taken to store the backup snapshot.",
            "pattern": "^([0-9]+)$",
            "readOnly": true
          }
        }
      },
      "ApiAtlasServerlessClusterDescriptionView": {
        "type": "object",
        "properties": {
          "connectionStrings": {
            "$ref": "#/components/schemas/ApiAtlasClusterDescriptionConnectionStringsView"
          },
          "createDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when MongoDB Cloud created this cluster. MongoDB Cloud represents this timestamp in ISO 8601 format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "groupId": {
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the project.",
            "example": "32b6e34b3d91647abb20e7b8",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the cluster.",
            "example": "5faec72692cee15b51eb22a4",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "mongoDBVersion": {
            "type": "string",
            "description": "Version of MongoDB that the cluster runs.",
            "pattern": "([\\d]+\\.[\\d]+\\.[\\d]+)",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies the cluster.",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
          },
          "providerSettings": {
            "$ref": "#/components/schemas/ApiAtlasProviderSettingsViewManual"
          },
          "stateName": {
            "type": "string",
            "description": "Human-readable label that indicates the current operating condition of the cluster.",
            "enum": [
              "CREATING",
              "DELETED",
              "DELETING",
              "IDLE",
              "REPAIRING",
              "UPDATING"
            ],
            "readOnly": true
          }
        },
        "required": [
          "links"
        ]
      },
      "ApiAtlasServerlessClusterDescriptionViewManual": {
        "type": "object",
        "properties": {
          "connectionStrings": {
            "$ref": "#/components/schemas/Serverless_Instance_Connection_Strings"
          },
          "createDate": {
            "type": "string",
            "description": "Date and time when MongoDB Cloud created this serverless instance. MongoDB Cloud represents this timestamp in ISO 8601 format in UTC.",
            "pattern": "^(?:[1-9]\\\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d(?:\\\\.\\\\d{1,9})?(?:Z|[+-][01]\\\\d:[0-5]\\\\d)$",
            "readOnly": true
          },
          "groupId": {
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the project.",
            "example": "32b6e34b3d91647abb20e7b8",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the serverless instance.",
            "example": "e870889e64835532ca903154",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "mongoDBVersion": {
            "type": "string",
            "description": "Version of MongoDB that the serverless instance runs.",
            "pattern": "([\\d]+\\.[\\d]+\\.[\\d]+)",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies the serverless instance.",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
          },
          "providerSettings": {
            "$ref": "#/components/schemas/Serverless_Instance_Provider_Settings"
          },
          "stateName": {
            "type": "string",
            "description": "Human-readable label that indicates the current operating condition of the serverless instance.",
            "enum": [
              "CREATING",
              "DELETED",
              "DELETING",
              "IDLE",
              "REPAIRING",
              "UPDATING"
            ],
            "readOnly": true
          }
        }
      },
      "ApiAtlasServerlessTenantEndpointCreateView": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Human-readable comment associated with the private endpoint.",
            "maxLength": 80,
            "writeOnly": true
          }
        }
      },
      "ApiAtlasServerlessTenantEndpointListView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasServerlessTenantEndpointView"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ]
      },
      "ApiAtlasServerlessTenantEndpointView": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the private endpoint.",
            "example": "76232bec98341ad1155cc244",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "cloudProviderEndpointId": {
            "type": "string",
            "description": "Unique string that identifies the private endpoint's network interface.",
            "pattern": "^(vpce-[0-9a-f]{17}|\\/subscriptions\\/[0-9a-f]{8}-([0-9a-f]{4}-){3}[0-9a-f]{12}\\/resource[gG]roups\\/private[Ll]ink\\/providers\\/Microsoft\\.Network\\/privateEndpoints\\/[-\\w._()]+)$",
            "readOnly": true
          },
          "comment": {
            "type": "string",
            "description": "Human-readable comment associated with the private endpoint.",
            "maxLength": 80,
            "readOnly": true
          },
          "endpointServiceName": {
            "type": "string",
            "description": "Unique string that identifies the PrivateLink endpoint service. MongoDB Cloud returns null while it creates the endpoint service.",
            "pattern": "^com\\.amazonaws\\.vpce\\.[a-z-0-9]+\\.vpce-svc-[0-9a-f]{17}|pls_[0-9a-f]{24}$",
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "description": "Human-readable error message that indicates error condition associated with establishing the private endpoint connection.",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "Human-readable label that indicates the current operating status of the private endpoint.",
            "enum": [
              "RESERVATION_REQUESTED",
              "RESERVED",
              "AVAILABLE",
              "INITIATING",
              "DELETING",
              "FAILED"
            ],
            "readOnly": true
          }
        }
      },
      "ApiAtlasSnapshotScheduleView": {
        "type": "object",
        "properties": {
          "clusterCheckpointIntervalMin": {
            "type": "number",
            "description": "Quantity of time expressed in minutes between successive cluster checkpoints. This parameter applies only to sharded clusters. This number determines the granularity of continuous cloud backups for sharded clusters.",
            "enum": [
              15,
              30,
              60
            ]
          },
          "clusterId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the cluster with the snapshot you want to return.",
            "example": "5faec72692cee15b51eb22a4",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$"
          },
          "dailySnapshotRetentionDays": {
            "type": "number",
            "description": "Quantity of time to keep daily snapshots. MongoDB Cloud expresses this value in days. Set this value to `0` to disable daily snapshot retention.",
            "enum": [
              0,
              3,
              4,
              5,
              6,
              7,
              15,
              30,
              60,
              90,
              120,
              180,
              360
            ]
          },
          "groupId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that contains the cluster.",
            "example": "32b6e34b3d91647abb20e7b8",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "monthlySnapshotRetentionMonths": {
            "type": "number",
            "description": "Number of months that MongoDB Cloud must keep monthly snapshots. Set this value to `0` to disable monthly snapshot retention.",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              18,
              24,
              36
            ]
          },
          "pointInTimeWindowHours": {
            "type": "number",
            "description": "Number of hours before the current time from which MongoDB Cloud can create a Continuous Cloud Backup snapshot."
          },
          "snapshotIntervalHours": {
            "type": "number",
            "description": "Number of hours that must elapse before taking another snapshot.",
            "enum": [
              6,
              8,
              12,
              24
            ]
          },
          "snapshotRetentionDays": {
            "type": "number",
            "description": "Number of days that MongoDB Cloud must keep recent snapshots.",
            "enum": [
              2,
              3,
              4,
              5
            ]
          },
          "weeklySnapshotRetentionWeeks": {
            "type": "number",
            "description": "Number of weeks that MongoDB Cloud must keep weekly snapshots. Set this value to `0` to disable weekly snapshot retention.",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              12,
              16,
              20,
              24,
              52
            ]
          }
        },
        "required": [
          "clusterCheckpointIntervalMin",
          "clusterId",
          "dailySnapshotRetentionDays",
          "groupId",
          "links",
          "monthlySnapshotRetentionMonths",
          "pointInTimeWindowHours",
          "snapshotIntervalHours",
          "snapshotRetentionDays",
          "weeklySnapshotRetentionWeeks"
        ]
      },
      "ApiAtlasTenantInstanceSizesManual": {
        "type": "string",
        "enum": [
          "M2",
          "M5"
        ],
        "title": "Tenant Cluster Instance Types"
      },
      "ApiAtlasTenantRestoreView": {
        "type": "object",
        "properties": {
          "clusterName": {
            "type": "string",
            "description": "Human-readable label that identifies the source cluster.",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$",
            "readOnly": true
          },
          "deliveryType": {
            "type": "string",
            "description": "Means by which this resource returns the snapshot to the requesting MongoDB Cloud user.",
            "enum": [
              "DOWNLOAD",
              "RESTORE"
            ],
            "readOnly": true
          },
          "expirationDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the download link no longer works. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the restore job.",
            "example": "e7cb93f480f357b5139ccf37",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "projectId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project from which the restore job originated.",
            "example": "32b6e34b3d91647abb20e7b8",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "restoreFinishedDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when MongoDB Cloud completed writing this snapshot. MongoDB Cloud changes the status of the restore job to `CLOSED`. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "restoreScheduledDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when MongoDB Cloud will restore this snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "snapshotFinishedDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when MongoDB Cloud completed writing this snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "snapshotId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the snapshot to restore.",
            "example": "78e18e587716102f711a5bca",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$"
          },
          "snapshotUrl": {
            "type": "string",
            "description": "Internet address from which you can download the compressed snapshot files. The resource returns this parameter when  `\"deliveryType\" : \"DOWNLOAD\"`.",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "Phase of the restore workflow for this job at the time this resource made this request.",
            "enum": [
              "COMPLETED",
              "FAILED",
              "PENDING",
              "QUEUED",
              "RUNNING"
            ],
            "readOnly": true
          },
          "targetDeploymentItemName": {
            "type": "string",
            "description": "Human-readable label that identifies the cluster on the target project to which you want to restore the snapshot. You can restore the snapshot to a cluster tier *M2* or greater.",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[\\p{L}\\p{N}\\-_.(),:&@+']{1,64}$"
          },
          "targetProjectId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that contains the cluster to which you want to restore the snapshot.",
            "example": "ca4d8a18b96b317422974eec",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$"
          }
        },
        "required": [
          "links",
          "snapshotId",
          "targetDeploymentItemName"
        ]
      },
      "ApiAtlasTenantSnapshotView": {
        "type": "object",
        "properties": {
          "expiration": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the download link no longer works. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "finishTime": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when MongoDB Cloud completed writing this snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the restore job.",
            "example": "e7cb93f480f357b5139ccf37",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "mongoDBVersion": {
            "type": "string",
            "description": "MongoDB host version that the snapshot runs.",
            "readOnly": true
          },
          "scheduledTime": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when MongoDB Cloud will take the snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when MongoDB Cloud began taking the snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "Phase of the workflow for this snapshot at the time this resource made this request.",
            "enum": [
              "COMPLETED",
              "FAILED",
              "PENDING",
              "QUEUED",
              "RUNNING"
            ],
            "readOnly": true
          }
        },
        "required": [
          "links"
        ]
      },
      "ApiAtlasUserCertView": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies this certificate.",
            "example": "32915a5710353a38456d6ba1",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when MongoDB Cloud created this certificate. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "groupId": {
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the project.",
            "example": "32b6e34b3d91647abb20e7b8",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "monthsUntilExpiration": {
            "type": "integer",
            "format": "int32",
            "default": 3,
            "description": "Number of months that the certificate remains valid until it expires.",
            "maximum": 24,
            "writeOnly": true
          },
          "notAfter": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when this certificate expires. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "subject": {
            "type": "string",
            "description": "Subject Alternative Name associated with this certificate. This parameter expresses its value as a distinguished name as defined in [RFC 2253](https://tools.ietf.org/html/2253).",
            "example": "CN=BindUser,CN=Users,DC=myldapserver,DC=mycompany,DC=com",
            "pattern": "^(?:(?<cn>CN=(?<name>[^,]*)),)?(?:(?<path>(?:(?:CN|OU)=[^,]+,?)+),)?(?<domain>(?:DC=[^,]+,?)+)$",
            "readOnly": true
          }
        },
        "required": [
          "links"
        ]
      },
      "ApiAtlasUserScopeView": {
        "type": "object",
        "description": "Range of resources available to this database user.",
        "properties": {
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies the cluster or MongoDB Atlas Data Lake that this database user can access.",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
          },
          "type": {
            "type": "string",
            "description": "Category of resource that this database user can access.",
            "enum": [
              "CLUSTER",
              "DATA_LAKE"
            ]
          }
        },
        "required": [
          "name",
          "type"
        ],
        "title": "Database User Scope"
      },
      "ApiAtlasUserSecurityView": {
        "type": "object",
        "properties": {
          "customerX509": {
            "$ref": "#/components/schemas/ApiAtlasCustomerX509View"
          },
          "ldap": {
            "$ref": "#/components/schemas/ApiAtlasNDSLDAPView"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          }
        },
        "required": [
          "links"
        ]
      },
      "ApiAtlasZoneMappingView": {
        "type": "object",
        "description": "Human-readable label that identifies the subset of a global cluster.",
        "properties": {
          "location": {
            "type": "string",
            "description": "Code that represents a location that maps to a zone in your global cluster. MongoDB Cloud represents this location with a ISO 3166-2 location and subdivision codes when possible."
          },
          "zone": {
            "type": "string",
            "description": "Human-readable label that identifies the zone in your global cluster. This zone maps to a location code."
          }
        },
        "required": [
          "location",
          "zone"
        ],
        "title": "Global Cluster Zone"
      },
      "ApiAvailableRegionView": {
        "type": "object",
        "description": "List of regions that this cloud provider supports for this instance size.",
        "properties": {
          "default": {
            "type": "boolean",
            "description": "Flag that indicates whether the cloud provider sets this region as its default. AWS defaults to US_EAST_1, GCP defaults to CENTRAL_US, and AZURE defaults to US_WEST_2.",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies the supported region.",
            "readOnly": true
          }
        },
        "readOnly": true
      },
      "ApiBSONTimestampView": {
        "type": "object",
        "description": "BSON timestamp that indicates when the checkpoint token entry in the oplog occurred.",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the oplog recorded this database operation. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "increment": {
            "type": "number",
            "description": "Order of the database operation that the oplog recorded at specific date and time.",
            "example": 1,
            "minimum": 1199145600,
            "readOnly": true
          }
        },
        "readOnly": true,
        "title": "BSON Timestamp"
      },
      "ApiCheckpointPartView": {
        "type": "object",
        "description": "Metadata contained in one document that describes the complete snapshot taken for this node.",
        "properties": {
          "replicaSetName": {
            "type": "string",
            "description": "Human-readable label that identifies the replica set to which this checkpoint applies.",
            "readOnly": true
          },
          "shardName": {
            "type": "string",
            "description": "Human-readable label that identifies the shard to which this checkpoint applies.",
            "readOnly": true
          },
          "tokenDiscovered": {
            "type": "boolean",
            "description": "Flag that indicates whether the token exists.",
            "readOnly": true
          },
          "tokenTimestamp": {
            "$ref": "#/components/schemas/ApiBSONTimestampView"
          },
          "typeName": {
            "type": "string",
            "description": "Human-readable label that identifies the type of host that the part represents.",
            "enum": [
              "CONFIG_SERVER",
              "REPLICA_SET"
            ],
            "readOnly": true
          }
        },
        "readOnly": true
      },
      "ApiCreateApiKeyView": {
        "type": "object",
        "properties": {
          "desc": {
            "type": "string",
            "description": "Purpose or explanation provided when someone created this organization API key.",
            "maxLength": 250,
            "minLength": 1
          },
          "roles": {
            "type": "array",
            "description": "List of roles to grant this API key. If you provide this list, provide a minimum of one role and ensure each role applies to this organization or project.",
            "items": {
              "type": "string",
              "enum": [
                "ORG_OWNER",
                "ORG_MEMBER",
                "ORG_GROUP_CREATOR",
                "ORG_BILLING_ADMIN",
                "ORG_READ_ONLY"
              ]
            }
          }
        }
      },
      "ApiDatabaseUserIAMView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiAtlasDatabaseUserViewBase"
          },
          {
            "type": "object",
            "properties": {
              "awsIAMType": {
                "type": "string",
                "default": "NONE",
                "description": "Human-readable label that indicates whether the new database user authenticates with the Amazon Web Services (AWS) Identity and Access Management (IAM) credentials associated with the user or the user's role.",
                "enum": [
                  "NONE",
                  "USER",
                  "ROLE"
                ]
              },
              "username": {
                "type": "string",
                "description": "Human-readable label that represents the user that authenticates to MongoDB.\n",
                "example": "arn:aws:iam::358363220050:user/mongodb-aws-iam-auth-pat-bloggs",
                "maxLength": 1024
              }
            }
          }
        ],
        "description": "Details to create one new MongoDB database user who authenticates with a MongoDB database using Amazon Web Services (AWS) Identity and Access Management (IAM) credentials.\n",
        "required": [
          "awsIAMType",
          "databaseName",
          "groupId",
          "roles",
          "username"
        ],
        "title": "AWS IAM Authentication"
      },
      "ApiDatabaseUserLDAPView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiAtlasDatabaseUserViewBase"
          },
          {
            "type": "object",
            "properties": {
              "ldapAuthType": {
                "type": "string",
                "default": "NONE",
                "description": "Part of the Lightweight Directory Access Protocol (LDAP) record that the database uses to authenticate this database user on the LDAP host.",
                "enum": [
                  "NONE",
                  "USER",
                  "GROUP"
                ]
              },
              "username": {
                "type": "string",
                "description": "Human-readable label that represents the user that authenticates to MongoDB. This must be formatted as a [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name.\n",
                "example": "UID=pat.bloggs@example.com,CN=Pat Bloggs,OU=engineering,DC=example,DC=com",
                "maxLength": 1024
              }
            }
          }
        ],
        "description": "Details to create one new MongoDB database user who authenticates with a MongoDB database using a Lightweight Directory Access Protocol (LDAP) host.\n",
        "required": [
          "databaseName",
          "groupId",
          "ldapAuthType",
          "roles",
          "username"
        ],
        "title": "LDAP Authentication"
      },
      "ApiDatabaseUserSCRAMView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiAtlasDatabaseUserViewBase"
          },
          {
            "type": "object",
            "properties": {
              "password": {
                "type": "string",
                "description": "Alphanumeric string that authenticates this database user against the database specified in `databaseName`. To authenticate with SCRAM-SHA, you must specify this parameter.",
                "externalDocs": {
                  "description": "SCRAM-SHA",
                  "url": "https://docs.mongodb.com/manual/core/security-scram/"
                },
                "minLength": 8,
                "writeOnly": true
              },
              "username": {
                "type": "string",
                "description": "Human-readable label that represents the user that authenticates to MongoDB. This must be formatted as a [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name.\n",
                "example": "UID=pat.bloggs@example.com,CN=Pat Bloggs,OU=engineering,DC=example,DC=com",
                "maxLength": 1024
              }
            }
          }
        ],
        "description": "Details to create one new MongoDB database user who authenticates with a MongoDB database using a Lightweight Directory Access Protocol (LDAP) host.\n",
        "required": [
          "databaseName",
          "groupId",
          "password",
          "roles",
          "username"
        ],
        "title": "SCRAM-SHA Authentication"
      },
      "ApiDatabaseUserX509View": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiAtlasDatabaseUserViewBase"
          },
          {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "description": "Human-readable label that represents the user that authenticates to MongoDB. This must be formatted as a [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name.\n",
                "example": "UID=pat.bloggs@example.com,CN=Pat Bloggs,OU=engineering,DC=example,DC=com",
                "maxLength": 1024
              },
              "x509Type": {
                "type": "string",
                "default": "NONE",
                "description": "X.509 method that MongoDB Cloud uses to authenticate the database user. - For MongoDB Cloud-managed X.509, specify `MANAGED`. - For self-managed X.509, specify `CUSTOMER`. Users created with the `CUSTOMER` method require a Common Name (CN) in the **username** parameter. You must create externally authenticated users on the `$external` database.",
                "enum": [
                  "NONE",
                  "CUSTOMER",
                  "MANAGED"
                ]
              }
            }
          }
        ],
        "description": "Details to create one new MongoDB database user who authenticates with a MongoDB database using X.509 certificates.\n",
        "required": [
          "databaseName",
          "groupId",
          "roles",
          "username",
          "x509Type"
        ],
        "title": "X.509 Authentication"
      },
      "ApiDatabaseView": {
        "type": "object",
        "properties": {
          "databaseName": {
            "type": "string",
            "description": "Human-readable label that identifies the database that the specified MongoDB process serves."
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          }
        },
        "required": [
          "links"
        ]
      },
      "ApiDatadogView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiIntegrationView"
          },
          {
            "type": "object",
            "properties": {
              "apiKey": {
                "type": "string",
                "description": "Key that allows MongoDB Cloud to access your Datadog account."
              },
              "region": {
                "type": "string",
                "default": "US",
                "description": "Two-letter code that indicates which regional URL MongoDB uses to access the Datadog API.",
                "enum": [
                  "EU",
                  "US"
                ],
                "maxLength": 2,
                "minLength": 2
              }
            }
          }
        ],
        "description": "Details to integrate one Datadog account with one MongoDB Cloud project.",
        "required": [
          "apiKey"
        ],
        "title": "DATADOG"
      },
      "ApiDiskPartitionView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "partitionName": {
            "type": "string",
            "description": "Human-readable label of the disk or partition to which the measurements apply.",
            "readOnly": true
          }
        },
        "required": [
          "links"
        ]
      },
      "ApiError": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "string"
          },
          "error": {
            "type": "integer",
            "format": "int32",
            "description": "HTTP status code returned with this error.",
            "maximum": 599,
            "minimum": 200,
            "pattern": "^\\d{3}$"
          },
          "errorCode": {
            "type": "string",
            "description": "Application error code returned with this error.",
            "example": "TOO_MANY_GROUP_NOTIFICATIONS"
          },
          "parameters": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Parameter uses to give more information about the error."
            }
          },
          "reason": {
            "type": "string",
            "description": "Application error message returned with this error.",
            "example": "At most one group notification can be specified for an alert configuration."
          }
        }
      },
      "ApiEventView": {
        "type": "object",
        "properties": {
          "alertConfigId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the alert configuration associated with the **alertId**.",
            "example": "adddde5af4ee4bd0b519375f",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "alertId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the alert associated with the event.",
            "example": "d268e3a6e1718c6c36376f73",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "apiKeyId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the API Key that triggered the event. If this resource returns this parameter, it doesn't return the **userId** parameter.",
            "example": "69f24ec71f746985759551c7",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "collection": {
            "type": "string",
            "description": "Human-readable label of the collection on which the event occurred. The resource returns this parameter when the **eventTypeName** includes `DATA_EXPLORER`.",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when this event occurred. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "currentValue": {
            "$ref": "#/components/schemas/currentValue"
          },
          "database": {
            "type": "string",
            "description": "Human-readable label of the database on which this incident occurred. The resource returns this parameter when `\"eventTypeName\" : \"DATA_EXPLORER\"` or `\"eventTypeName\" : \"DATA_EXPLORER_CRUD\"`.",
            "readOnly": true
          },
          "endpointId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the endpoint associated with this event.",
            "example": "05fcbefce5dd1c8ee5ebf7bf",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "eventTypeName": {
            "type": "string",
            "description": "Category of incident recorded at this moment in time.",
            "enum": [
              "AWS_ENCRYPTION_KEY_NEEDS_ROTATION",
              "AZURE_ENCRYPTION_KEY_NEEDS_ROTATION",
              "CLUSTER_MONGOS_IS_MISSING",
              "CPS_RESTORE_FAILED",
              "CPS_RESTORE_SUCCESSFUL",
              "CPS_SNAPSHOT_BEHIND",
              "CPS_SNAPSHOT_DOWNLOAD_REQUEST_FAILED",
              "CPS_SNAPSHOT_FALLBACK_FAILED",
              "CPS_SNAPSHOT_FALLBACK_SUCCESSFUL",
              "CPS_SNAPSHOT_SUCCESSFUL",
              "CREDIT_CARD_ABOUT_TO_EXPIRE",
              "DAILY_BILL_OVER_THRESHOLD",
              "GCP_ENCRYPTION_KEY_NEEDS_ROTATION",
              "HOST_DOWN",
              "JOINED_GROUP",
              "NDS_X509_USER_AUTHENTICATION_CUSTOMER_CA_EXPIRATION_CHECK",
              "NDS_X509_USER_AUTHENTICATION_MANAGED_USER_CERTS_EXPIRATION_CHECK",
              "NO_PRIMARY",
              "OUTSIDE_METRIC_THRESHOLD",
              "PENDING_INVOICE_OVER_THRESHOLD",
              "PRIMARY_ELECTED",
              "REMOVED_FROM_GROUP",
              "REPLICATION_OPLOG_WINDOW_RUNNING_OUT",
              "TOO_MANY_ELECTIONS",
              "USER_ROLES_CHANGED_AUDIT",
              "USERS_WITHOUT_MULTIFACTOR_AUTH"
            ],
            "readOnly": true
          },
          "groupId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project in which the event occurred. The **eventId** identifies the specific event.",
            "example": "32b6e34b3d91647abb20e7b8",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the event.",
            "example": "375db9d4f7a4c3e01714d02a",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "invoiceId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies of the invoice associated with the event.",
            "example": "217a865625b2bad3b9a1e93d",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "isGlobalAdmin": {
            "type": "boolean",
            "default": false,
            "description": "Flag that indicates whether a MongoDB employee triggered the specified event.",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "metricName": {
            "type": "string",
            "description": "Human-readable label of the metric associated with the **alertId**.",
            "enum": [
              "ASSERT_REGULAR",
              "ASSERT_WARNING",
              "ASSERT_MSG",
              "ASSERT_USER",
              "AVG_READ_EXECUTION_TIME",
              "AVG_WRITE_EXECUTION_TIME",
              "AVG_COMMAND_EXECUTION_TIME",
              "BACKGROUND_FLUSH_AVG",
              "CACHE_BYTES_READ_INTO",
              "CACHE_BYTES_WRITTEN_FROM",
              "CACHE_USAGE_DIRTY",
              "CACHE_USAGE_USED",
              "COMPUTED_MEMORY",
              "CONNECTIONS",
              "CONNECTIONS_MAX",
              "CONNECTIONS_PERCENT",
              "CURSORS_TOTAL_OPEN",
              "CURSORS_TOTAL_TIMED_OUT",
              "CURSORS_TOTAL_CLIENT_CURSORS_SIZE",
              "DB_STORAGE_TOTAL",
              "DB_DATA_SIZE_TOTAL",
              "DB_INDEX_SIZE_TOTAL",
              "DISK_PARTITION_SPACE_USED_DATA",
              "DISK_PARTITION_SPACE_USED_INDEX",
              "DISK_PARTITION_SPACE_USED_JOURNAL",
              "DISK_PARTITION_UTILIZATION_DATA",
              "DISK_PARTITION_UTILIZATION_INDEX",
              "DISK_PARTITION_UTILIZATION_JOURNAL",
              "DOCUMENT_RETURNED",
              "DOCUMENT_INSERTED",
              "DOCUMENT_UPDATED",
              "DOCUMENT_DELETED",
              "EXTRA_INFO_PAGE_FAULTS",
              "FTS_MEMORY_RESIDENT",
              "FTS_MEMORY_VIRTUAL",
              "FTS_MEMORY_MAPPED",
              "FTS_DISK_UTILIZATION",
              "FTS_PROCESS_CPU_USER",
              "FTS_PROCESS_CPU_KERNEL",
              "NORMALIZED_FTS_PROCESS_CPU_USER",
              "NORMALIZED_FTS_PROCESS_CPU_KERNEL",
              "GLOBAL_ACCESSES_NOT_IN_MEMORY",
              "GLOBAL_PAGE_FAULT_EXCEPTIONS_THROWN",
              "GLOBAL_LOCK_CURRENT_QUEUE_TOTAL",
              "GLOBAL_LOCK_CURRENT_QUEUE_READERS",
              "GLOBAL_LOCK_CURRENT_QUEUE_WRITERS",
              "GLOBAL_LOCK_PERCENTAGE",
              "INDEX_COUNTERS_BTREE_ACCESSES",
              "INDEX_COUNTERS_BTREE_HITS",
              "INDEX_COUNTERS_BTREE_MISSES",
              "INDEX_COUNTERS_BTREE_MISS_RATIO",
              "JOURNALING_COMMITS_IN_WRITE_LOCK",
              "JOURNALING_MB",
              "JOURNALING_WRITE_DATA_FILES_MB",
              "LOGICAL_SIZE",
              "MEMORY_RESIDENT",
              "MEMORY_VIRTUAL",
              "MEMORY_MAPPED",
              "MUNIN_CPU_USER",
              "MUNIN_CPU_NICE",
              "MUNIN_CPU_SYSTEM",
              "MUNIN_CPU_IOWAIT",
              "MUNIN_CPU_IRQ",
              "MUNIN_CPU_SOFTIRQ",
              "MUNIN_CPU_STEAL",
              "NETWORK_BYTES_IN",
              "NETWORK_BYTES_OUT",
              "NETWORK_NUM_REQUESTS",
              "NORMALIZED_SYSTEM_CPU_USER",
              "NORMALIZED_SYSTEM_CPU_STEAL",
              "OPCOUNTER_CMD",
              "OPCOUNTER_QUERY",
              "OPCOUNTER_UPDATE",
              "OPCOUNTER_DELETE",
              "OPCOUNTER_GETMORE",
              "OPCOUNTER_INSERT",
              "OPCOUNTER_REPL_CMD",
              "OPCOUNTER_REPL_UPDATE",
              "OPCOUNTER_REPL_DELETE",
              "OPCOUNTER_REPL_INSERT",
              "OPERATIONS_SCAN_AND_ORDER",
              "OPLOG_MASTER_TIME",
              "OPLOG_MASTER_TIME_ESTIMATED_TTL",
              "OPLOG_SLAVE_LAG_MASTER_TIME",
              "OPLOG_MASTER_LAG_TIME_DIFF",
              "OPLOG_RATE_GB_PER_HOUR",
              "QUERY_EXECUTOR_SCANNED",
              "QUERY_EXECUTOR_SCANNED_OBJECTS",
              "QUERY_TARGETING_SCANNED_PER_RETURNED",
              "QUERY_TARGETING_SCANNED_OBJECTS_PER_RETURNED",
              "RESTARTS_IN_LAST_HOUR",
              "SWAP_USAGE_USED",
              "SWAP_USAGE_FREE",
              "SYSTEM_MEMORY_USED",
              "SYSTEM_MEMORY_FREE",
              "SYSTEM_MEMORY_AVAILABLE",
              "SYSTEM_NETWORK_IN",
              "SYSTEM_NETWORK_OUT",
              "TICKETS_AVAILABLE_READS",
              "TICKETS_AVAILABLE_WRITES"
            ],
            "readOnly": true
          },
          "opType": {
            "type": "string",
            "description": "Action that the database attempted to execute when the event triggered. The response returns this parameter when `eventTypeName\" : \"DATA_EXPLORER\"`.",
            "readOnly": true
          },
          "orgId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies for the organization to which these events apply.",
            "example": "4888442a3354817a7320eb61",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "paymentId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the invoice payment associated with this event.",
            "example": "6fb669797183aa180bc5c09a",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "port": {
            "type": "number",
            "description": "IANA port on which the MongoDB process listens for requests.",
            "maxLength": 5,
            "minLength": 4,
            "pattern": "^[0-9]{4,5}$",
            "readOnly": true
          },
          "providerEndpointId": {
            "type": "string",
            "description": "Unique identification string that the cloud provider uses to identify the private endpoint.",
            "readOnly": true
          },
          "publicKey": {
            "type": "string",
            "description": "Public part of the API key that triggered the event. If this resource returns this parameter, it doesn't return the **username** parameter.",
            "maxLength": 8,
            "minLength": 8,
            "pattern": "^([a-z]{8})$",
            "readOnly": true
          },
          "raw": {
            "type": "string",
            "description": "Additional meta information captured about this event. The response returns this parameter as a JSON object when the query parameter `includeRaw=true`. The values in the raw document may change. Don't rely on raw values for formal monitoring.",
            "readOnly": true
          },
          "remoteAddress": {
            "type": "string",
            "description": "IPv4 or IPv6 address from which the user triggered this event.",
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}\\:){7}[0-9a-f]{1,4}$",
            "readOnly": true
          },
          "replicaSetName": {
            "type": "string",
            "description": "Human-readable label of the replica set associated with the event.",
            "readOnly": true
          },
          "shardName": {
            "type": "string",
            "description": "Human-readable label of the shard associated with the event.",
            "readOnly": true
          },
          "targetPublicKey": {
            "type": "string",
            "description": "Public part of the API key that this event targets.",
            "readOnly": true
          },
          "targetUsername": {
            "type": "string",
            "format": "email",
            "description": "Email address for the console user that this event targets. The resource returns this parameter when `\"eventTypeName\" : \"USER\"`.",
            "pattern": "^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$",
            "readOnly": true
          },
          "teamId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization team associated with this event.",
            "example": "e254e4ade2206f4520d4107d",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "userId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the console user who triggered the event. If this resource returns this parameter, it doesn't return the **apiKeyId** parameter.",
            "example": "887821d389de9fe084df2bdf",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "username": {
            "type": "string",
            "format": "email",
            "description": "Email address for the user who triggered this event. If this resource returns this parameter, it doesn't return the **publicApiKey** parameter.",
            "pattern": "^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$",
            "readOnly": true
          },
          "whitelistEntry": {
            "type": "string",
            "description": "Entry in the list of source host addresses that the API key accepts and this event targets.",
            "readOnly": true
          }
        },
        "required": [
          "links"
        ]
      },
      "ApiExportStatusView": {
        "type": "object",
        "description": "State of the export job for the collections on the replica set only.",
        "properties": {
          "exportedCollections": {
            "type": "string",
            "description": "Number of collections on the replica set that MongoDB Cloud exported.",
            "readOnly": true
          },
          "totalCollections": {
            "type": "string",
            "description": "Total number of collections on the replica set to export.",
            "readOnly": true
          }
        }
      },
      "ApiFTSMetricView": {
        "type": "object",
        "description": "Measurement of one Atlas Search status when MongoDB Atlas received this request.",
        "properties": {
          "metricName": {
            "type": "string",
            "description": "Human-readable label that identifies this Atlas Search hardware, status, or index measurement.",
            "enum": [
              "INDEX_SIZE_ON_DISK",
              "NUMBER_OF_DELETES",
              "NUMBER_OF_ERROR_QUERIES",
              "NUMBER_OF_GETMORE_COMMANDS",
              "NUMBER_OF_INDEX_FIELDS",
              "NUMBER_OF_INSERTS",
              "NUMBER_OF_SUCCESS_QUERIES",
              "NUMBER_OF_UPDATES",
              "REPLICATION_LAG",
              "TOTAL_NUMBER_OF_QUERIES",
              "FTS_DISK_USAGE",
              "FTS_PROCESS_CPU_KERNEL",
              "FTS_PROCESS_CPU_USER",
              "FTS_PROCESS_NORMALIZED_CPU_KERNEL",
              "FTS_PROCESS_NORMALIZED_CPU_USER",
              "FTS_PROCESS_RESIDENT_MEMORY",
              "FTS_PROCESS_SHARED_MEMORY",
              "FTS_PROCESS_VIRTUAL_MEMORY",
              "JVM_CURRENT_MEMORY",
              "JVM_MAX_MEMORY"
            ],
            "example": "JVM_MAX_MEMORY",
            "readOnly": true
          },
          "units": {
            "type": "string",
            "description": "Unit of measurement that applies to this Atlas Search metric.",
            "enum": [
              "BYTES",
              "BYTES_PER_SECOND",
              "GIGABYTES",
              "GIGABYTES_PER_HOUR",
              "KILOBYTES",
              "MEGABYTES",
              "MEGABYTES_PER_SECOND",
              "MILLISECONDS",
              "MILLISECONDS_LOGSCALE",
              "PERCENT",
              "SCALAR",
              "SCALAR_PER_SECOND",
              "SECONDS"
            ],
            "example": "MEGABYTES",
            "readOnly": true
          }
        },
        "readOnly": true,
        "required": [
          "metricName",
          "units"
        ]
      },
      "ApiFTSMetricsView": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project.",
            "example": "32b6e34b3d91647abb20e7b8",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "hardwareMetrics": {
            "type": "array",
            "description": "List that contains all host compute, memory, and storage utilization dedicated to Atlas Search when MongoDB Atlas received this request.",
            "items": {
              "$ref": "#/components/schemas/ApiFTSMetricView"
            },
            "readOnly": true
          },
          "indexMetrics": {
            "type": "array",
            "description": "List that contains all performance and utilization measurements that Atlas Search index performed by the time MongoDB Atlas received this request.",
            "items": {
              "$ref": "#/components/schemas/ApiFTSMetricView"
            },
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "processId": {
            "type": "string",
            "description": "Hostname and port that identifies the process.",
            "example": "mongodb.example.com:27017",
            "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
            "readOnly": true
          },
          "statusMetrics": {
            "type": "array",
            "description": "List that contains all available Atlas Search status metrics when MongoDB Atlas received this request.",
            "items": {
              "$ref": "#/components/schemas/ApiFTSMetricView"
            },
            "readOnly": true
          }
        },
        "required": [
          "groupId",
          "hardwareMetrics",
          "indexMetrics",
          "links",
          "processId",
          "statusMetrics"
        ]
      },
      "ApiFlowdockView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiIntegrationView"
          },
          {
            "type": "object",
            "properties": {
              "apiToken": {
                "type": "string",
                "description": "Key that allows MongoDB Cloud to access your Flowdock account."
              },
              "flowName": {
                "type": "string",
                "description": "Human-readable label that identifies your Flowdock Flow."
              },
              "orgName": {
                "type": "string",
                "description": "Human-readable label that identifies your Flowdock organization."
              }
            }
          }
        ],
        "description": "Details to integrate one Flowdock account with one MongoDB Cloud project.",
        "required": [
          "apiToken",
          "flowName",
          "orgName"
        ],
        "title": "FLOWDOCK"
      },
      "ApiGroupInvitationRequestView": {
        "type": "object",
        "properties": {
          "roles": {
            "type": "array",
            "description": "One or more organization or project level roles to assign to the MongoDB Cloud user.",
            "items": {
              "type": "string",
              "enum": [
                "GROUP_CLUSTER_MANAGER",
                "GROUP_DATA_ACCESS_ADMIN",
                "GROUP_DATA_ACCESS_READ_ONLY",
                "GROUP_DATA_ACCESS_READ_WRITE",
                "GROUP_OWNER",
                "GROUP_READ_ONLY"
              ]
            },
            "uniqueItems": true
          },
          "username": {
            "type": "string",
            "format": "email",
            "description": "Email address of the MongoDB Cloud user invited to the specified project.",
            "pattern": "^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$"
          }
        }
      },
      "ApiGroupInvitationView": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when MongoDB Cloud sent the invitation. This parameter expresses its value in ISO 8601 format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when MongoDB Cloud expires the invitation. This parameter expresses its value in ISO 8601 format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "groupId": {
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the project.",
            "example": "32b6e34b3d91647abb20e7b8",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "groupName": {
            "type": "string",
            "description": "Human-readable label that identifies the project to which you invited the MongoDB Cloud user.",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[\\p{L}\\p{N}\\-_.(),:&@+']{1,64}$",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the invitation.",
            "example": "217a865625b2bad3b9a1e93d",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "inviterUsername": {
            "type": "string",
            "description": "Email address of the MongoDB Cloud user who sent the invitation.",
            "pattern": "^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "roles": {
            "type": "array",
            "description": "One or more organization or project level roles to assign to the MongoDB Cloud user.",
            "items": {
              "type": "string",
              "enum": [
                "GROUP_CLUSTER_MANAGER",
                "GROUP_DATA_ACCESS_ADMIN",
                "GROUP_DATA_ACCESS_READ_ONLY",
                "GROUP_DATA_ACCESS_READ_WRITE",
                "GROUP_OWNER",
                "GROUP_READ_ONLY"
              ]
            },
            "uniqueItems": true
          },
          "username": {
            "type": "string",
            "description": "Email address of the MongoDB Cloud user invited to join the project.",
            "pattern": "^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$",
            "readOnly": true
          }
        },
        "required": [
          "links"
        ]
      },
      "ApiHipChatView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiIntegrationView"
          }
        ]
      },
      "ApiHostView_Atlas": {
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when MongoDB Cloud created this MongoDB process. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "groupId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project. The project contains MongoDB processes that you want to return. The MongoDB process can be either the `mongod` or `mongos`.",
            "example": "32b6e34b3d91647abb20e7b8",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "hostname": {
            "type": "string",
            "description": "Hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (`mongod` or `mongos`).",
            "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?$",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
            "readOnly": true
          },
          "lastPing": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when MongoDB Cloud received the last ping for this MongoDB process. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link_Atlas"
            },
            "readOnly": true
          },
          "port": {
            "type": "number",
            "description": "Internet Assigned Numbers Authority (IANA) port on which the MongoDB process listens for requests.",
            "maxLength": 5,
            "minLength": 4,
            "pattern": "^[0-9]{4,5}$",
            "readOnly": true
          },
          "replicaSetName": {
            "type": "string",
            "description": "Human-readable label that identifies the replica set that contains this process. This resource returns this parameter if this process belongs to a replica set.",
            "readOnly": true
          },
          "typeName": {
            "type": "string",
            "description": "Type of MongoDB process that MongoDB Cloud tracks. MongoDB Cloud returns new processes as **NO_DATA** until MongoDB Cloud completes deploying the process.",
            "enum": [
              "REPLICA_PRIMARY",
              "REPLICA_SECONDARY",
              "RECOVERING",
              "SHARD_MONGOS",
              "SHARD_CONFIG",
              "SHARD_STANDALONE",
              "SHARD_PRIMARY",
              "SHARD_SECONDARY",
              "NO_DATA"
            ],
            "readOnly": true
          },
          "userAlias": {
            "type": "string",
            "description": "Human-readable label that identifies the cluster node. MongoDB Cloud sets this hostname usually to the standard hostname for the cluster node. It appears in the connection string for a cluster instead of the value of the hostname parameter.",
            "readOnly": true
          },
          "version": {
            "type": "string",
            "description": "Version of MongoDB that this process runs.",
            "pattern": "([\\d]+\\.[\\d]+\\.[\\d]+)",
            "readOnly": true
          }
        },
        "required": [
          "links"
        ]
      },
      "ApiIndexRequestView": {
        "type": "object",
        "properties": {
          "collation": {
            "$ref": "#/components/schemas/collation"
          },
          "collection": {
            "type": "string",
            "description": "Human-readable label of the collection for which MongoDB Cloud creates an index.",
            "writeOnly": true
          },
          "db": {
            "type": "string",
            "description": "Human-readable label of the database that holds the collection on which MongoDB Cloud creates an index.",
            "writeOnly": true
          },
          "keys": {
            "type": "array",
            "description": "List that contains one or more objects that describe the parameters that you want to index.",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "description": "Key-value pair that sets the parameter to index as the key and the type of index as its value. To create a [multikey index](https://docs.mongodb.com/manual/core/index-multikey/), list each parameter in its own object within this array.",
                "externalDocs": {
                  "description": "Index Types",
                  "url": "https://docs.mongodb.com/manual/indexes/#index-types"
                },
                "writeOnly": true
              },
              "description": "Key-value pair that sets the parameter to index as the key and the type of index as its value. To create a [multikey index](https://docs.mongodb.com/manual/core/index-multikey/), list each parameter in its own object within this array.",
              "externalDocs": {
                "description": "Index Types",
                "url": "https://docs.mongodb.com/manual/indexes/#index-types"
              },
              "writeOnly": true
            },
            "writeOnly": true
          },
          "options": {
            "$ref": "#/components/schemas/IndexOptions"
          }
        },
        "required": [
          "collection",
          "db",
          "keys"
        ]
      },
      "ApiInstanceSizeView": {
        "type": "object",
        "description": "List of instances sizes that this cloud provider supports.",
        "properties": {
          "availableRegions": {
            "type": "array",
            "description": "List of regions that this cloud provider supports for this instance size.",
            "items": {
              "$ref": "#/components/schemas/ApiAvailableRegionView"
            },
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies the instance size or cluster tier.",
            "readOnly": true
          }
        },
        "readOnly": true
      },
      "ApiIntegerThresholdView": {
        "type": "object",
        "description": "Limit that triggers an alert when exceeded. The resource returns this parameter when **eventTypeName** has not been set to `OUTSIDE_METRIC_THRESHOLD`.",
        "properties": {
          "operator": {
            "type": "string",
            "description": "Comparison operator to apply when checking the current metric value.",
            "enum": [
              "GREATER_THAN",
              "LESS_THAN"
            ]
          },
          "threshold": {
            "type": "integer",
            "format": "int32",
            "description": "Value of metric that, when exceeded, triggers an alert."
          },
          "units": {
            "type": "string",
            "description": "Element used to express the quantity. This can be an element of time, storage capacity, and the like.",
            "enum": [
              "BITS",
              "BYTES",
              "DAYS",
              "GIGABITS",
              "GIGABYTES",
              "HOURS",
              "KILOBITS",
              "KILOBYTES",
              "MEGABITS",
              "MEGABYTES",
              "MILLISECONDS",
              "MINUTES",
              "PETABYTES",
              "RAW",
              "SECONDS",
              "TERABYTES"
            ]
          }
        },
        "title": "Threshold"
      },
      "ApiIntegrationView": {
        "type": "object",
        "description": "Collection of settings that describe third-party integrations.",
        "discriminator": {
          "mapping": {
            "DATADOG": "#/components/schemas/ApiDatadogView",
            "FLOWDOCK": "#/components/schemas/ApiFlowdockView",
            "MICROSOFT_TEAMS": "#/components/schemas/ApiMicrosoftTeamsView",
            "NEW_RELIC": "#/components/schemas/ApiNewRelicView",
            "OPS_GENIE": "#/components/schemas/ApiOpsGenieView",
            "PAGER_DUTY": "#/components/schemas/ApiPagerDutyView",
            "PROMETHEUS": "#/components/schemas/ApiPrometheusView",
            "SLACK": "#/components/schemas/ApiSlackView",
            "VICTOR_OPS": "#/components/schemas/ApiVictorOpsView",
            "WEBHOOK": "#/components/schemas/ApiWebhookView"
          },
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies the service to which you want to integrate with MongoDB Cloud. The value must match the third-party service integration type.",
            "enum": [
              "PAGER_DUTY",
              "MICROSOFT_TEAMS",
              "SLACK",
              "DATADOG",
              "NEW_RELIC",
              "OPS_GENIE",
              "VICTOR_OPS",
              "FLOWDOCK",
              "WEBHOOK",
              "PROMETHEUS"
            ]
          }
        }
      },
      "ApiIntegrationViewManual": {
        "type": "object",
        "description": "Collection of settings that describe third-party integrations.",
        "discriminator": {
          "mapping": {
            "DATADOG": "#/components/schemas/ApiDatadogView",
            "FLOWDOCK": "#/components/schemas/ApiFlowdockView",
            "MICROSOFT_TEAMS": "#/components/schemas/ApiMicrosoftTeamsView",
            "NEW_RELIC": "#/components/schemas/ApiNewRelicView",
            "OPS_GENIE": "#/components/schemas/ApiOpsGenieView",
            "PAGER_DUTY": "#/components/schemas/ApiPagerDutyView",
            "PROMETHEUS": "#/components/schemas/ApiPrometheusView",
            "SLACK": "#/components/schemas/ApiSlackView",
            "VICTOR_OPS": "#/components/schemas/ApiVictorOpsView",
            "WEBHOOK": "#/components/schemas/ApiWebhookView"
          },
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies the service to which you want to integrate with MongoDB Cloud. The value must match the third-party service integration type.",
            "enum": [
              "PAGER_DUTY",
              "MICROSOFT_TEAMS",
              "SLACK",
              "DATADOG",
              "NEW_RELIC",
              "OPS_GENIE",
              "VICTOR_OPS",
              "FLOWDOCK",
              "WEBHOOK",
              "PROMETHEUS"
            ]
          }
        }
      },
      "ApiInvoiceView": {
        "type": "object",
        "properties": {
          "amountBilledCents": {
            "type": "integer",
            "format": "int32",
            "description": "Sum of services that the specified organization consumed in the period covered in this invoice. This parameter expresses its value in cents (100ths of one US Dollar) and calculates its value as **subtotalCents** + **salesTaxCents** - **startingBalanceCents**.",
            "readOnly": true
          },
          "amountPaidCents": {
            "type": "integer",
            "format": "int32",
            "description": "Sum that the specified organization paid toward this invoice. This parameter expresses its value in cents (100ths of one US Dollar).",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when MongoDB Cloud created this invoice. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "creditsCents": {
            "type": "integer",
            "format": "int32",
            "description": "Sum that MongoDB credited the specified organization toward this invoice. This parameter expresses its value in cents (100ths of one US Dollar).",
            "readOnly": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when MongoDB Cloud finished the billing period that this invoice covers. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "groupId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project associated to this invoice. This identifying string doesn't appear on all invoices.",
            "example": "32b6e34b3d91647abb20e7b8",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the invoice submitted to the specified organization. Charges typically post the next day.",
            "example": "217a865625b2bad3b9a1e93d",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "lineItems": {
            "type": "array",
            "description": "List that contains individual services included in this invoice.",
            "items": {
              "$ref": "#/components/schemas/ApiLineItemView"
            },
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "orgId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization charged for services consumed from MongoDB Cloud.",
            "example": "4888442a3354817a7320eb61",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "payments": {
            "type": "array",
            "description": "List that contains funds transferred to MongoDB to cover the specified service noted in this invoice.",
            "items": {
              "$ref": "#/components/schemas/ApiPaymentView"
            },
            "readOnly": true
          },
          "refunds": {
            "type": "array",
            "description": "List that contains payments that MongoDB returned to the organization for this invoice.",
            "items": {
              "$ref": "#/components/schemas/ApiRefundView"
            },
            "readOnly": true
          },
          "salesTaxCents": {
            "type": "integer",
            "format": "int32",
            "description": "Sum of sales tax applied to this invoice. This parameter expresses its value in cents (100ths of one US Dollar).",
            "readOnly": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when MongoDB Cloud began the billing period that this invoice covers. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "startingBalanceCents": {
            "type": "integer",
            "format": "int32",
            "description": "Sum that the specified organization owed to MongoDB when MongoDB issued this invoice. This parameter expresses its value in US Dollars.",
            "readOnly": true
          },
          "statusName": {
            "type": "string",
            "description": "Phase of payment processing in which this invoice exists when you made this request. Accepted phases include:\n\n| Phase Value | Reason |\n|---|---|\n| CLOSED | MongoDB finalized all charges in the billing cycle but has yet to charge the customer. |\n| FAILED | MongoDB attempted to charge the provided credit card but charge for that amount failed. |\n| FORGIVEN | Customer initiated payment which MongoDB later forgave. |\n| FREE | All charges totalled zero so the customer won't be charged. |\n| INVOICED | MongoDB handled these charges using elastic invoicing. |\n| PAID | MongoDB succeeded in charging the provided credit card. |\n| PENDING | Invoice includes charges for the current billing cycle. |\n| PREPAID | Customer has a pre-paid plan so they won't be charged. |\n",
            "readOnly": true
          },
          "subtotalCents": {
            "type": "integer",
            "format": "int32",
            "description": "Sum of all positive invoice line items contained in this invoice. This parameter expresses its value in cents (100ths of one US Dollar).",
            "readOnly": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when MongoDB Cloud last updated the value of this payment. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          }
        },
        "required": [
          "links"
        ]
      },
      "ApiKeyView": {
        "type": "object",
        "description": "Details contained in one API key.",
        "properties": {
          "accessList": {
            "type": "array",
            "description": "List of network addresses granted access to this API using this API key.",
            "items": {
              "$ref": "#/components/schemas/AccessListItemView"
            }
          },
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this organization API key.",
            "example": "69f24ec71f746985759551c7",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "publicKey": {
            "type": "string",
            "description": "Public API key value set for the specified organization API key. ",
            "maxLength": 8,
            "minLength": 8,
            "pattern": "^([a-z]{8})$",
            "readOnly": true
          },
          "roles": {
            "type": "array",
            "description": "List that contains roles that the API key needs to have. All roles you provide must be valid for the specified project or organization. Each request must include a minimum of one valid role. The resource returns all project and organization roles assigned to the Cloud user.",
            "items": {
              "$ref": "#/components/schemas/ApiRoleAssignmentView"
            },
            "readOnly": true
          }
        },
        "required": [
          "accessList",
          "id",
          "publicKey",
          "roles"
        ]
      },
      "ApiLineItemView": {
        "type": "object",
        "description": "One service included in this invoice.",
        "properties": {
          "clusterName": {
            "type": "string",
            "description": "Human-readable label that identifies the cluster that incurred the charge.",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when MongoDB Cloud created this line item. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "discountCents": {
            "type": "integer",
            "format": "int64",
            "description": "Sum by which MongoDB discounted this line item. MongoDB Cloud expresses this value in cents (100ths of one US Dollar). The resource returns this parameter when a discount applies.",
            "readOnly": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when when MongoDB Cloud finished charging for this line item. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "groupId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project associated to this line item.",
            "example": "32b6e34b3d91647abb20e7b8",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "groupName": {
            "type": "string",
            "description": "Human-readable label that identifies the project."
          },
          "note": {
            "type": "string",
            "description": "Comment that applies to this line item.",
            "readOnly": true
          },
          "percentDiscount": {
            "type": "number",
            "description": "Percentage by which MongoDB discounted this line item. The resource returns this parameter when a discount applies.",
            "readOnly": true
          },
          "quantity": {
            "type": "number",
            "format": "double",
            "description": "Number of units included for the line item. These can be expressions of storage (GB), time (hours), or other units.",
            "readOnly": true
          },
          "sku": {
            "type": "string",
            "description": "Human-readable description of the service that this line item provided. This Stock Keeping Unit (SKU) could be the instance type, a support charge, advanced security, or another service.",
            "readOnly": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when MongoDB Cloud began charging for this line item. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "stitchAppName": {
            "type": "string",
            "description": "Human-readable label that identifies the Atlas App Service associated with this line item.",
            "externalDocs": {
              "description": "Create a new Atlas App Service",
              "url": "https://docs.mongodb.com/realm/manage-apps/create/create-with-realm-ui/"
            },
            "readOnly": true
          },
          "tierLowerBound": {
            "type": "number",
            "format": "double",
            "description": "Lower bound for usage amount range in current SKU tier. \n\n**NOTE**: **lineItems[n].tierLowerBound** appears only if your **lineItems[n].sku** is tiered.",
            "readOnly": true
          },
          "tierUpperBound": {
            "type": "number",
            "format": "double",
            "description": "Upper bound for usage amount range in current SKU tier. \n\n**NOTE**: **lineItems[n].tierUpperBound** appears only if your **lineItems[n].sku** is tiered.",
            "readOnly": true
          },
          "totalPriceCents": {
            "type": "integer",
            "format": "int64",
            "description": "Sum of the cost set for this line item. MongoDB Cloud expresses this value in cents (100ths of one US Dollar) and calculates this value as **unitPriceDollars** × **quantity** × 100.",
            "readOnly": true
          },
          "unit": {
            "type": "number",
            "description": "Element used to express what **quantity** this line item measures. This value can be elements of time, storage capacity, and the like.",
            "readOnly": true
          },
          "unitPriceDollars": {
            "type": "number",
            "format": "double",
            "description": "Value per **unit** for this line item expressed in US Dollars.",
            "readOnly": true
          }
        },
        "title": "Line Item"
      },
      "ApiMatcherView": {
        "type": "object",
        "description": "Rules to apply when comparing an object against this alert configuration.",
        "properties": {
          "fieldName": {
            "type": "string",
            "description": "Name of the parameter in the target object that MongoDB Cloud checks. The parameter must match all rules for MongoDB Cloud to check for alert configurations.",
            "enum": [
              "CLUSTER_NAME",
              "HOSTNAME",
              "HOSTNAME_AND_PORT",
              "PORT",
              "REPLICA_SET_NAME",
              "SHARD_NAME",
              "TYPE_NAME"
            ]
          },
          "operator": {
            "type": "string",
            "description": "Comparison operator to apply when checking the current metric value against **matcher[n].value**.",
            "enum": [
              "EQUALS",
              "CONTAINS",
              "STARTS_WITH",
              "ENDS_WITH",
              "NOT_EQUALS",
              "NOT_CONTAINS",
              "REGEX"
            ]
          },
          "value": {
            "type": "string",
            "description": "Value to match or exceed using the specified **matchers.operator**."
          }
        },
        "title": "Matchers"
      },
      "ApiMeasurementView": {
        "type": "object",
        "properties": {
          "dataPoints": {
            "type": "array",
            "description": "List that contains the value of, and metadata provided for, one data point generated at a particular moment in time. If no data point exists for a particular moment in time, the `value` parameter returns `null`.",
            "items": {
              "$ref": "#/components/schemas/ApiMetricDataPointView"
            },
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Human-readable label of the measurement that this data point covers.",
            "readOnly": true
          },
          "units": {
            "type": "string",
            "description": "Element used to quantify the measurement. The resource returns units of throughput, storage, and time.",
            "enum": [
              "BYTES",
              "BYTES_PER_SECOND",
              "GIGABYTES",
              "GIGABYTES_PER_HOUR",
              "MEGABYTES_PER_SECOND",
              "MILLISECONDS",
              "PERCENT",
              "SCALAR",
              "SCALAR_PER_SECOND"
            ],
            "readOnly": true
          }
        }
      },
      "ApiMeasurementView_Atlas": {
        "type": "object",
        "properties": {
          "dataPoints": {
            "type": "array",
            "description": "List that contains the value of, and metadata provided for, one data point generated at a particular moment in time. If no data point exists for a particular moment in time, the `value` parameter returns `null`.",
            "items": {
              "$ref": "#/components/schemas/ApiMetricDataPointView_Atlas"
            },
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Human-readable label of the measurement that this data point covers.",
            "readOnly": true
          },
          "units": {
            "type": "string",
            "description": "Element used to quantify the measurement. The resource returns units of throughput, storage, and time.",
            "enum": [
              "BYTES",
              "BYTES_PER_SECOND",
              "GIGABYTES",
              "GIGABYTES_PER_HOUR",
              "MEGABYTES_PER_SECOND",
              "MILLISECONDS",
              "PERCENT",
              "SCALAR",
              "SCALAR_PER_SECOND"
            ],
            "readOnly": true
          }
        }
      },
      "ApiMeasurementsGeneralView_Atlas": {
        "type": "object",
        "properties": {
          "databaseName": {
            "type": "string",
            "description": "Human-readable label that identifies the database that the specified MongoDB process serves.",
            "readOnly": true
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time that specifies when to stop retrieving measurements. If you set **end**, you must set **start**. You can't set this parameter and **period** in the same request. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "granularity": {
            "type": "string",
            "description": "Duration that specifies the interval between measurement data points. The parameter expresses its value in ISO 8601 timestamp format in UTC. If you set this parameter, you must set either **period** or **start** and **end**.",
            "enum": [
              "PT1M",
              "PT5M",
              "PT1H",
              "P1D"
            ],
            "example": "PT5M",
            "pattern": "/^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$/",
            "readOnly": true
          },
          "groupId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project. The project contains MongoDB processes that you want to return. The MongoDB process can be either the `mongod` or `mongos`.",
            "example": "32b6e34b3d91647abb20e7b8",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "hostId": {
            "type": "string",
            "description": "Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "example": "mongodb.example.com:27017",
            "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link_Atlas"
            },
            "readOnly": true
          },
          "measurements": {
            "type": "array",
            "description": "List that contains measurements and their data points.",
            "items": {
              "$ref": "#/components/schemas/ApiMeasurementView_Atlas"
            },
            "readOnly": true
          },
          "partitionName": {
            "type": "string",
            "description": "Human-readable label of the disk or partition to which the measurements apply.",
            "readOnly": true
          },
          "processId": {
            "type": "string",
            "description": "Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "example": "mongodb.example.com:27017",
            "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
            "readOnly": true
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time that specifies when to start retrieving measurements. If you set **start**, you must set **end**. You can't set this parameter and **period** in the same request. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          }
        },
        "required": [
          "links"
        ]
      },
      "ApiMeasurementsIndexesView": {
        "type": "object",
        "properties": {
          "collectionName": {
            "type": "string",
            "description": "Human-readable label that identifies the collection.",
            "readOnly": true
          },
          "databaseName": {
            "type": "string",
            "description": "Human-readable label that identifies the database that the specified MongoDB process serves.",
            "readOnly": true
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time that specifies when to stop retrieving measurements. If you set **end**, you must set **start**. You can't set this parameter and **period** in the same request. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "granularity": {
            "type": "string",
            "description": "Duration that specifies the interval between measurement data points. The parameter expresses its value in ISO 8601 timestamp format in UTC. If you set this parameter, you must set either **period** or **start** and **end**.",
            "enum": [
              "PT1M",
              "PT5M",
              "PT1H",
              "P1D"
            ],
            "example": "PT5M",
            "pattern": "/^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$/",
            "readOnly": true
          },
          "groupId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project. The project contains MongoDB processes that you want to return. The MongoDB process can be either the `mongod` or `mongos`.",
            "example": "32b6e34b3d91647abb20e7b8",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "indexIds": {
            "type": "array",
            "description": "List that contains the Atlas Search index identifiers.",
            "items": {
              "type": "string",
              "description": "Unique 24-hexadecimal digit string that identifies the index.",
              "example": "2dc22bf163e2f83527cc3838",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            },
            "readOnly": true
          },
          "indexStatsMeasurements": {
            "type": "array",
            "description": "List that contains the Atlas Search index stats measurements.",
            "items": {
              "$ref": "#/components/schemas/ApiMeasurementView"
            },
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "processId": {
            "type": "string",
            "description": "Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "example": "mongodb.example.com:27017",
            "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
            "readOnly": true
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time that specifies when to start retrieving measurements. If you set **start**, you must set **end**. You can't set this parameter and **period** in the same request. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          }
        },
        "required": [
          "links"
        ]
      },
      "ApiMeasurementsNonIndexView": {
        "type": "object",
        "properties": {
          "end": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time that specifies when to stop retrieving measurements. If you set **end**, you must set **start**. You can't set this parameter and **period** in the same request. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "granularity": {
            "type": "string",
            "description": "Duration that specifies the interval between measurement data points. The parameter expresses its value in ISO 8601 timestamp format in UTC. If you set this parameter, you must set either **period** or **start** and **end**.",
            "enum": [
              "PT1M",
              "PT5M",
              "PT1H",
              "P1D"
            ],
            "example": "PT5M",
            "pattern": "/^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$/",
            "readOnly": true
          },
          "groupId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project. The project contains MongoDB processes that you want to return. The MongoDB process can be either the `mongod` or `mongos`.",
            "example": "32b6e34b3d91647abb20e7b8",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "hardwareMeasurements": {
            "type": "array",
            "description": "List that contains the Atlas Search hardware measurements.",
            "items": {
              "$ref": "#/components/schemas/ApiMeasurementView"
            },
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "processId": {
            "type": "string",
            "description": "Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "example": "mongodb.example.com:27017",
            "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
            "readOnly": true
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time that specifies when to start retrieving measurements. If you set **start**, you must set **end**. You can't set this parameter and **period** in the same request. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "statusMeasurements": {
            "type": "array",
            "description": "List that contains the Atlas Search status measurements.",
            "items": {
              "$ref": "#/components/schemas/ApiMeasurementView"
            },
            "readOnly": true
          }
        },
        "required": [
          "links"
        ]
      },
      "ApiMetricDataPointView": {
        "type": "object",
        "description": "value of, and metadata provided for, one data point generated at a particular moment in time. If no data point exists for a particular moment in time, the `value` parameter returns `null`.",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when this data point occurred. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "value": {
            "type": "number",
            "description": "Value that comprises this data point.",
            "readOnly": true
          }
        },
        "readOnly": true
      },
      "ApiMetricDataPointView_Atlas": {
        "type": "object",
        "description": "value of, and metadata provided for, one data point generated at a particular moment in time. If no data point exists for a particular moment in time, the `value` parameter returns `null`.",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when this data point occurred. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "value": {
            "type": "number",
            "description": "Value that comprises this data point.",
            "readOnly": true
          }
        },
        "readOnly": true
      },
      "ApiMetricThresholdView": {
        "type": "object",
        "description": "Threshold for the metric that, when exceeded, triggers an alert. The resource returns this parameter when `\"eventTypeName\" : \"OUTSIDE_METRIC_THRESHOLD\"`.",
        "properties": {
          "metricName": {
            "type": "string",
            "description": "Human-readable label that identifies the metric against which MongoDB Cloud checks the configured **metricThreshold.threshold**.",
            "enum": [
              "ASSERT_MSG",
              "ASSERT_REGULAR",
              "ASSERT_USER",
              "ASSERT_WARNING",
              "AVG_COMMAND_EXECUTION_TIME",
              "AVG_READ_EXECUTION_TIME",
              "AVG_WRITE_EXECUTION_TIME",
              "BACKGROUND_FLUSH_AVG",
              "CACHE_BYTES_READ_INTO",
              "CACHE_BYTES_WRITTEN_FROM",
              "CACHE_USAGE_DIRTY",
              "CACHE_USAGE_USED",
              "COMPUTED_MEMORY",
              "CONNECTIONS",
              "CONNECTIONS_MAX",
              "CONNECTIONS_PERCENT",
              "CURSORS_TOTAL_CLIENT_CURSORS_SIZE",
              "CURSORS_TOTAL_OPEN",
              "CURSORS_TOTAL_TIMED_OUT",
              "DB_DATA_SIZE_TOTAL",
              "DB_INDEX_SIZE_TOTAL",
              "DB_STORAGE_TOTAL",
              "DISK_PARTITION_SPACE_USED_DATA",
              "DISK_PARTITION_SPACE_USED_INDEX",
              "DISK_PARTITION_SPACE_USED_JOURNAL",
              "DISK_PARTITION_UTILIZATION_DATA",
              "DISK_PARTITION_UTILIZATION_INDEX",
              "DISK_PARTITION_UTILIZATION_JOURNAL",
              "DOCUMENT_DELETED",
              "DOCUMENT_INSERTED",
              "DOCUMENT_RETURNED",
              "DOCUMENT_UPDATED",
              "EXTRA_INFO_PAGE_FAULTS",
              "FTS_DISK_UTILIZATION",
              "FTS_MEMORY_MAPPED",
              "FTS_MEMORY_RESIDENT",
              "FTS_MEMORY_VIRTUAL",
              "FTS_PROCESS_CPU_KERNEL",
              "FTS_PROCESS_CPU_USER",
              "GLOBAL_ACCESSES_NOT_IN_MEMORY",
              "GLOBAL_LOCK_CURRENT_QUEUE_READERS",
              "GLOBAL_LOCK_CURRENT_QUEUE_TOTAL",
              "GLOBAL_LOCK_CURRENT_QUEUE_WRITERS",
              "GLOBAL_LOCK_PERCENTAGE",
              "GLOBAL_PAGE_FAULT_EXCEPTIONS_THROWN",
              "INDEX_COUNTERS_BTREE_ACCESSES",
              "INDEX_COUNTERS_BTREE_HITS",
              "INDEX_COUNTERS_BTREE_MISS_RATIO",
              "INDEX_COUNTERS_BTREE_MISSES",
              "JOURNALING_COMMITS_IN_WRITE_LOCK",
              "JOURNALING_MB",
              "JOURNALING_WRITE_DATA_FILES_MB",
              "LOGICAL_SIZE",
              "MEMORY_MAPPED",
              "MEMORY_RESIDENT",
              "MEMORY_VIRTUAL",
              "MUNIN_CPU_IOWAIT",
              "MUNIN_CPU_IRQ",
              "MUNIN_CPU_NICE",
              "MUNIN_CPU_SOFTIRQ",
              "MUNIN_CPU_STEAL",
              "MUNIN_CPU_SYSTEM",
              "MUNIN_CPU_USER",
              "NETWORK_BYTES_IN",
              "NETWORK_BYTES_OUT",
              "NETWORK_NUM_REQUESTS",
              "NORMALIZED_FTS_PROCESS_CPU_KERNEL",
              "NORMALIZED_FTS_PROCESS_CPU_USER",
              "NORMALIZED_SYSTEM_CPU_STEAL",
              "NORMALIZED_SYSTEM_CPU_USER",
              "OPCOUNTER_CMD",
              "OPCOUNTER_DELETE",
              "OPCOUNTER_GETMORE",
              "OPCOUNTER_INSERT",
              "OPCOUNTER_QUERY",
              "OPCOUNTER_REPL_CMD",
              "OPCOUNTER_REPL_DELETE",
              "OPCOUNTER_REPL_INSERT",
              "OPCOUNTER_REPL_UPDATE",
              "OPCOUNTER_UPDATE",
              "OPERATIONS_SCAN_AND_ORDER",
              "OPLOG_MASTER_LAG_TIME_DIFF",
              "OPLOG_MASTER_TIME",
              "OPLOG_MASTER_TIME_ESTIMATED_TTL",
              "OPLOG_RATE_GB_PER_HOUR",
              "OPLOG_SLAVE_LAG_MASTER_TIME",
              "QUERY_EXECUTOR_SCANNED",
              "QUERY_EXECUTOR_SCANNED_OBJECTS",
              "QUERY_TARGETING_SCANNED_OBJECTS_PER_RETURNED",
              "QUERY_TARGETING_SCANNED_PER_RETURNED",
              "RESTARTS_IN_LAST_HOUR",
              "SERVERLESS_CONNECTIONS",
              "SERVERLESS_CONNECTIONS_PERCENT",
              "SERVERLESS_DATA_SIZE_TOTAL",
              "SERVERLESS_NETWORK_BYTES_IN",
              "SERVERLESS_NETWORK_BYTES_OUT",
              "SERVERLESS_NETWORK_NUM_REQUESTS",
              "SERVERLESS_OPCOUNTER_CMD",
              "SERVERLESS_OPCOUNTER_DELETE",
              "SERVERLESS_OPCOUNTER_GETMORE",
              "SERVERLESS_OPCOUNTER_INSERT",
              "SERVERLESS_OPCOUNTER_QUERY",
              "SERVERLESS_OPCOUNTER_UPDATE",
              "SERVERLESS_TOTAL_READ_UNITS",
              "SERVERLESS_TOTAL_WRITE_UNITS",
              "SWAP_USAGE_FREE",
              "SWAP_USAGE_USED",
              "SYSTEM_MEMORY_AVAILABLE",
              "SYSTEM_MEMORY_FREE",
              "SYSTEM_MEMORY_USED",
              "SYSTEM_NETWORK_IN",
              "SYSTEM_NETWORK_OUT",
              "TICKETS_AVAILABLE_READS",
              "TICKETS_AVAILABLE_WRITES"
            ]
          },
          "mode": {
            "type": "string",
            "default": "AVERAGE",
            "description": "MongoDB Cloud computes the current metric value as an average.",
            "enum": [
              "AVERAGE"
            ]
          },
          "operator": {
            "type": "string",
            "description": "Comparison operator to apply when checking the current metric value.",
            "enum": [
              "GREATER_THAN",
              "LESS_THAN"
            ]
          },
          "threshold": {
            "type": "number",
            "format": "double",
            "description": "Value of metric that, when exceeded, triggers an alert."
          },
          "units": {
            "type": "string",
            "description": "Element used to express the quantity. This can be an element of time, storage capacity, and the like.",
            "enum": [
              "BITS",
              "BYTES",
              "DAYS",
              "GIGABITS",
              "GIGABYTES",
              "HOURS",
              "KILOBITS",
              "KILOBYTES",
              "MEGABITS",
              "MEGABYTES",
              "MILLISECONDS",
              "MINUTES",
              "PETABYTES",
              "RAW",
              "SECONDS",
              "TERABYTES"
            ]
          }
        },
        "title": "Metric Threshold"
      },
      "ApiMicrosoftTeamsView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiIntegrationView"
          },
          {
            "type": "object",
            "properties": {
              "microsoftTeamsWebhookUrl": {
                "type": "string",
                "description": "Endpoint web address of the Microsoft Teams webhook to which MongoDB Cloud sends notifications."
              }
            }
          }
        ],
        "description": "Details to integrate one Microsoft Teams account with one MongoDB Cloud project.",
        "required": [
          "microsoftTeamsWebhookUrl"
        ],
        "title": "MICROSOFT_TEAMS"
      },
      "ApiMongoDBAccessLogsListView": {
        "type": "object",
        "properties": {
          "accessLogs": {
            "type": "array",
            "description": "Authentication attempt, one per object, made against the cluster.",
            "items": {
              "$ref": "#/components/schemas/accessLogs"
            },
            "readOnly": true
          }
        }
      },
      "ApiNamespaceObjView": {
        "type": "object",
        "description": "Human-readable label that identifies the namespace on the specified host. The resource expresses this parameter value as `<database>.<collection>`.",
        "properties": {
          "namespace": {
            "type": "string",
            "description": "Human-readable label that identifies the namespace on the specified host. The resource expresses this parameter value as `<database>.<collection>`.",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "default": "COLLECTION",
            "description": "Human-readable label that identifies the type of namespace.",
            "enum": [
              "COLLECTION"
            ],
            "readOnly": true
          }
        },
        "readOnly": true
      },
      "ApiNamespacesView": {
        "type": "object",
        "properties": {
          "namespaces": {
            "type": "array",
            "description": "List that contains each combination of database, collection, and type on the specified host.",
            "items": {
              "$ref": "#/components/schemas/ApiNamespaceObjView"
            },
            "readOnly": true,
            "uniqueItems": true
          }
        }
      },
      "ApiNewRelicView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiIntegrationView"
          },
          {
            "type": "object",
            "properties": {
              "accountId": {
                "type": "string",
                "description": "Unique 40-hexadecimal digit string that identifies your New Relic account.",
                "maxLength": 40,
                "minLength": 40,
                "pattern": "^([0-9a-f]){40}$"
              },
              "licenseKey": {
                "type": "string",
                "description": "Unique 40-hexadecimal digit string that identifies your New Relic license.",
                "maxLength": 40,
                "minLength": 40,
                "pattern": "^([0-9a-f]){40}$"
              },
              "readToken": {
                "type": "string",
                "description": "Query key used to access your New Relic account."
              },
              "writeToken": {
                "type": "string",
                "description": "Insert key associated with your New Relic account."
              }
            }
          }
        ],
        "description": "Details to integrate one New Relic account with one MongoDB Cloud project.",
        "required": [
          "accountId",
          "licenseKey",
          "readToken",
          "writeToken"
        ],
        "title": "NEW_RELIC"
      },
      "ApiNotificationView": {
        "type": "object",
        "description": "One or more targets for MongoDB Cloud to send information when an event triggers an alert condition.",
        "properties": {
          "apiToken": {
            "type": "string",
            "description": "Slack API token or Bot token that MongoDB Cloud needs to send alert notifications via Slack. The resource requires this parameter when `\"notifications.typeName\" : \"SLACK\"`. If the token later becomes invalid, MongoDB Cloud sends an email to the project owners. If the token remains invalid, MongoDB Cloud removes the token."
          },
          "channelName": {
            "type": "string",
            "description": "Name of the Slack channel to which MongoDB Cloud sends alert notifications. The resource requires this parameter when `\"notifications.typeName\" : \"SLACK\"`."
          },
          "datadogApiKey": {
            "type": "string",
            "description": "Datadog API Key that MongoDB Cloud needs to send alert notifications to Datadog. You can find this API key in the Datadog dashboard. The resource requires this parameter when `\"notifications.typeName\" : \"DATADOG\"`.",
            "pattern": "^[0-9a-f]{32}$"
          },
          "datadogRegion": {
            "type": "string",
            "default": "US",
            "description": "Datadog region that indicates which API Uniform Resource Locator (URL) to use. The resource requires this parameter when `\"notifications.typeName\" : \"DATADOG\"`.",
            "enum": [
              "EU",
              "US"
            ],
            "maxLength": 2,
            "minLength": 2
          },
          "delayMin": {
            "type": "number",
            "description": "Number of minutes that MongoDB Cloud waits after detecting an alert condition before it sends out the first notification."
          },
          "emailAddress": {
            "type": "string",
            "description": "Email address to which MongoDB Cloud sends alert notifications. The resource requires this parameter when `\"notifications.typeName\" : \"EMAIL\"`. You don’t need to set this value to send emails to individual or groups of MongoDB Cloud users including:\n\n- specific MongoDB Cloud users (`\"notifications.typeName\" : \"USER\"`)\n- MongoDB Cloud users with specific project roles (`\"notifications.typeName\" : \"GROUP\"`)\n- MongoDB Cloud users with specific organization roles (`\"notifications.typeName\" : \"ORG\"`)\n- MongoDB Cloud teams (`\"notifications.typeName\" : \"TEAM\"`)\n\nTo send emails to one MongoDB Cloud user or grouping of users, set the **notifications.emailEnabled** parameter.",
            "pattern": "^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$"
          },
          "emailEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether MongoDB Cloud should send email notifications. The resource requires this parameter when one of the following values have been set:\n\n- `\"notifications.typeName\" : \"ORG\"`\n- `\"notifications.typeName\" : \"GROUP\"`\n- `\"notifications.typeName\" : \"USER\"`"
          },
          "flowName": {
            "type": "string",
            "description": "Flowdock flow name to which MongoDB Cloud sends alert notifications. This name appears after the organization name in the Uniform Resource Locator (URL) path: `www.flowdock.com/app/<organization-name>/<flow-name>`. The resource requires this parameter when `\"notifications.typeName\" : \"FLOWDOCK\"`.",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^([a-z\\-]+)$"
          },
          "flowdockApiToken": {
            "type": "string",
            "description": "Flowdock API token that MongoDB Cloud needs to send alert notifications to Flowdock. The resource requires this parameter when `\"notifications.typeName\" : \"FLOWDOCK\"`. If the token later becomes invalid, MongoDB Cloud sends an email to the project owners. If the token remains invalid, MongoDB Cloud removes the token."
          },
          "intervalMin": {
            "type": "number",
            "description": "Number of minutes to wait between successive notifications. MongoDB Cloud sends notifications until someone acknowledges the unacknowledged alert.\n\nPagerDuty, VictorOps, and OpsGenie notifications don't return this element. Configure and manage the notification interval within each of those services.",
            "minimum": 5
          },
          "microsoftTeamsWebhookUrl": {
            "type": "string",
            "description": "Microsoft Teams Webhook Uniform Resource Locator (URL) that MongoDB Cloud needs to send this notification via Microsoft Teams. The resource requires this parameter when `\"notifications.typeName\" : \"MICROSOFT_TEAMS\"`. If the URL later becomes invalid, MongoDB Cloud sends an email to the project owners. If the key remains invalid, MongoDB Cloud removes it."
          },
          "mobileNumber": {
            "type": "string",
            "description": "Mobile phone number to which MongoDB Cloud sends alert notifications. The resource requires this parameter when `\"notifications.typeName\" : \"SMS\"`.",
            "pattern": "(?:(?:\\\\+?1\\\\s*(?:[.-]\\\\s*)?)?(?:(\\\\s*([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9])\\\\s*)|([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9]))\\\\s*(?:[.-]\\\\s*)?)([2-9]1[02-9]|[2-9][02-9]1|[2-9][02-9]{2})\\\\s*(?:[.-]\\\\s*)?([0-9]{4})$"
          },
          "notificationToken": {
            "type": "string",
            "description": "HipChat API token that MongoDB Cloud needs to send alert notifications to HipChat. The resource requires this parameter when `\"notifications.typeName\" : \"HIP_CHAT\"`\". If the token later becomes invalid, MongoDB Cloud sends an email to the project owners. If the token remains invalid, MongoDB Cloud removes it."
          },
          "opsGenieApiKey": {
            "type": "string",
            "description": "API Key that MongoDB Cloud needs to send this notification via Opsgenie. The resource requires this parameter when `\"notifications.typeName\" : \"OPS_GENIE\"`. If the key later becomes invalid, MongoDB Cloud sends an email to the project owners. If the key remains invalid, MongoDB Cloud removes it."
          },
          "opsGenieRegion": {
            "type": "string",
            "default": "US",
            "description": "Opsgenie region that indicates which API Uniform Resource Locator (URL) to use.",
            "enum": [
              "EU",
              "US"
            ],
            "maxLength": 2,
            "minLength": 2
          },
          "orgName": {
            "type": "string",
            "description": "Flowdock organization name to which MongoDB Cloud sends alert notifications. This name appears after `www.flowdock.com/app/` in the Uniform Resource Locator (URL) path. The resource requires this parameter when `\"notifications.typeName\" : \"FLOWDOCK\"`.",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^([a-z\\-]+)$"
          },
          "roles": {
            "type": "array",
            "description": "List that contains the one or more organization or project roles that receive the configured alert. The resource requires this parameter when `\"notifications.typeName\" : \"GROUP\"` or `\"notifications.typeName\" : \"ORG\"`. If you include this parameter, MongoDB Cloud sends alerts only to users assigned the roles you specify in the array. If you omit this parameter, MongoDB Cloud sends alerts to users assigned any role.",
            "items": {
              "type": "string",
              "description": "One organization or project role that receive the configured alert.",
              "enum": [
                "GROUP_CLUSTER_MANAGER",
                "GROUP_DATA_ACCESS_ADMIN",
                "GROUP_DATA_ACCESS_READ_ONLY",
                "GROUP_DATA_ACCESS_READ_WRITE",
                "GROUP_OWNER",
                "GROUP_READ_WRITE",
                "ORG_OWNER",
                "ORG_MEMBER",
                "ORG_GROUP_CREATOR",
                "ORG_BILLING_ADMIN",
                "ORG_READ_ONLY"
              ]
            }
          },
          "roomName": {
            "type": "string",
            "description": "HipChat API room name to which MongoDB Cloud sends alert notifications. The resource requires this parameter when `\"notifications.typeName\" : \"HIP_CHAT\"`\"."
          },
          "serviceKey": {
            "type": "string",
            "description": "PagerDuty service key that MongoDB Cloud needs to send notifications via PagerDuty. The resource requires this parameter when `\"notifications.typeName\" : \"PAGER_DUTY\"`. If the key later becomes invalid, MongoDB Cloud sends an email to the project owners. If the key remains invalid, MongoDB Cloud removes it."
          },
          "severity": {
            "type": "string",
            "description": "Degree of seriousness given to this notification.",
            "enum": [
              "CRITICAL",
              "ERROR",
              "WARNING"
            ]
          },
          "smsEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether MongoDB Cloud should send text message notifications. The resource requires this parameter when one of the following values have been set:\n\n- `\"notifications.typeName\" : \"ORG\"`\n- `\"notifications.typeName\" : \"GROUP\"`\n- `\"notifications.typeName\" : \"USER\"`"
          },
          "teamId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies one MongoDB Cloud team. The resource requires this parameter when `\"notifications.typeName\" : \"TEAM\"`.",
            "example": "e254e4ade2206f4520d4107d",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$"
          },
          "teamName": {
            "type": "string",
            "description": "Name of the MongoDB Cloud team that receives this notification. The resource requires this parameter when `\"notifications.typeName\" : \"TEAM\"`."
          },
          "typeName": {
            "type": "string",
            "description": "Human-readable label that displays the alert notification type.",
            "enum": [
              "DATADOG",
              "EMAIL",
              "FLOWDOCK",
              "GROUP",
              "MICROSOFT_TEAMS",
              "OPS_GENIE",
              "ORG",
              "PAGER_DUTY",
              "PROMETHEUS",
              "SLACK",
              "SMS",
              "TEAM",
              "USER",
              "VICTOR_OPS",
              "WEBHOOK"
            ]
          },
          "username": {
            "type": "string",
            "description": "MongoDB Cloud username of the person to whom MongoDB Cloud sends notifications. Specify only MongoDB Cloud users who belong to the project that owns the alert configuration. The resource requires this parameter when `\"notifications.typeName\" : \"USER\"`.",
            "pattern": "^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$"
          },
          "victorOpsApiKey": {
            "type": "string",
            "description": "API key that MongoDB Cloud needs to send alert notifications to Splunk On-Call. The resource requires this parameter when `\"notifications.typeName\" : \"VICTOR_OPS\"`. If the key later becomes invalid, MongoDB Cloud sends an email to the project owners. If the key remains invalid, MongoDB Cloud removes it."
          },
          "victorOpsRoutingKey": {
            "type": "string",
            "description": "Routing key that MongoDB Cloud needs to send alert notifications to Splunk On-Call. The resource requires this parameter when `\"notifications.typeName\" : \"VICTOR_OPS\"`. If the key later becomes invalid, MongoDB Cloud sends an email to the project owners. If the key remains invalid, MongoDB Cloud removes it."
          },
          "webhookSecret": {
            "type": "string",
            "description": "An optional field for your webhook secret."
          },
          "webhookUrl": {
            "type": "string",
            "description": "Your webhook URL."
          }
        },
        "title": "Notifications"
      },
      "ApiOpsGenieView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiIntegrationView"
          },
          {
            "type": "object",
            "properties": {
              "apiKey": {
                "type": "string",
                "description": "Key that allows MongoDB Cloud to access your Opsgenie account."
              },
              "region": {
                "type": "string",
                "default": "US",
                "description": "Two-letter code that indicates which regional URL MongoDB uses to access the Opsgenie API.",
                "enum": [
                  "EU",
                  "US"
                ],
                "maxLength": 2,
                "minLength": 2
              }
            }
          }
        ],
        "description": "Details to integrate one Opsgenie account with one MongoDB Cloud project.",
        "required": [
          "apiKey"
        ],
        "title": "OPS_GENIE"
      },
      "ApiOrganizationInvitationRequestView": {
        "type": "object",
        "properties": {
          "roles": {
            "type": "array",
            "description": "One or more organization or project level roles to assign to the MongoDB Cloud user.",
            "items": {
              "type": "string",
              "enum": [
                "ORG_OWNER",
                "ORG_MEMBER",
                "ORG_GROUP_CREATOR",
                "ORG_BILLING_ADMIN",
                "ORG_READ_ONLY"
              ]
            },
            "uniqueItems": true
          },
          "teamIds": {
            "type": "array",
            "description": "List of teams to which you want to invite the desired MongoDB Cloud user.",
            "items": {
              "type": "string",
              "description": "Unique 24-hexadecimal digit string that identifies the team.",
              "example": "e254e4ade2206f4520d4107d",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            }
          },
          "username": {
            "type": "string",
            "format": "email",
            "description": "Email address that belongs to the desired MongoDB Cloud user.",
            "pattern": "^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$"
          }
        }
      },
      "ApiOrganizationInvitationView": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when MongoDB Cloud sent the invitation. MongoDB Cloud represents this timestamp in ISO 8601 format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the invitation from MongoDB Cloud expires. MongoDB Cloud represents this timestamp in ISO 8601 format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this organization.",
            "example": "40a49d60a105686d534c8af6",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "inviterUsername": {
            "type": "string",
            "format": "email",
            "description": "Email address of the MongoDB Cloud user who sent the invitation to join the organization.",
            "pattern": "^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "orgId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization.",
            "example": "4888442a3354817a7320eb61",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "orgName": {
            "type": "string",
            "description": "Human-readable label that identifies this organization.",
            "pattern": "^[\\p{L}\\p{N}\\-_.(),:&@+']{1,64}$"
          },
          "roles": {
            "type": "array",
            "description": "One or more organization or project level roles to assign to the MongoDB Cloud user.",
            "items": {
              "type": "string",
              "enum": [
                "ORG_OWNER",
                "ORG_MEMBER",
                "ORG_GROUP_CREATOR",
                "ORG_BILLING_ADMIN",
                "ORG_READ_ONLY",
                "GROUP_CLUSTER_MANAGER",
                "GROUP_DATA_ACCESS_ADMIN",
                "GROUP_DATA_ACCESS_READ_ONLY",
                "GROUP_DATA_ACCESS_READ_WRITE",
                "GROUP_OWNER",
                "GROUP_READ_ONLY"
              ]
            },
            "uniqueItems": true
          },
          "teamIds": {
            "type": "array",
            "description": "List of unique 24-hexadecimal digit strings that identifies each team.",
            "items": {
              "type": "string",
              "description": "Unique 24-hexadecimal digit string that identifies the team.",
              "example": "e254e4ade2206f4520d4107d",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            },
            "readOnly": true
          },
          "username": {
            "type": "string",
            "format": "email",
            "description": "Email address of the MongoDB Cloud user invited to join the organization.",
            "pattern": "^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$"
          }
        },
        "required": [
          "links",
          "orgName"
        ]
      },
      "ApiOrganizationView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization.",
            "example": "4888442a3354817a7320eb61",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Flag that indicates whether this organization has been deleted.",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies the organization.",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[\\p{L}\\p{N}\\-_.(),:&@+']{1,64}$"
          }
        },
        "required": [
          "links",
          "name"
        ]
      },
      "ApiPagerDutyView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiIntegrationView"
          },
          {
            "type": "object",
            "properties": {
              "serviceKey": {
                "type": "string",
                "description": "Service key associated with your PagerDuty account."
              }
            }
          }
        ],
        "description": "Details to integrate one PagerDuty account with one MongoDB Cloud project.",
        "required": [
          "serviceKey"
        ],
        "title": "PAGER_DUTY"
      },
      "ApiPaymentView": {
        "type": "object",
        "description": "Funds transferred to MongoDB to cover the specified service in this invoice.",
        "properties": {
          "amountBilledCents": {
            "type": "integer",
            "format": "int64",
            "description": "Sum of services that the specified organization consumed in the period covered in this invoice. This parameter expresses its value in cents (100ths of one US Dollar) and calculates its value as **subtotalCents** + **salesTaxCents** - **startingBalanceCents**.",
            "readOnly": true
          },
          "amountPaidCents": {
            "type": "integer",
            "format": "int64",
            "description": "Sum that the specified organization paid toward the associated invoice. This parameter expresses its value in cents (100ths of one US Dollar).",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the customer made this payment attempt. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this payment toward the associated invoice.",
            "example": "6fb669797183aa180bc5c09a",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "salesTaxCents": {
            "type": "integer",
            "format": "int64",
            "description": "Sum of sales tax applied to this invoice. This parameter expresses its value in cents (100ths of one US Dollar).",
            "readOnly": true
          },
          "statusName": {
            "type": "string",
            "description": "Phase of payment processing for the associated invoice when you made this request.\n\nThese phases include:\n\n| Phase Value | Reason |\n|---|---|\n| `CANCELLED` | Customer or MongoDB cancelled the payment. |\n| `ERROR` | Issue arose when attempting to complete payment. |\n| `FAILED` | MongoDB tried to charge the credit card without success. |\n| `FAILED_AUTHENTICATION` | Strong Customer Authentication has failed. Confirm that your payment method is authenticated. |\n| `FORGIVEN` | Customer initiated payment which MongoDB later forgave. |\n| `INVOICED` | MongoDB issued an invoice that included this line item. |\n| `NEW` | Customer provided a method of payment, but MongoDB hasn't tried to charge the credit card. |\n| `PAID` | Customer submitted a successful payment. |\n| `PARTIAL_PAID` | Customer paid for part of this line item. |\n",
            "readOnly": true
          },
          "subtotalCents": {
            "type": "integer",
            "format": "int64",
            "description": "Sum of all positive invoice line items contained in this invoice. This parameter expresses its value in cents (100ths of one US Dollar).",
            "readOnly": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the customer made an update to this payment attempt. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          }
        },
        "title": "Payment"
      },
      "ApiPerformanceAdvisorIndexView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this index.",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "impact": {
            "type": "array",
            "description": "List that contains unique 24-hexadecimal character string that identifies the query shapes in this response that the Performance Advisor suggests.",
            "items": {
              "type": "string",
              "description": "One unique 24-hexadecimal character string that identifies one query shape.",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^([a-f0-9]{24})$"
            },
            "readOnly": true
          },
          "index": {
            "type": "array",
            "description": "List that contains documents that specify a key in the index and its sort order.",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "description": "One index key paired with its sort order. A value of `1` indicates an ascending sort order. A value of `-1` indicates a descending sort order. Keys in indexes with multiple keys appear in the same order that they appear in the index.",
                "enum": [
                  "1",
                  "1",
                  "-1"
                ]
              },
              "description": "One index key paired with its sort order. A value of `1` indicates an ascending sort order. A value of `-1` indicates a descending sort order. Keys in indexes with multiple keys appear in the same order that they appear in the index."
            },
            "readOnly": true
          },
          "namespace": {
            "type": "string",
            "description": "Human-readable label that identifies the namespace on the specified host. The resource expresses this parameter value as `<database>.<collection>`.",
            "readOnly": true
          },
          "weight": {
            "type": "number",
            "description": "Estimated percentage performance improvement that the suggested index provides. This value corresponds to **Impact** in the Performance Advisor user interface.",
            "readOnly": true
          }
        }
      },
      "ApiPerformanceAdvisorResponseView": {
        "type": "object",
        "properties": {
          "shapes": {
            "type": "array",
            "description": "List of query predicates, sorts, and projections that the Performance Advisor suggests.",
            "items": {
              "$ref": "#/components/schemas/ApiPerformanceAdvisorShapeView"
            },
            "readOnly": true
          },
          "suggestedIndexes": {
            "type": "array",
            "description": "List that contains the documents with information about the indexes that the Performance Advisor suggests.",
            "items": {
              "$ref": "#/components/schemas/ApiPerformanceAdvisorIndexView"
            },
            "readOnly": true
          }
        }
      },
      "ApiPerformanceAdvisorShapeView": {
        "type": "object",
        "properties": {
          "avgMs": {
            "type": "number",
            "description": "Average duration in milliseconds for the queries examined that match this shape.",
            "readOnly": true
          },
          "count": {
            "type": "number",
            "description": "Number of queries examined that match this shape.",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this shape. This string exists only for the duration of this API request.",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "inefficiencyScore": {
            "type": "number",
            "description": "Average number of documents read for every document that the query returns.",
            "externalDocs": {
              "description": "Understanding the Query Inefficiency Score",
              "url": "https://www.mongodb.com/docs/atlas/performance-advisor/#std-label-query-inefficiency-score"
            },
            "readOnly": true
          },
          "namespace": {
            "type": "string",
            "description": "Human-readable label that identifies the namespace on the specified host. The resource expresses this parameter value as `<database>.<collection>`.",
            "readOnly": true
          },
          "operations": {
            "type": "array",
            "description": "List that contains specific about individual queries.",
            "items": {
              "$ref": "#/components/schemas/PerformanceAdvisorOperationView"
            },
            "readOnly": true
          }
        }
      },
      "ApiPerformanceAdvisorSlowQueryListView": {
        "type": "object",
        "properties": {
          "slowQueries": {
            "type": "array",
            "description": "List of operations that the Performance Advisor detected that took longer to execute than a specified threshold.",
            "items": {
              "$ref": "#/components/schemas/slowQueries"
            },
            "readOnly": true
          }
        }
      },
      "ApiPolicyItemView": {
        "type": "object",
        "description": "specifications for one policy.",
        "properties": {
          "frequencyInterval": {
            "type": "number",
            "description": "Number that indicates the frequency interval for a set of snapshots. A value of `1` specifies the first instance of the corresponding `frequencyType`.\n\n- In a monthly policy item, `1` indicates that the monthly snapshot occurs on the first day of the month and `40` indicates the last day of the month.\n\n- In a weekly policy item, `1` indicates that the weekly snapshot occurs on Monday and `7` indicates Sunday.\n\n- In an hourly policy item, you can set the frequency interval to `1`, `2`, `4`, `6`, `8`, or `12`. For hourly policy items for NVMe clusters, MongoDB Cloud only accepts `12` as the frequency interval value.",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              40
            ]
          },
          "frequencyType": {
            "type": "string",
            "description": "Human-readable label that identifies the frequency type associated with the backup policy.",
            "enum": [
              "DAILY",
              "HOURLY",
              "MONTHLY",
              "WEEKLY"
            ]
          },
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this backup policy item.",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$"
          },
          "retentionUnit": {
            "type": "string",
            "description": "Unit of time in which MongoDB Cloud measures snapshot retention.",
            "enum": [
              "DAYS",
              "WEEKS",
              "MONTHS"
            ]
          },
          "retentionValue": {
            "type": "number",
            "description": "Duration in days, weeks, or months that MongoDB Cloud retains the snapshot. For less frequent policy items, MongoDB Cloud requires that you specify a value greater than or equal to the value specified for more frequent policy items.\n\nFor example: If the hourly policy item specifies a retention of two days, you must specify two days or greater for the retention of the weekly policy item."
          }
        },
        "required": [
          "frequencyInterval",
          "frequencyType",
          "retentionUnit",
          "retentionValue"
        ],
        "title": "policyItems"
      },
      "ApiPolicyView": {
        "type": "object",
        "description": "List that contains a document for each backup policy item in the desired backup policy.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this backup policy.",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$"
          },
          "policyItems": {
            "type": "array",
            "description": "List that contains the specifications for one policy.",
            "items": {
              "$ref": "#/components/schemas/ApiPolicyItemView"
            }
          }
        },
        "required": [
          "policyItems"
        ],
        "title": "policies"
      },
      "ApiPrometheusView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiIntegrationView"
          },
          {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean",
                "description": "Flag that indicates whether someone has activated the Prometheus integration."
              },
              "listenAddress": {
                "type": "string",
                "default": ":9216",
                "description": "Combination of IPv4 address and Internet Assigned Numbers Authority (IANA) port or the IANA port alone to which Prometheus binds to ingest MongoDB metrics."
              },
              "password": {
                "type": "string",
                "writeOnly": true
              },
              "scheme": {
                "type": "string",
                "description": "Security Scheme to apply to HyperText Transfer Protocol (HTTP) traffic between Prometheus and MongoDB Cloud.",
                "enum": [
                  "http",
                  "https"
                ]
              },
              "serviceDiscovery": {
                "type": "string",
                "description": "Desired method to discover the Prometheus service.",
                "enum": [
                  "http",
                  "file"
                ]
              },
              "tlsPemPath": {
                "type": "string",
                "description": "Root-relative path to the Transport Layer Security (TLS) Privacy Enhanced Mail (PEM) key and certificate file on the host."
              },
              "username": {
                "type": "string",
                "description": "Human-readable label that identifies your Prometheus incoming webhook."
              }
            }
          }
        ],
        "description": "Details to integrate one Prometheus account with one MongoDB Cloud project.",
        "required": [
          "enabled",
          "scheme",
          "serviceDiscovery",
          "username"
        ],
        "title": "PROMETHEUS"
      },
      "ApiRefundView": {
        "type": "object",
        "description": "One payment that MongoDB returned to the organization for this invoice.",
        "properties": {
          "amountCents": {
            "type": "integer",
            "format": "int64",
            "description": "Sum of the funds returned to the specified organization expressed in cents (100th of US Dollar).",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when MongoDB Cloud created this refund. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "paymentId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the payment that the organization had made.",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "reason": {
            "type": "string",
            "description": "Justification that MongoDB accepted to return funds to the organization.",
            "readOnly": true
          }
        },
        "title": "Refund"
      },
      "ApiRestoreJobDeliveryView": {
        "type": "object",
        "description": "Method and details that indicate how to deliver the restored snapshot data.",
        "properties": {
          "authHeader": {
            "type": "string",
            "description": "Header name to use when downloading the restore, used with `\"delivery.methodName\" : \"HTTP\"`.",
            "readOnly": true
          },
          "authValue": {
            "type": "string",
            "description": "Header value to use when downloading the restore, used with `\"delivery.methodName\" : \"HTTP\"`.",
            "readOnly": true
          },
          "expirationHours": {
            "type": "number",
            "description": "Number of hours after the restore job completes that indicates when the Uniform Resource Locator (URL) for the snapshot download file expires. The resource returns this parameter when `\"delivery.methodName\" : \"HTTP\"`.",
            "minimum": 1
          },
          "expires": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the Uniform Resource Locator (URL) for the snapshot download file expires. This parameter expresses its value in the ISO 8601 timestamp format in UTC. The resource returns this parameter when `\"delivery.methodName\" : \"HTTP\"`.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "maxDownloads": {
            "type": "number",
            "description": "Positive integer that indicates how many times you can use the Uniform Resource Locator (URL) for the snapshot download file. The resource returns this parameter when `\"delivery.methodName\" : \"HTTP\"`.",
            "minimum": 1
          },
          "methodName": {
            "type": "string",
            "description": "Human-readable label that identifies the means for delivering the data. If you set `\"delivery.methodName\" : \"AUTOMATED_RESTORE\"`, you must also set: **delivery.targetGroupId** and **delivery.targetClusterName** or **delivery.targetClusterId**. The response returns `\"delivery.methodName\" : \"HTTP\"` as an automated restore uses HyperText Transport Protocol (HTTP) to deliver the restore job to the target host.",
            "enum": [
              "AUTOMATED_RESTORE",
              "HTTP",
              "QUERY"
            ]
          },
          "statusName": {
            "type": "string",
            "description": "State of the downloadable snapshot file when MongoDB Cloud received this request.",
            "enum": [
              "EXPIRED",
              "FAILED",
              "INTERRUPTED",
              "IN_PROGRESS",
              "MAX_DOWNLOADS_EXCEEDED",
              "NOT_STARTED",
              "READY"
            ],
            "readOnly": true
          },
          "targetClusterId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the target cluster. Use the **clusterId** returned in the response body of the **Get All Snapshots** and **Get a Snapshot** endpoints. This parameter applies when `\"delivery.methodName\" : \"AUTOMATED_RESTORE\"`.\n\n If the target cluster doesn't have backup enabled, two resources return parameters with empty values:\n\n- **Get All Snapshots** endpoint returns an empty results array without **clusterId** elements\n- **Get a Snapshot** endpoint doesn't return a **clusterId** parameter.\n\nTo return a response with the **clusterId** parameter, either use the **delivery.targetClusterName** parameter or enable backup on the target cluster.",
            "example": "aff8ccf466da6f87c4b0736b",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$"
          },
          "targetClusterName": {
            "type": "string",
            "description": "Human-readable label that identifies the target cluster. Use the **clusterName** returned in the response body of the **Get All Snapshots** and **Get a Snapshot** endpoints.  This parameter applies when `\"delivery.methodName\" : \"AUTOMATED_RESTORE\"`.\n\nIf the target cluster doesn't have backup enabled, two resources return parameters with empty values:\n\n- **Get All Snapshots** endpoint returns an empty results array without **clusterId** elements\n- **Get a Snapshot** endpoint doesn't return a **clusterId** parameter.\n\nTo return a response with the **clusterId** parameter, either use the **delivery.targetClusterName** parameter or enable backup on the target cluster.",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$"
          },
          "targetGroupId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that contains the destination cluster for the restore job. The resource returns this parameter when `\"delivery.methodName\" : \"AUTOMATED_RESTORE\"`.",
            "example": "ca4d8a18b96b317422974eec",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$"
          },
          "url": {
            "type": "string",
            "deprecated": true,
            "description": "Uniform Resource Locator (URL) from which you can download the restored snapshot data. Url includes the verification key. The resource returns this parameter when `\"delivery.methodName\" : \"HTTP\"`.",
            "readOnly": true
          },
          "urlV2": {
            "type": "string",
            "description": "Uniform Resource Locator (URL) from which you can download the restored snapshot data. This should be preferred over **url**. The verification key must be sent as an HTTP header. The resource returns this parameter when `\"delivery.methodName\" : \"HTTP\"`.",
            "readOnly": true
          }
        },
        "required": [
          "methodName"
        ],
        "title": "Restore Snapshot Delivery Metadata"
      },
      "ApiRestoreJobFileHashView": {
        "type": "object",
        "description": "Key and value pair that map one restore file to one hashed checksum. This parameter applies after you download the corresponding **delivery.url**.",
        "properties": {
          "fileName": {
            "type": "string",
            "description": "Human-readable label that identifies the hashed file.",
            "readOnly": true
          },
          "hash": {
            "type": "string",
            "description": "Hashed checksum that maps to the restore file.",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "typeName": {
            "type": "string",
            "description": "Human-readable label that identifies the hashing algorithm used to compute the hash value.",
            "enum": [
              "SHA1"
            ],
            "readOnly": true
          }
        },
        "readOnly": true,
        "required": [
          "links"
        ]
      },
      "ApiRestoreJobView": {
        "type": "object",
        "properties": {
          "batchId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the batch to which this restore job belongs. This parameter exists only for a sharded cluster restore.",
            "example": "871c3da1c32654c807e5d480",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "checkpointId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the sharded cluster checkpoint. The checkpoint represents the point in time back to which you want to restore you data. This parameter applies when `\"delivery.methodName\" : \"AUTOMATED_RESTORE\"`. Use this parameter with sharded clusters only.\n\n- If you set **checkpointId**, you can't set **oplogInc**, **oplogTs**, **snapshotId**, or **pointInTimeUTCMillis**.\n- If you provide this parameter, this endpoint restores all data up to this checkpoint to the database you specify in the **delivery** object.",
            "example": "866164af7f46083e4f3a964b",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "writeOnly": true
          },
          "clusterId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the cluster with the snapshot you want to return. This parameter returns for restore clusters.",
            "example": "5faec72692cee15b51eb22a4",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "clusterName": {
            "type": "string",
            "description": "Human-readable label that identifies the cluster containing the snapshots you want to retrieve.",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when someone requested this restore job. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "delivery": {
            "$ref": "#/components/schemas/ApiRestoreJobDeliveryView"
          },
          "encryptionEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone encrypted the data in the restored snapshot.",
            "readOnly": true
          },
          "groupId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that owns the snapshots.",
            "example": "32b6e34b3d91647abb20e7b8",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "hashes": {
            "type": "array",
            "description": "List that contains documents mapping each restore file to a hashed checksum. This parameter applies after you download the corresponding **delivery.url**. If `\"methodName\" : \"HTTP\"`, this list contains one object that represents the hash of the **.tar.gz** file.",
            "items": {
              "$ref": "#/components/schemas/ApiRestoreJobFileHashView"
            },
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the restore job.",
            "example": "e7cb93f480f357b5139ccf37",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "masterKeyUUID": {
            "type": "string",
            "format": "uuid",
            "description": "Universally Unique Identifier (UUID) that identifies the Key Management Interoperability (KMIP) master key used to encrypt the snapshot data. This parameter applies only when `\"encryptionEnabled\" : \"true\"`.",
            "readOnly": true
          },
          "oplogInc": {
            "type": "number",
            "description": "Thirty-two-bit incrementing ordinal that represents operations within a given second. When paired with **oplogTs**, this represents the point in time to which MongoDB Cloud restores your data. This parameter applies when `\"delivery.methodName\" : \"AUTOMATED_RESTORE\"`.\n\n- If you set **oplogInc**, you must set **oplogTs**, and can't set **checkpointId**, **snapshotId**, or **pointInTimeUTCMillis**.\n- If you provide this parameter, this endpoint restores all data up to and including this Oplog timestamp to the database you specified in the **delivery** object.",
            "minimum": 1,
            "writeOnly": true
          },
          "oplogTs": {
            "type": "string",
            "description": "Date and time from which you want to restore this snapshot. This parameter expresses its value in ISO 8601 format in UTC. This represents the first part of an Oplog timestamp. When paired with **oplogInc**, they represent the last database operation to which you want to restore your data. This parameter applies when `\"delivery.methodName\" : \"AUTOMATED_RESTORE\"`. Run a query against **local.oplog.rs** on your replica set to find the desired timestamp.\n\n- If you set **oplogTs**, you must set **oplogInc**, and you can't set **checkpointId**, **snapshotId**, or **pointInTimeUTCMillis**.\n- If you provide this parameter, this endpoint restores all data up to and including this Oplog timestamp to the database you specified in the **delivery** object.",
            "pattern": "^(?:[1-9]\\\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d(?:\\\\.\\\\d{1,9})?(?:Z|[+-][01]\\\\d:[0-5]\\\\d)$",
            "writeOnly": true
          },
          "pointInTimeUTCMillis": {
            "type": "number",
            "description": "Timestamp from which you want to restore this snapshot. This parameter expresses its value in the number of milliseconds elapsed since the [UNIX epoch](https://en.wikipedia.org/wiki/Unix_time). This timestamp must fall within the last 24 hours of the current time. This parameter applies when `\"delivery.methodName\" : \"AUTOMATED_RESTORE\"`.\n\n- If you provide this parameter, this endpoint restores all data up to this point in time to the database you specified in the **delivery** object.\n- If you set **pointInTimeUTCMillis**, you can't set **oplogInc**, **oplogTs**, **snapshotId**, or **checkpointId**.",
            "minLength": 12,
            "minimum": 1199145600000,
            "writeOnly": true
          },
          "snapshotId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the snapshot to restore. If you set **snapshotId**, you can't set **oplogInc**, **oplogTs**, **pointInTimeUTCMillis**, or **checkpointId**.",
            "example": "78e18e587716102f711a5bca",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$"
          },
          "statusName": {
            "type": "string",
            "description": "Human-readable label that identifies the status of the downloadable file at the time of the request.",
            "enum": [
              "IN_PROGRESS",
              "BROKEN",
              "KILLED",
              "FINISHED"
            ],
            "readOnly": true
          },
          "timestamp": {
            "$ref": "#/components/schemas/ApiBSONTimestampView"
          }
        },
        "required": [
          "delivery",
          "links"
        ]
      },
      "ApiRoleAssignmentView": {
        "type": "object",
        "description": "MongoDB Cloud user's roles and the corresponding organization or project to which that role applies. Each role can apply to one organization or one project but not both.",
        "properties": {
          "groupId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project to which this role belongs. You can set a value for this parameter or **orgId** but not both in the same request.",
            "example": "32b6e34b3d91647abb20e7b8",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$"
          },
          "orgId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization to which this role belongs. You can set a value for this parameter or **groupId** but not both in the same request",
            "example": "4888442a3354817a7320eb61",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$"
          },
          "roleName": {
            "type": "string",
            "description": "Human-readable label that identifies the collection of privileges that MongoDB Cloud grants a specific API key, MongoDB Cloud user, or MongoDB Cloud team. These roles include organization- and project-level roles.\n\nOrganization Roles\n\n* ORG_OWNER\n* ORG_MEMBER\n* ORG_GROUP_CREATOR\n* ORG_BILLING_ADMIN\n* ORG_READ_ONLY\n\nProject Roles\n\n* GROUP_CLUSTER_MANAGER\n* GROUP_DATA_ACCESS_ADMIN\n* GROUP_DATA_ACCESS_READ_ONLY\n* GROUP_DATA_ACCESS_READ_WRITE\n* GROUP_OWNER\n* GROUP_READ_ONLY\n\n",
            "enum": [
              "ORG_OWNER",
              "ORG_MEMBER",
              "ORG_GROUP_CREATOR",
              "ORG_BILLING_ADMIN",
              "ORG_READ_ONLY",
              "GROUP_CLUSTER_MANAGER",
              "GROUP_DATA_ACCESS_ADMIN",
              "GROUP_DATA_ACCESS_READ_ONLY",
              "GROUP_DATA_ACCESS_READ_WRITE",
              "GROUP_OWNER",
              "GROUP_READ_ONLY"
            ]
          }
        },
        "title": "Role Assignment"
      },
      "ApiSlackView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiIntegrationView"
          },
          {
            "type": "object",
            "properties": {
              "apiToken": {
                "type": "string",
                "description": "Key that allows MongoDB Cloud to access your Slack account."
              },
              "channelName": {
                "type": "string",
                "description": "Name of the Slack channel to which MongoDB Cloud sends alert notifications.",
                "maxLength": 80,
                "minLength": 1,
                "nullable": true
              },
              "teamName": {
                "type": "string",
                "description": "Human-readable label that identifies your Slack team. Set this parameter when you configure a legacy Slack integration."
              }
            }
          }
        ],
        "description": "Details to integrate one Slack account with one MongoDB Cloud project.",
        "required": [
          "apiToken",
          "channelName"
        ],
        "title": "SLACK"
      },
      "ApiSnapshotPartView": {
        "type": "object",
        "description": "Characteristics that identify this snapshot.",
        "properties": {
          "clusterId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the cluster with the snapshots you want to return.",
            "example": "5faec72692cee15b51eb22a4",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "compressionSetting": {
            "type": "string",
            "description": "Human-readable label that identifies the method of compression for the snapshot.",
            "enum": [
              "NONE",
              "GZIP"
            ],
            "readOnly": true
          },
          "dataSizeBytes": {
            "type": "number",
            "description": "Total size of the data stored on each node in the cluster. This parameter expresses its value in bytes.",
            "readOnly": true
          },
          "encryptionEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone encrypted this snapshot.",
            "readOnly": true
          },
          "fileSizeBytes": {
            "type": "number",
            "description": "Number that indicates the total size of the data files in bytes.",
            "readOnly": true
          },
          "masterKeyUUID": {
            "type": "string",
            "format": "uuid",
            "description": "Unique string that identifies the Key Management Interoperability (KMIP) master key used to encrypt the snapshot data. The resource returns this parameter when `\"parts.encryptionEnabled\" : true`.",
            "readOnly": true
          },
          "mongodVersion": {
            "type": "string",
            "description": "Number that indicates the version of MongoDB that the replica set primary ran when MongoDB Cloud created the snapshot.",
            "pattern": "([\\d]+\\.[\\d]+\\.[\\d]+)",
            "readOnly": true
          },
          "replicaSetName": {
            "type": "string",
            "description": "Human-readable label that identifies the replica set.",
            "readOnly": true
          },
          "storageSizeBytes": {
            "type": "number",
            "description": "Number that indicates the total size of space allocated for document storage.",
            "readOnly": true
          },
          "typeName": {
            "type": "string",
            "description": "Human-readable label that identifies the type of server from which MongoDB Cloud took this snapshot.",
            "enum": [
              "REPLICA_SET",
              "CONFIG_SERVER",
              "CONFIG_SERVER_REPLICA_SET"
            ],
            "readOnly": true
          }
        },
        "readOnly": true,
        "title": "Snapshot Components"
      },
      "ApiSnapshotView": {
        "type": "object",
        "properties": {
          "clusterId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the cluster with the snapshots you want to return.",
            "example": "5faec72692cee15b51eb22a4",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "complete": {
            "type": "boolean",
            "description": "Flag that indicates whether the snapshot exists. This flag returns `false` while MongoDB Cloud creates the snapshot.",
            "readOnly": true
          },
          "created": {
            "$ref": "#/components/schemas/ApiBSONTimestampView"
          },
          "doNotDelete": {
            "type": "boolean",
            "description": "Flag that indicates whether someone can delete this snapshot. You can't set `\"doNotDelete\" : true` and set a timestamp for **expires** in the same request."
          },
          "expires": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when MongoDB Cloud deletes the snapshot. If `\"doNotDelete\" : true`, MongoDB Cloud removes any value set for this parameter.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$"
          },
          "groupId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project that owns the snapshots.",
            "example": "32b6e34b3d91647abb20e7b8",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the snapshot.",
            "example": "78e18e587716102f711a5bca",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "lastOplogAppliedTimestamp": {
            "$ref": "#/components/schemas/ApiBSONTimestampView"
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "parts": {
            "type": "array",
            "description": "Metadata that describes the complete snapshot.\n\n- For a replica set, this array contains a single document.\n- For a sharded cluster, this array contains one document for each shard plus one document for the config host.",
            "items": {
              "$ref": "#/components/schemas/ApiSnapshotPartView"
            },
            "readOnly": true
          }
        },
        "required": [
          "links"
        ]
      },
      "ApiSystemStatusView": {
        "type": "object",
        "properties": {
          "apiKey": {
            "$ref": "#/components/schemas/ApiKeyView"
          },
          "appName": {
            "type": "string",
            "description": "Human-readable label that identifies the service from which you requested this response.",
            "enum": [
              "MongoDB Atlas",
              "MongoDB Cloud Manager",
              "MongoDB Ops Manager"
            ]
          },
          "build": {
            "type": "string",
            "description": "Unique 40-hexadecimal digit hash that identifies the latest git commit merged for this application.",
            "example": "83be55e140f493c88e7f578aae96548dd881587b",
            "maxLength": 40,
            "minLength": 40,
            "pattern": "^([a-f0-9]{40})$",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "throttling": {
            "type": "boolean",
            "description": "Flag that indicates whether someone enabled throttling on this service."
          }
        },
        "required": [
          "apiKey",
          "appName",
          "build",
          "links",
          "throttling"
        ]
      },
      "ApiTeamRoleView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "roleNames": {
            "type": "array",
            "description": "One or more organization- or project-level roles to assign to the MongoDB Cloud user.",
            "items": {
              "type": "string",
              "enum": [
                "GROUP_CLUSTER_MANAGER",
                "GROUP_DATA_ACCESS_ADMIN",
                "GROUP_DATA_ACCESS_READ_ONLY",
                "GROUP_DATA_ACCESS_READ_WRITE",
                "GROUP_OWNER",
                "GROUP_READ_ONLY"
              ]
            },
            "uniqueItems": true
          },
          "teamId": {
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the team.",
            "example": "e254e4ade2206f4520d4107d",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$"
          }
        },
        "required": [
          "links"
        ]
      },
      "ApiTeamView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this team.",
            "example": "e254e4ade2206f4520d4107d",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies the team."
          },
          "usernames": {
            "type": "array",
            "description": "List that contains the MongoDB Cloud users in this team.",
            "items": {
              "type": "string",
              "description": "List that contains email addresses that identify MongoDB Cloud users to in this team.",
              "pattern": "^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$"
            }
          }
        },
        "required": [
          "id",
          "links",
          "name",
          "usernames"
        ]
      },
      "ApiUserAccessListView": {
        "type": "object",
        "properties": {
          "cidrBlock": {
            "type": "string",
            "description": "Range of network addresses that you want to add to the access list for the API key. This parameter requires the range to be expressed in classless inter-domain routing (CIDR) notation of Internet Protocol version 4 or version 6 addresses. You can set a value for this parameter or **ipAddress** but not both in the same request.",
            "example": "203.0.113.0/24",
            "pattern": "^((([0-9]{1,3}\\.){3}[0-9]{1,3})|([\\:]{0,2}([0-9a-f]{1,4}\\:){0,7}[0-9a-f]{1,4}[\\:]{0,2}))((%2[fF]|\\/)[0-9]{1,3})+$"
          },
          "count": {
            "type": "number",
            "description": "Total number of requests that have originated from the Internet Protocol (IP) address given as the value of the *lastUsedAddress* parameter.",
            "minimum": 1,
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when someone added the network addresses to the specified API access list. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "ipAddress": {
            "type": "string",
            "description": "Network address that you want to add to the access list for the API key. This parameter requires the address to be expressed as one Internet Protocol version 4 or version 6 address. You can set a value for this parameter or **cidrBlock** but not both in the same request.",
            "example": "203.0.113.10",
            "pattern": "^((([0-9]{1,3}\\.){3}[0-9]{1,3})|([\\:]{0,2}([0-9a-f]{1,4}\\:){0,7}[0-9a-f]{1,4}[\\:]{0,2}))$"
          },
          "lastUsed": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when MongoDB Cloud received the most recent request that originated from this Internet Protocol version 4 or version 6 address. The resource returns this parameter when at least one request has originated from this IP address. MongoDB Cloud updates this parameter each time a client accesses the permitted resource. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "lastUsedAddress": {
            "type": "string",
            "description": "Network address that issued the most recent request to the API. This parameter requires the address to be expressed as one Internet Protocol version 4 or version 6 address. The resource returns this parameter after this IP address made at least one request.",
            "example": "203.0.113.10",
            "pattern": "^((([0-9]{1,3}\\.){3}[0-9]{1,3})|([\\:]{0,2}([0-9a-f]{1,4}\\:){0,7}[0-9a-f]{1,4}[\\:]{0,2}))$",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          }
        },
        "required": [
          "links"
        ]
      },
      "ApiUserRoleAssignment": {
        "type": "object",
        "properties": {
          "apiUserId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization API key.",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "roles": {
            "type": "array",
            "description": "List of roles to grant this API key. If you provide this list, provide a minimum of one role and ensure each role applies to this project.",
            "items": {
              "type": "string",
              "enum": [
                "GROUP_CLUSTER_MANAGER",
                "GROUP_DATA_ACCESS_ADMIN",
                "GROUP_DATA_ACCESS_READ_ONLY",
                "GROUP_DATA_ACCESS_READ_WRITE",
                "GROUP_SEARCH_INDEX_EDITOR",
                "GROUP_OWNER",
                "GROUP_READ_ONLY",
                "GLOBAL_EXPERIMENT_ASSIGNMENT_USER"
              ]
            }
          }
        }
      },
      "ApiVictorOpsView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiIntegrationView"
          },
          {
            "type": "object",
            "properties": {
              "apiKey": {
                "type": "string",
                "description": "Key that allows MongoDB Cloud to access your Splunk On-Call account."
              },
              "routingKey": {
                "type": "string",
                "description": "Routing key associated with your Splunk On-Call account."
              }
            }
          }
        ],
        "description": "Details to integrate one Splunk On-Call account with one MongoDB Cloud project.",
        "required": [
          "apiKey"
        ],
        "title": "VICTOR_OPS"
      },
      "ApiWebhookView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiIntegrationView"
          },
          {
            "type": "object",
            "properties": {
              "secret": {
                "type": "string",
                "description": "Parameter returned if someone configure this webhook with a secret."
              },
              "url": {
                "type": "string",
                "description": "Endpoint web address to which MongoDB Cloud sends notifications."
              }
            }
          }
        ],
        "description": "Details to integrate one webhook with one MongoDB Cloud project.",
        "required": [
          "url"
        ],
        "title": "WEBHOOK"
      },
      "AutoExportPolicyView": {
        "type": "object",
        "description": "Policy for automatically exporting cloud backup snapshots.",
        "properties": {
          "exportBucketId": {
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the AWS Bucket.",
            "example": "d705ef7f03974e8363ffee5d",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$"
          },
          "frequencyType": {
            "type": "string",
            "description": "Human-readable label that indicates the rate at which the export policy item occurs.",
            "enum": [
              "monthly"
            ]
          }
        },
        "title": "export"
      },
      "AvailableDeploymentView": {
        "type": "object",
        "description": "Deployments that can be migrated to MongoDB Atlas.",
        "properties": {
          "agentVersion": {
            "type": "string",
            "description": "Version of MongoDB Agent that monitors/manages the cluster.",
            "readOnly": true
          },
          "clusterId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the cluster.",
            "example": "5faec72692cee15b51eb22a4",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "dbSizeBytes": {
            "type": "integer",
            "format": "int64",
            "description": "Size of this database on disk at the time of the request expressed in bytes.",
            "example": 8192,
            "readOnly": true
          },
          "featureCompatibilityVersion": {
            "type": "string",
            "description": "Version of MongoDB [features](https://docs.mongodb.com/manual/reference/command/setFeatureCompatibilityVersion) that this cluster supports.",
            "readOnly": true
          },
          "managed": {
            "type": "boolean",
            "description": "Flag that indicates whether Automation manages this cluster.",
            "readOnly": true
          },
          "mongoDBVersion": {
            "type": "string",
            "description": "Version of MongoDB that this cluster runs.",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies this cluster.",
            "example": "Project X sharded cluster",
            "readOnly": true
          },
          "oplogSizeMB": {
            "type": "integer",
            "format": "int32",
            "description": "Size of the Oplog on disk at the time of the request expressed in MB.",
            "example": 3,
            "readOnly": true
          },
          "sharded": {
            "type": "boolean",
            "description": "Flag that indicates whether someone configured this cluster as a sharded cluster.\n\n- If `true`, this cluster serves as a sharded cluster.\n- If `false`, this cluster serves as a replica set.",
            "readOnly": true
          },
          "shardsSize": {
            "type": "integer",
            "format": "int32",
            "description": "Number of shards that comprise this cluster.",
            "example": 3,
            "readOnly": true
          },
          "tlsEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone enabled TLS for this cluster.",
            "readOnly": true
          }
        },
        "required": [
          "featureCompatibilityVersion",
          "managed",
          "mongoDBVersion",
          "name",
          "sharded",
          "tlsEnabled"
        ],
        "title": "Available Clusters"
      },
      "AvailableProjectView": {
        "type": "object",
        "properties": {
          "deployments": {
            "type": "array",
            "description": "List of clusters that can be migrated to MongoDB Cloud.",
            "items": {
              "$ref": "#/components/schemas/AvailableDeploymentView"
            }
          },
          "migrationHosts": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Hostname of MongoDB Agent that you configured to perform a migration."
            }
          },
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies this project.",
            "maxLength": 64,
            "minLength": 1,
            "readOnly": true
          },
          "projectId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project to be migrated.",
            "example": "32b6e34b3d91647abb20e7b8",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          }
        },
        "required": [
          "deployments",
          "migrationHosts",
          "name",
          "projectId"
        ]
      },
      "BSONTimestamp": {
        "type": "object",
        "description": "Date and time from which someone requested to restore data using this snapshot. This parameter expresses its value as a timestamp in Binary JavaScript Object Notation (BSON).",
        "readOnly": true
      },
      "BasicBSONList": {
        "type": "array",
        "description": "List that contains the search criteria that the query uses. To use the values in key-value pairs in these predicates requires **Project Data Access Read Only** permissions or greater. Otherwise, MongoDB Cloud redacts these values.",
        "items": {
          "type": "object",
          "description": "List that contains the search criteria that the query uses. To use the values in key-value pairs in these predicates requires **Project Data Access Read Only** permissions or greater. Otherwise, MongoDB Cloud redacts these values.",
          "readOnly": true
        },
        "readOnly": true
      },
      "BasicDBObject": {
        "$ref": "#/components/schemas/ApiAtlasFTSMappingsViewManual"
      },
      "CUSTOM": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/CriteriaView"
          },
          {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "MongoDB find query that selects documents to archive. The specified query follows the syntax of the `db.collection.find(query)` command. This query can't use the empty document (`{}`) to return all documents. Set this parameter when **\"criteria.type\" : \"CUSTOM\"**."
              }
            }
          }
        ],
        "description": "**CUSTOM criteria.type**.",
        "required": [
          "query"
        ],
        "title": "Archival Criteria"
      },
      "ClusterView": {
        "type": "object",
        "description": "Settings that describe the clusters in each project that the API key is authorized to view.",
        "properties": {
          "alertCount": {
            "type": "number",
            "description": "Whole number that indicates the quantity of alerts open on the cluster.",
            "readOnly": true
          },
          "authEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether authentication is required to access the nodes in this cluster.",
            "readOnly": true
          },
          "availability": {
            "type": "string",
            "description": "Term that expresses how many nodes of the cluster can be accessed when MongoDB Cloud receives this request. This parameter returns `available` when all nodes are accessible, `warning` only when some nodes in the cluster can be accessed, `unavailable` when the cluster can't be accessed, or `dead` when the cluster has been deactivated.",
            "enum": [
              "available",
              "dead",
              "unavailable",
              "warning"
            ],
            "readOnly": true
          },
          "backupEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether the cluster can perform backups. If set to `true`, the cluster can perform backups. You must set this value to `true` for NVMe clusters. Backup uses Cloud Backups for dedicated clusters and Shared Cluster Backups for tenant clusters. If set to `false`, the cluster doesn't use MongoDB Cloud backups.",
            "readOnly": true
          },
          "clusterId": {
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the cluster.",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "dataSizeBytes": {
            "type": "number",
            "description": "Total size of the data stored on each node in the cluster. The resource expresses this value in bytes.",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies the cluster.",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]){0,21}(?<!-)([\\w]{0,42}))$",
            "readOnly": true
          },
          "nodeCount": {
            "type": "number",
            "description": "Whole number that indicates the quantity of nodes that comprise the cluster.",
            "readOnly": true
          },
          "sslEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether TLS authentication is required to access the nodes in this cluster.",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "description": "Human-readable label that indicates the cluster type.",
            "enum": [
              "REPLICA_SET",
              "SHARDED_CLUSTER"
            ],
            "readOnly": true
          },
          "versions": {
            "type": "array",
            "description": "List that contains the versions of MongoDB that each node in the cluster runs.",
            "items": {
              "type": "number",
              "description": "List that contains the versions of MongoDB that each node in the cluster runs.",
              "readOnly": true
            },
            "readOnly": true
          }
        },
        "readOnly": true
      },
      "ConnectedOrgConfigView": {
        "type": "object",
        "properties": {
          "domainAllowList": {
            "type": "array",
            "description": "Approved domains that restrict users who can join the organization based on their email address.",
            "items": {
              "type": "string"
            },
            "uniqueItems": true
          },
          "domainRestrictionEnabled": {
            "type": "boolean",
            "description": "Value that indicates whether domain restriction is enabled for this connected org."
          },
          "identityProviderId": {
            "type": "string",
            "description": "Unique 20-hexadecimal digit string that identifies the identity provider that this connected org config is associated with.",
            "maxLength": 20,
            "minLength": 20,
            "pattern": "^([a-f0-9]{20})$"
          },
          "orgId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the connected organization configuration.",
            "example": "4888442a3354817a7320eb61",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "postAuthRoleGrants": {
            "type": "array",
            "description": "Atlas roles that are granted to a user in this organization after authenticating.",
            "items": {
              "type": "string",
              "description": "Organization role the user has in Atlas.",
              "enum": [
                "GLOBAL_AUTOMATION_ADMIN",
                "GLOBAL_BACKUP_ADMIN",
                "GLOBAL_METERING_USER",
                "GLOBAL_METRICS_INTERNAL_USER",
                "GLOBAL_MONITORING_ADMIN",
                "GLOBAL_OWNER",
                "GLOBAL_READ_ONLY",
                "GLOBAL_USER_ADMIN",
                "GLOBAL_USER_READ_ONLY",
                "GLOBAL_ACCOUNT_SUSPENSION_ADMIN",
                "GLOBAL_BILLING_ADMIN",
                "GLOBAL_LEGAL_ADMIN",
                "GLOBAL_FEATURE_FLAG_ADMIN",
                "GLOBAL_ATLAS_TSE",
                "GLOBAL_ATLAS_OPERATOR",
                "GLOBAL_ATLAS_ADMIN",
                "GLOBAL_STITCH_ADMIN",
                "GLOBAL_CHARTS_ADMIN",
                "GLOBAL_EXPERIMENT_ASSIGNMENT_USER",
                "GLOBAL_STITCH_INTERNAL_ADMIN",
                "GLOBAL_SECURITY_ADMIN",
                "GLOBAL_QUERY_ENGINE_INTERNAL_ADMIN",
                "GLOBAL_PROACTIVE_SUPPORT_ADMIN",
                "GLOBAL_INFRASTRUCTURE_INTERNAL_ADMIN",
                "GLOBAL_SALESFORCE_ADMIN",
                "GLOBAL_SALESFORCE_READ_ONLY",
                "GLOBAL_APP_SERVICES_CLUSTER_DEBUG_DATA_ACCESS",
                "ORG_MEMBER",
                "ORG_READ_ONLY",
                "ORG_BILLING_ADMIN",
                "ORG_GROUP_CREATOR",
                "ORG_OWNER",
                "GROUP_AUTOMATION_ADMIN",
                "GROUP_BACKUP_ADMIN",
                "GROUP_MONITORING_ADMIN",
                "GROUP_OWNER",
                "GROUP_READ_ONLY",
                "GROUP_USER_ADMIN",
                "GROUP_BILLING_ADMIN",
                "GROUP_DATA_ACCESS_ADMIN",
                "GROUP_DATA_ACCESS_READ_ONLY",
                "GROUP_DATA_ACCESS_READ_WRITE",
                "GROUP_CHARTS_ADMIN",
                "GROUP_CLUSTER_MANAGER",
                "GROUP_SEARCH_INDEX_EDITOR"
              ]
            },
            "uniqueItems": true
          },
          "roleMappings": {
            "type": "array",
            "description": "Role mappings that are configured in this organization.",
            "items": {
              "$ref": "#/components/schemas/RoleMappingView"
            },
            "uniqueItems": true
          },
          "userConflicts": {
            "type": "array",
            "description": "List that contains the users who have an email address that doesn't match any domain on the allowed list.",
            "items": {
              "$ref": "#/components/schemas/FederatedUserView"
            }
          }
        },
        "required": [
          "domainRestrictionEnabled",
          "identityProviderId",
          "orgId"
        ]
      },
      "CriteriaView": {
        "type": "object",
        "description": "Rules by which MongoDB MongoDB Cloud archives data.\n\nUse the **criteria.type** field to choose how MongoDB Cloud selects data to archive. Choose data using the age of the data or a MongoDB query.\n**\"criteria.type\": \"DATE\"** selects documents to archive based on a date.\n**\"criteria.type\": \"CUSTOM\"** selects documents to archive based on a custom JSON query. MongoDB Cloud doesn't support **\"criteria.type\": \"CUSTOM\"** when **\"collectionType\": \"TIMESERIES\"**.",
        "discriminator": {
          "mapping": {
            "CUSTOM": "#/components/schemas/CUSTOM",
            "DATE": "#/components/schemas/DATE"
          },
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "type": "string",
            "description": "Means by which MongoDB Cloud selects data to archive. Data can be chosen using the age of the data or a MongoDB query.\n**DATE** selects documents to archive based on a date.\n**CUSTOM** selects documents to archive based on a custom JSON query. MongoDB Cloud doesn't support **CUSTOM** when `\"collectionType\": \"TIMESERIES\"`.",
            "enum": [
              "DATE",
              "CUSTOM"
            ]
          }
        }
      },
      "DATE": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/CriteriaView"
          },
          {
            "type": "object",
            "properties": {
              "dateField": {
                "type": "string",
                "description": "Indexed database parameter that stores the date that determines when data moves to the online archive. MongoDB Cloud archives the data when the current date exceeds the date in this database parameter plus the number of days specified through the **expireAfterDays** parameter. Set this parameter when you set `\"criteria.type\" : \"DATE\"`."
              },
              "dateFormat": {
                "type": "string",
                "default": "ISODATE",
                "description": "Syntax used to write the date after which data moves to the online archive. Date can be expressed as ISO 8601 or Epoch timestamps. The Epoch timestamp can be expressed as nanoseconds, milliseconds, or seconds. Set this parameter when **\"criteria.type\" : \"DATE\"**.\nYou must set **\"criteria.type\" : \"DATE\"** if **\"collectionType\": \"TIMESERIES\"**.",
                "enum": [
                  "ISODATE",
                  "EPOCH_SECONDS",
                  "EPOCH_MILLIS",
                  "EPOCH_NANOSECONDS"
                ]
              },
              "expireAfterDays": {
                "type": "integer",
                "format": "int32",
                "description": "Number of days after the value in the **criteria.dateField** when MongoDB Cloud archives data in the specified cluster. Set this parameter when you set **\"criteria.type\" : \"DATE\"**."
              }
            }
          }
        ],
        "description": "**DATE criteria.type**.",
        "title": "Archival Criteria"
      },
      "DailyScheduleView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiAtlasOnlineArchiveScheduleView"
          },
          {
            "type": "object",
            "properties": {
              "endHour": {
                "type": "integer",
                "format": "int32",
                "description": "Hour of the day when the scheduled window to run one online archive ends.",
                "maximum": 23,
                "minimum": 0
              },
              "endMinute": {
                "type": "integer",
                "format": "int32",
                "description": "Minute of the hour when the scheduled window to run one online archive ends.",
                "maximum": 59,
                "minimum": 0
              },
              "startHour": {
                "type": "integer",
                "format": "int32",
                "description": "Hour of the day when the when the scheduled window to run one online archive starts.",
                "maximum": 23,
                "minimum": 0
              },
              "startMinute": {
                "type": "integer",
                "format": "int32",
                "description": "Minute of the hour when the scheduled window to run one online archive starts.",
                "maximum": 59,
                "minimum": 0
              }
            }
          }
        ]
      },
      "DefaultScheduleView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiAtlasOnlineArchiveScheduleView"
          }
        ]
      },
      "Destination": {
        "type": "object",
        "description": "Document that describes the destination of the migration.",
        "properties": {
          "clusterName": {
            "type": "string",
            "description": "Label that identifies the destination cluster."
          },
          "groupId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the destination project.",
            "example": "9b43a5b329223c3a1591a678",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$"
          },
          "vpcPeeringEnabled": {
            "type": "boolean",
            "default": false,
            "description": "Flag that indicates if you want to use VPC peering between the migration host and the target cluster."
          }
        },
        "required": [
          "clusterName",
          "groupId",
          "vpcPeeringEnabled"
        ]
      },
      "ENCRYPTION_AT_REST": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/featureUsages"
          }
        ],
        "description": "Details that describe the Key Management Service (KMS) linked to this Amazon Web Services (AWS) Identity and Access Management (IAM) role."
      },
      "EXPORT_SNAPSHOT": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/featureUsages"
          },
          {
            "type": "object",
            "properties": {
              "featureId": {
                "$ref": "#/components/schemas/ApiAtlasCloudProviderAccessFeatureUsageExportSnapshotFeatureIdView"
              }
            }
          }
        ],
        "description": "Details that describe the Amazon Web Services (AWS) Simple Storage Service (S3) export buckets linked to this AWS Identity and Access Management (IAM) role."
      },
      "FederatedUserView": {
        "type": "object",
        "description": "MongoDB Cloud user linked to this federated authentication.",
        "properties": {
          "emailAddress": {
            "type": "string",
            "format": "email",
            "description": "Email address of the MongoDB Cloud user linked to the federated organization.",
            "pattern": "^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$"
          },
          "federationSettingsId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the federation to which this MongoDB Cloud user belongs.",
            "example": "55fa922fb343282757d9554e",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$"
          },
          "firstName": {
            "type": "string",
            "description": "First or given name that belongs to the MongoDB Cloud user."
          },
          "lastName": {
            "type": "string",
            "description": "Last name, family name, or surname that belongs to the MongoDB Cloud user."
          },
          "userId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this user.",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          }
        },
        "required": [
          "emailAddress",
          "federationSettingsId",
          "firstName",
          "lastName"
        ],
        "title": "Federated User"
      },
      "GeoShardingView": {
        "type": "object",
        "properties": {
          "customZoneMapping": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ObjectId"
            },
            "description": "List that contains comma-separated key value pairs to map zones to geographic regions. These pairs map an ISO 3166-1a2 location code, and ISO 3166-2 subdivision code when possible, to a unique 24-hexadecimal string that identifies the custom zone. MongoDB Cloud maps the ISO 3166-1a2 code to the nearest geographical zone by default. This parameter returns an empty object if no custom zones exist.",
            "readOnly": true
          },
          "managedNamespaces": {
            "type": "array",
            "description": "List that contains a namespace for a Global Cluster. MongoDB Cloud manages this cluster.",
            "items": {
              "$ref": "#/components/schemas/ManagedNamespaceView"
            },
            "readOnly": true
          }
        }
      },
      "IdentityProviderUpdate": {
        "type": "object",
        "properties": {
          "associatedDomains": {
            "type": "array",
            "description": "List that contains the domains associated with the identity provider.",
            "items": {
              "type": "string"
            },
            "uniqueItems": true
          },
          "displayName": {
            "type": "string",
            "description": "Human-readable label that identifies the identity provider.",
            "maxLength": 50,
            "minLength": 1
          },
          "issuerUri": {
            "type": "string",
            "description": "Unique string that identifies the issuer of the SAML Assertion.",
            "example": "urn:idp:default"
          },
          "pemFileInfo": {
            "type": "array",
            "description": "List that contains the PEM file information for the identity provider's certificates.",
            "items": {
              "$ref": "#/components/schemas/PemFileInfo"
            }
          },
          "requestBinding": {
            "type": "string",
            "description": "SAML Authentication Request Protocol HTTP method binding (POST or REDIRECT) that Federated Authentication uses to send the authentication request.",
            "enum": [
              "HTTP-POST",
              "HTTP-REDIRECT"
            ]
          },
          "responseSignatureAlgorithm": {
            "type": "string",
            "description": "Signature algorithm that Federated Authentication uses to encrypt the identity provider signature.",
            "enum": [
              "SHA-1",
              "SHA-256"
            ]
          },
          "ssoDebugEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether the identity provider has SSO debug enabled."
          },
          "ssoUrl": {
            "type": "string",
            "description": "Unique string that identifies the intended audience of the SAML assertion.",
            "example": "https://example.com"
          },
          "status": {
            "type": "string",
            "description": "String enum that indicates whether the identity provider is active.",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          }
        },
        "required": [
          "ssoDebugEnabled"
        ]
      },
      "IdentityProviderView": {
        "type": "object",
        "properties": {
          "acsUrl": {
            "type": "string",
            "description": "URL that points to where to send the SAML response."
          },
          "associatedDomains": {
            "type": "array",
            "description": "List that contains the domains associated with the identity provider.",
            "items": {
              "type": "string"
            },
            "uniqueItems": true
          },
          "associatedOrgs": {
            "type": "array",
            "description": "List that contains the connected organization configurations associated with the identity provider.",
            "items": {
              "$ref": "#/components/schemas/ConnectedOrgConfigView"
            },
            "uniqueItems": true
          },
          "audienceUri": {
            "type": "string",
            "description": "Unique string that identifies the intended audience of the SAML assertion."
          },
          "displayName": {
            "type": "string",
            "description": "Human-readable label that identifies the identity provider."
          },
          "issuerUri": {
            "type": "string",
            "description": "Unique string that identifies the issuer of the SAML Assertion."
          },
          "oktaIdpId": {
            "type": "string",
            "description": "Unique 20-hexadecimal digit string that identifies the identity provider.",
            "maxLength": 20,
            "minLength": 20,
            "pattern": "^([a-f0-9]{20})$"
          },
          "pemFileInfo": {
            "type": "array",
            "description": "List that contains the PEM file information for the identity provider's current certificates.",
            "items": {
              "type": "object",
              "properties": {
                "certificates": {
                  "type": "array",
                  "description": "List of certificates in the file.",
                  "items": {
                    "$ref": "#/components/schemas/X509CertificateView"
                  }
                },
                "fileName": {
                  "type": "string",
                  "description": "Human-readable label given to the file."
                }
              }
            }
          },
          "requestBinding": {
            "type": "string",
            "description": "SAML Authentication Request Protocol HTTP method binding (POST or REDIRECT) that Federated Authentication uses to send the authentication request."
          },
          "responseSignatureAlgorithm": {
            "type": "string",
            "description": "Signature algorithm that Federated Authentication uses to encrypt the identity provider signature."
          },
          "ssoDebugEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether the identity provider has SSO debug enabled."
          },
          "ssoUrl": {
            "type": "string",
            "description": "URL that points to the receiver of the SAML authentication request."
          },
          "status": {
            "type": "string",
            "description": "String enum that indicates whether the identity provider is active."
          }
        },
        "required": [
          "associatedDomains",
          "associatedOrgs",
          "oktaIdpId"
        ]
      },
      "IndexOptions": {
        "type": "object",
        "description": "One or more settings that determine how the MongoDB Cloud creates this MongoDB index.",
        "externalDocs": {
          "description": "Index Options",
          "url": "https://docs.mongodb.com/manual/reference/method/db.collection.createIndex/#options"
        },
        "properties": {
          "2dsphereIndexVersion": {
            "type": "number",
            "default": 3,
            "description": "Index version number applied to the 2dsphere index. MongoDB 3.2 and later use version 3. Use this option to override the default version number. This option applies to the **2dsphere** index type only."
          },
          "background": {
            "type": "boolean",
            "default": false,
            "description": "Flag that indicates whether MongoDB should build the index in the background. This applies to MongoDB databases running feature compatibility version 4.0 or earlier. MongoDB databases running FCV 4.2 or later build indexes using an optimized build process. This process holds the exclusive lock only at the beginning and end of the build process. The rest of the build process yields to interleaving read and write operations. MongoDB databases running FCV 4.2 or later ignore this option. This option applies to all index types."
          },
          "bits": {
            "type": "number",
            "default": 26,
            "description": "Number of precision applied to the stored geohash value of the location data. This option applies to the **2d** index type only."
          },
          "bucketSize": {
            "type": "number",
            "description": "Number of units within which to group the location values. You could group in the same bucket those location values within the specified number of units to each other. This option applies to the geoHaystack index type only.\n\nMongoDB 5.0 removed geoHaystack Indexes and the `geoSearch` command."
          },
          "default_language": {
            "type": "string",
            "default": "english",
            "description": "Human language that determines the list of stop words and the rules for the stemmer and tokenizer. This option accepts the supported languages using its name in lowercase english or the ISO 639-2 code. If you set this parameter to `\"none\"`, then the text search uses simple tokenization with no list of stop words and no stemming. This option applies to the **text** index type only."
          },
          "expireAfterSeconds": {
            "type": "number",
            "description": "Number of seconds that MongoDB retains documents in a Time To Live (TTL) index."
          },
          "hidden": {
            "type": "boolean",
            "default": false,
            "description": "Flag that determines whether the index is hidden from the query planner. A hidden index is not evaluated as part of the query plan selection."
          },
          "language_override": {
            "type": "string",
            "default": "language",
            "description": "Human-readable label that identifies the document parameter that contains the override language for the document. This option applies to the **text** index type only."
          },
          "max": {
            "type": "number",
            "default": 180,
            "description": "Upper inclusive boundary to limit the longitude and latitude values. This option applies to the 2d index type only."
          },
          "min": {
            "type": "number",
            "default": -180,
            "description": "Lower inclusive boundary to limit the longitude and latitude values. This option applies to the 2d index type only."
          },
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies this index. This option applies to all index types."
          },
          "partialFilterExpression": {
            "$ref": "#/components/schemas/partialFilterExpression"
          },
          "sparse": {
            "type": "boolean",
            "default": false,
            "description": "Flag that indicates whether the index references documents that only have the specified parameter. These indexes use less space but behave differently in some situations like when sorting. The following index types default to sparse and ignore this option: `2dsphere`, `2d`, `geoHaystack`, `text`.\n\nCompound indexes that includes one or more indexes with `2dsphere` keys alongside other key types, only the `2dsphere` index parameters determine which documents the index references. If you run MongoDB 3.2 or later, use partial indexes. This option applies to all index types."
          },
          "storageEngine": {
            "$ref": "#/components/schemas/StorageEngine"
          },
          "textIndexVersion": {
            "type": "number",
            "default": 3,
            "description": "Version applied to this text index. MongoDB 3.2 and later use version `3`. Use this option to override the default version number. This option applies to the **text** index type only."
          },
          "unique": {
            "type": "boolean",
            "default": false,
            "description": "Flag that indicates whether this index can accept insertion or update of documents when the index key value matches an existing index key value. Set `\"unique\" : true` to set this index as unique. You can't set a hashed index to be unique. This option applies to all index types."
          },
          "weights": {
            "$ref": "#/components/schemas/Weights"
          }
        },
        "required": [
          "2dsphereIndexVersion"
        ],
        "writeOnly": true
      },
      "Link": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string",
            "description": "Uniform Resource Locator (URL) that points another API resource to which this response has some relationship. This URL often begins with `https://mms.mongodb.com`.",
            "example": "https://mms.mongodb.com/api/atlas/v1.0/groups/{groupId}/serverless/{instanceName1}/backup/snapshots"
          },
          "rel": {
            "type": "string",
            "description": "Uniform Resource Locator (URL) that defines the semantic relationship between this resource and another API resource. This URL often begins with `https://mms.mongodb.com`.",
            "example": "https://mms.mongodb.com/snapshots"
          }
        }
      },
      "Link_Atlas": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string",
            "description": "Uniform Resource Locator (URL) that points another API resource to which this response has some relationship. This URL often begins with `https://mms.mongodb.com`.",
            "example": "https://mms.mongodb.com/api/atlas/v1.0/groups/{groupId}/serverless/{instanceName1}/backup/snapshots"
          },
          "rel": {
            "type": "string",
            "description": "Uniform Resource Locator (URL) that defines the semantic relationship between this resource and another API resource. This URL often begins with `https://mms.mongodb.com`.",
            "example": "https://mms.mongodb.com/snapshots"
          }
        }
      },
      "LiveMigrationRequestView": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the migration request.",
            "example": "507f1f77bcf86cd799439011",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "destination": {
            "$ref": "#/components/schemas/Destination"
          },
          "dropEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether the migration process drops all collections from the destination cluster before the migration starts."
          },
          "migrationHosts": {
            "type": "array",
            "description": "List of migration hosts used for this migration.",
            "example": "vm001.example.com",
            "items": {
              "type": "string"
            }
          },
          "source": {
            "$ref": "#/components/schemas/Source"
          }
        },
        "required": [
          "destination",
          "dropEnabled",
          "migrationHosts",
          "source"
        ]
      },
      "LiveMigrationResponseView": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the migration job.",
            "example": "6296fb4c7c7aa997cf94e9a8",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "migrationHosts": {
            "type": "array",
            "description": "List of hosts running MongoDB Agents. These Agents can transfer your MongoDB data between one source and one target cluster.",
            "example": "vm001.example.com",
            "items": {
              "type": "string",
              "description": "One host running a MongoDB Agent. This Agent can transfer your MongoDB data between one source and one target cluster.",
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?$"
            },
            "readOnly": true
          },
          "readyForCutover": {
            "type": "boolean",
            "description": "Flag that indicates the migrated cluster can be cut over to MongoDB Atlas.",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "Progress made in migrating one cluster to MongoDB Atlas.\n\n| Status   | Explanation |\n|----------|-------------|\n| NEW      | Someone scheduled a local cluster migration to MongoDB Atlas. |\n| FAILED   | The cluster migration to MongoDB Atlas failed.                |\n| COMPLETE | The cluster migration to MongoDB Atlas succeeded.             |\n| EXPIRED  | MongoDB Atlas prepares to begin the cut over of the migrating cluster when source and target clusters have almost synchronized. If `\"readyForCutover\" : true`, this synchronization starts a timer of 120 hours. You can extend this timer. If the timer expires, MongoDB Atlas returns this status. |\n| WORKING  | The cluster migration to MongoDB Atlas is performing one of the following tasks:<ul><li>Preparing connections to source and target clusters</li><li>Replicating data from source to target</li><li>Verifying MongoDB Atlas connection settings</li><li>Stopping replication after the cut over</li></ul> |\n",
            "enum": [
              "NEW",
              "WORKING",
              "FAILED",
              "COMPLETE",
              "EXPIRED"
            ],
            "readOnly": true
          }
        }
      },
      "ManagedNamespaceView": {
        "type": "object",
        "description": "List that contains a namespace for a Global Cluster. MongoDB Cloud manages this cluster.",
        "properties": {
          "collection": {
            "type": "string",
            "description": "Human-readable label of the collection to manage for this Global Cluster."
          },
          "customShardKey": {
            "type": "string",
            "description": "Database parameter used to divide the *collection* into shards. Global clusters require a compound shard key. This compound shard key combines the location parameter and the user-selected custom key."
          },
          "db": {
            "type": "string",
            "description": "Human-readable label of the database to manage for this Global Cluster."
          },
          "isCustomShardKeyHashed": {
            "type": "boolean",
            "default": false,
            "description": "Flag that indicates whether someone hashed the custom shard key. If this parameter returns `false`, this cluster uses ranged sharding."
          },
          "isShardKeyUnique": {
            "type": "boolean",
            "default": false,
            "description": "Flag that indicates whether the underlying index enforces unique values."
          },
          "numInitialChunks": {
            "type": "number",
            "description": "Minimum number of chunks to create initially when sharding an empty collection with a hashed shard key.",
            "pattern": "^[0-9]+$"
          },
          "presplitHashedZones": {
            "type": "boolean",
            "default": false,
            "description": "Flag that indicates whether MongoDB Cloud should create and distribute initial chunks for an empty or non-existing collection. MongoDB Cloud distributes data based on the defined zones and zone ranges for the collection."
          }
        },
        "readOnly": true
      },
      "MigrationLinkStatusView": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "String that indicates the status of the link between organizations.",
            "enum": [
              "SYNCED",
              "NOT_SYNCED"
            ],
            "readOnly": true
          }
        }
      },
      "MonthlyScheduleView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiAtlasOnlineArchiveScheduleView"
          },
          {
            "type": "object",
            "properties": {
              "dayOfMonth": {
                "type": "integer",
                "format": "int32",
                "description": "Day of the month when the scheduled archive starts.",
                "maximum": 31,
                "minimum": 1
              },
              "endHour": {
                "type": "integer",
                "format": "int32",
                "description": "Hour of the day when the scheduled window to run one online archive ends.",
                "maximum": 23,
                "minimum": 0
              },
              "endMinute": {
                "type": "integer",
                "format": "int32",
                "description": "Minute of the hour when the scheduled window to run one online archive ends.",
                "maximum": 59,
                "minimum": 0
              },
              "startHour": {
                "type": "integer",
                "format": "int32",
                "description": "Hour of the day when the when the scheduled window to run one online archive starts.",
                "maximum": 23,
                "minimum": 0
              },
              "startMinute": {
                "type": "integer",
                "format": "int32",
                "description": "Minute of the hour when the scheduled window to run one online archive starts.",
                "maximum": 59,
                "minimum": 0
              }
            }
          }
        ]
      },
      "NDSDataLakeAWSCloudProviderConfigView": {
        "type": "object",
        "description": "Name of the cloud service that hosts the data lake's data stores.",
        "properties": {
          "roleId": {
            "type": "string",
            "description": "Unique identifier of the role that the data lake can use to access the data stores.Required if specifying cloudProviderConfig."
          },
          "testS3Bucket": {
            "type": "string",
            "description": "Name of the S3 data bucket that the provided role ID is authorized to access.Required if specifying cloudProviderConfig."
          }
        },
        "required": [
          "roleId",
          "testS3Bucket"
        ]
      },
      "NDSDataLakeAtlasStoreReadPreferenceTagView": {
        "type": "object",
        "description": "List that contains [tag sets](https://docs.mongodb.com/manual/core/read-preference-tags/) or tag specification documents. If specified, Atlas Data Lake routes read requests to replica set member or members that are associated with the specified tags.",
        "properties": {
          "name": {
            "type": "string",
            "description": "Human-readable label of the tag."
          },
          "value": {
            "type": "string",
            "description": "Value of the tag."
          }
        }
      },
      "NDSDataLakeAtlasStoreReadPreferenceView": {
        "type": "object",
        "description": "MongoDB Cloud cluster read preference, which describes how to route read requests to the cluster.",
        "properties": {
          "maxStalenessSeconds": {
            "type": "number",
            "description": "Maximum replication lag, or **staleness**, for reads from secondaries."
          },
          "mode": {
            "type": "string",
            "description": "[Read preference mode](https://docs.mongodb.com/manual/core/read-preference/#read-preference-modes) that specifies to which replica set member to route the read requests.",
            "enum": [
              "primary",
              "primaryPreferred",
              "secondary",
              "secondaryPreferred",
              "nearest"
            ]
          },
          "tagSets": {
            "type": "array",
            "description": "List that contains [tag sets](https://docs.mongodb.com/manual/core/read-preference-tags/) or tag specification documents. If specified, Atlas Data Lake routes read requests to replica set member or members that are associated with the specified tags.",
            "items": {
              "type": "array",
              "description": "List that contains [tag sets](https://docs.mongodb.com/manual/core/read-preference-tags/) or tag specification documents. If specified, Atlas Data Lake routes read requests to replica set member or members that are associated with the specified tags.",
              "items": {
                "$ref": "#/components/schemas/NDSDataLakeAtlasStoreReadPreferenceTagView"
              }
            }
          }
        },
        "readOnly": true
      },
      "NDSDataLakeAtlasStoreView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/provider"
          },
          {
            "type": "object",
            "properties": {
              "clusterName": {
                "type": "string",
                "description": "Human-readable label of the MongoDB Cloud cluster on which the store is based."
              },
              "projectId": {
                "type": "string",
                "description": "Unique 24-hexadecimal digit string that identifies the project.",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^([a-f0-9]{24})$",
                "readOnly": true
              },
              "readPreference": {
                "$ref": "#/components/schemas/NDSDataLakeAtlasStoreReadPreferenceView"
              }
            }
          }
        ]
      },
      "NDSDataLakeCloudProviderConfigView": {
        "type": "object",
        "description": "Configuration information for the cloud service that stores the data lake's source data.",
        "properties": {
          "aws": {
            "$ref": "#/components/schemas/NDSDataLakeAWSCloudProviderConfigView"
          }
        },
        "required": [
          "aws"
        ]
      },
      "NDSDataLakeDLSAWSStoreView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/provider"
          },
          {
            "type": "object",
            "properties": {
              "region": {
                "type": "string"
              }
            }
          }
        ]
      },
      "NDSDataLakeDLSStoreView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/provider"
          }
        ]
      },
      "NDSDataLakeDataProcessRegionView": {
        "type": "object",
        "description": "Information about the cloud provider region to which the data lake routes client connections. MongoDB Cloud supports AWS only.",
        "properties": {
          "cloudProvider": {
            "type": "string",
            "description": "Name of the cloud service that hosts the data lake's data stores.",
            "enum": [
              "NONE",
              "AWS",
              "GCP",
              "AZURE",
              "FREE",
              "SERVERLESS"
            ]
          },
          "region": {
            "type": "string",
            "description": "Name of the region to which the data lake routes connections for data processing.",
            "enum": [
              "DUBLIN_IRL",
              "FRANKFURT_DEU",
              "LONDON_GBR",
              "MUMBAI_IND",
              "OREGON_USA",
              "SYDNEY_AUS",
              "VIRGINIA_USA"
            ]
          }
        },
        "readOnly": true,
        "required": [
          "cloudProvider",
          "region"
        ]
      },
      "NDSDataLakeDatabaseCollectionView": {
        "type": "object",
        "description": "A collection and data sources that map to a ``stores`` data store.",
        "properties": {
          "dataSources": {
            "type": "array",
            "description": "Array that contains the data stores that map to a collection for this data lake.",
            "items": {
              "$ref": "#/components/schemas/NDSDataLakeDatabaseDataSourceView"
            },
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies the collection to which MongoDB Cloud maps the data in the data stores.",
            "readOnly": true
          }
        },
        "readOnly": true
      },
      "NDSDataLakeDatabaseDataSourceView": {
        "type": "object",
        "description": "Data store that maps to a collection for this data lake.",
        "properties": {
          "allowInsecure": {
            "type": "boolean",
            "default": false,
            "description": "Flag that validates the scheme in the specified URLs. If `true`, allows insecure `HTTP` scheme, doesn't verify the server's certificate chain and hostname, and accepts any certificate with any hostname presented by the server. If `false`, allows secure `HTTPS` scheme only."
          },
          "collection": {
            "type": "string",
            "description": "Human-readable label that identifies the collection in the database. For creating a wildcard (`*`) collection, you must omit this parameter."
          },
          "collectionRegex": {
            "type": "string",
            "description": "Regex pattern to use for creating the wildcard (*) collection. To learn more about the regex syntax, see [Go programming language](https://pkg.go.dev/regexp)."
          },
          "database": {
            "type": "string",
            "description": "Human-readable label that identifies the database, which contains the collection in the cluster. You must omit this parameter to generate wildcard (`*`) collections for dynamically generated databases."
          },
          "defaultFormat": {
            "type": "string",
            "description": "File format that MongoDB Cloud uses if it encounters a file without a file extension while searching **storeName**.",
            "enum": [
              ".avro",
              ".avro.gz",
              ".bson",
              ".bson.gz",
              ".csv",
              ".json",
              ".json.gz",
              ".orc",
              ".tsv",
              ".tsv.gz"
            ]
          },
          "path": {
            "type": "string",
            "description": "File path that controls how MongoDB Cloud searches for and parses files in the **storeName** before mapping them to a collection.Specify ``/`` to capture all files and folders from the ``prefix`` path."
          },
          "storeName": {
            "type": "string",
            "description": "Human-readable label that identifies the data store to map to the **collection**. Must match the **name** of an object in the **stores** array."
          },
          "urls": {
            "type": "array",
            "description": "URLs of the publicly accessible data files. You can't specify URLs that require authentication. Atlas Data Lake creates a partition for each URL. If empty or omitted, Data Lake uses the URLs from the store specified in the **dataSources.storeName** parameter.",
            "items": {
              "type": "string"
            }
          }
        },
        "readOnly": true
      },
      "NDSDataLakeDatabaseView": {
        "type": "object",
        "description": "Database associated with this data lake. Databases contain collections and views.",
        "properties": {
          "collections": {
            "type": "array",
            "description": "Array of collections and data sources that map to a ``stores`` data store.",
            "items": {
              "$ref": "#/components/schemas/NDSDataLakeDatabaseCollectionView"
            },
            "readOnly": true
          },
          "maxWildcardCollections": {
            "type": "number",
            "default": 100,
            "description": "Maximum number of wildcard collections in the database.",
            "maximum": 1000,
            "minimum": 1,
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies the database to which the data lake maps data.",
            "readOnly": true
          },
          "views": {
            "type": "array",
            "description": "Array of aggregation pipelines that apply to the collection.",
            "items": {
              "$ref": "#/components/schemas/NDSDataLakeViewView"
            },
            "readOnly": true
          }
        },
        "readOnly": true
      },
      "NDSDataLakeHTTPStoreView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/provider"
          },
          {
            "type": "object",
            "properties": {
              "allowInsecure": {
                "type": "boolean",
                "default": false,
                "description": "Flag that validates the scheme in the specified URLs. If `true`, allows insecure `HTTP` scheme, doesn't verify the server's certificate chain and hostname, and accepts any certificate with any hostname presented by the server. If `false`, allows secure `HTTPS` scheme only."
              },
              "defaultFormat": {
                "type": "string",
                "description": "Default format that Data Lake assumes if it encounters a file without an extension while searching the `storeName`. If omitted, Data Lake attempts to detect the file type by processing a few bytes of the file. The specified format only applies to the URLs specified in the **databases.[n].collections.[n].dataSources** object."
              },
              "urls": {
                "type": "array",
                "description": "Comma-separated list of publicly accessible HTTP URLs where data is stored. You can't specify URLs that require authentication.",
                "items": {
                  "type": "string",
                  "description": "Comma-separated list of publicly accessible HTTP URLs where data is stored. You can't specify URLs that require authentication."
                }
              }
            }
          }
        ]
      },
      "NDSDataLakeOnlineArchiveStoreView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/provider"
          }
        ]
      },
      "NDSDataLakeS3StoreView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/provider"
          },
          {
            "type": "object",
            "properties": {
              "additionalStorageClasses": {
                "type": "array",
                "description": "Collection of AWS S3 [storage classes](https://aws.amazon.com/s3/storage-classes/). Atlas Data Lake includes the files in these storage classes in the query results.",
                "items": {
                  "type": "string",
                  "description": "AWS S3 [storage class](https://aws.amazon.com/s3/storage-classes/) where the files to include in the results are stored."
                }
              },
              "bucket": {
                "type": "string",
                "description": "Human-readable label that identifies the AWS S3 bucket. This label must exactly match the name of an S3 bucket that the data lake can access with the configured AWS Identity and Access Management (IAM) credentials."
              },
              "delimiter": {
                "type": "string",
                "description": "The delimiter that separates **databases.[n].collections.[n].dataSources.[n].path** segments in the data store. MongoDB Cloud uses the delimiter to efficiently traverse S3 buckets with a hierarchical directory structure. You can specify any character supported by the S3 object keys as the delimiter. For example, you can specify an underscore (_) or a plus sign (+) or multiple characters, such as double underscores (__) as the delimiter. If omitted, defaults to `/`."
              },
              "includeTags": {
                "type": "boolean",
                "default": false,
                "description": "Flag that indicates whether to use S3 tags on the files in the given path as additional partition attributes. If set to `true`, data lake adds the S3 tags as additional partition attributes and adds new top-level BSON elements associating each tag to each document."
              },
              "prefix": {
                "type": "string",
                "description": "Prefix that MongoDB Cloud applies when searching for files in the S3 bucket. The data store prepends the value of prefix to the **databases.[n].collections.[n].dataSources.[n].path** to create the full path for files to ingest. If omitted, MongoDB Cloud searches all files from the root of the S3 bucket."
              },
              "public": {
                "type": "boolean",
                "default": false,
                "description": "Flag that indicates whether the bucket is public. If set to `true`, MongoDB Cloud doesn't use the configured AWS Identity and Access Management (IAM) role to access the S3 bucket. If set to `false`, the configured AWS IAM role must include permissions to access the S3 bucket."
              },
              "region": {
                "type": "string",
                "enum": [
                  "US_EAST_1",
                  "US_EAST_2",
                  "US_WEST_1",
                  "US_WEST_2",
                  "CA_CENTRAL_1",
                  "EU_NORTH_1",
                  "EU_WEST_1",
                  "EU_WEST_2",
                  "EU_WEST_3",
                  "EU_CENTRAL_1",
                  "SA_EAST_1",
                  "AP_EAST_1",
                  "AP_SOUTHEAST_2",
                  "AP_SOUTHEAST_3",
                  "AP_NORTHEAST_1",
                  "AP_NORTHEAST_2",
                  "AP_NORTHEAST_3",
                  "AP_SOUTHEAST_1",
                  "AP_SOUTH_1",
                  "CN_NORTH_1",
                  "CN_NORTHWEST_1",
                  "ME_SOUTH_1",
                  "AF_SOUTH_1",
                  "EU_SOUTH_1",
                  "GLOBAL",
                  "US_GOV_WEST_1",
                  "US_GOV_EAST_1"
                ]
              }
            }
          }
        ]
      },
      "NDSDataLakeStorageView": {
        "type": "object",
        "description": "Configuration information for each data store and its mapping to MongoDB Cloud databases.",
        "properties": {
          "databases": {
            "type": "array",
            "description": "Array that contains the queryable databases and collections for this data lake.",
            "items": {
              "$ref": "#/components/schemas/NDSDataLakeDatabaseView"
            },
            "readOnly": true
          },
          "stores": {
            "type": "array",
            "description": "Array that contains the data stores for the data lake.",
            "items": {
              "$ref": "#/components/schemas/provider"
            }
          }
        },
        "readOnly": true
      },
      "NDSDataLakeTenantView": {
        "type": "object",
        "properties": {
          "cloudProviderConfig": {
            "$ref": "#/components/schemas/NDSDataLakeCloudProviderConfigView"
          },
          "dataProcessRegion": {
            "$ref": "#/components/schemas/NDSDataLakeDataProcessRegionView"
          },
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies the data lake."
          },
          "storage": {
            "$ref": "#/components/schemas/NDSDataLakeStorageView"
          }
        }
      },
      "NDSDataLakeViewView": {
        "type": "object",
        "description": "An aggregation pipeline that applies to the collection.",
        "properties": {
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies the view, which corresponds to an aggregation pipeline on a collection."
          },
          "pipeline": {
            "type": "string",
            "description": "Aggregation pipeline stages to apply to the source collection.",
            "externalDocs": {
              "description": "Aggregation Pipelines",
              "url": "https://docs.mongodb.com/manual/core/aggregation-pipeline/"
            }
          },
          "source": {
            "type": "string",
            "description": "Human-readable label that identifies the source collection for the view."
          }
        },
        "readOnly": true
      },
      "ObjectId": {
        "type": "object",
        "description": "List that contains comma-separated key value pairs to map zones to geographic regions. These pairs map an ISO 3166-1a2 location code, with an ISO 3166-2 subdivision code when possible, to a unique 24-hexadecimal string that identifies the custom zone.\n\nThis parameter returns an empty object if no custom zones exist.",
        "readOnly": true
      },
      "OrgFederationSettingsView": {
        "type": "object",
        "description": "Details that define how to connect one MongoDB Cloud organization to one federated authentication service.",
        "properties": {
          "federatedDomains": {
            "type": "array",
            "description": "List of domains associated with the organization's identity provider.",
            "items": {
              "type": "string"
            },
            "uniqueItems": true
          },
          "hasRoleMappings": {
            "type": "boolean",
            "description": "Flag that indicates whether this organization has role mappings configured."
          },
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this federation.",
            "example": "55fa922fb343282757d9554e",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "identityProviderId": {
            "type": "string",
            "description": "Unique 20-hexadecimal digit string that identifies the identity provider connected to this organization.",
            "example": "c2777a9eca931f29fc2f",
            "maxLength": 20,
            "minLength": 20,
            "pattern": "^([a-f0-9]{20})$"
          },
          "identityProviderStatus": {
            "type": "string",
            "description": "String enum that indicates whether the identity provider is active."
          }
        },
        "required": [
          "federatedDomains"
        ],
        "title": "Organization Federation Settings"
      },
      "OrgGroupView": {
        "type": "object",
        "properties": {
          "clusters": {
            "type": "array",
            "description": "Settings that describe the clusters in each project that the API key is authorized to view.",
            "items": {
              "$ref": "#/components/schemas/ClusterView"
            },
            "readOnly": true
          },
          "groupId": {
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the project.",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "groupName": {
            "type": "string",
            "description": "Human-readable label that identifies the project.",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[\\p{L}\\p{N}\\-_.(),:&@+']{1,64}$"
          },
          "orgId": {
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the organization that contains the project.",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "orgName": {
            "type": "string",
            "description": "Human-readable label that identifies the organization that contains the project.",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[\\p{L}\\p{N}\\-_.(),:&@+']{1,64}$"
          },
          "planType": {
            "type": "string",
            "description": "Human-readable label that indicates the plan type.",
            "readOnly": true
          },
          "tags": {
            "type": "array",
            "description": "List of human-readable labels that categorize the specified project. MongoDB Cloud returns an empty array.",
            "items": {
              "type": "string",
              "description": "List of human-readable labels that categorize the specified project.",
              "readOnly": true
            },
            "readOnly": true
          }
        }
      },
      "PaginatedAWSPeerVpcView": {
        "type": "object",
        "description": "Group of Network Peering connection settings.",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasAWSPeerVpcView"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ],
        "title": "AWS"
      },
      "PaginatedAWSPrivateLinkConnectionView": {
        "type": "object",
        "description": "Group of Private Endpoint Service settings.",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasAWSPrivateLinkConnectionView"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ],
        "title": "AWS"
      },
      "PaginatedAlertConfigView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
            "items": {
              "$ref": "#/components/schemas/ApiAlertConfigView"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ]
      },
      "PaginatedAlertView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
            "items": {
              "$ref": "#/components/schemas/ApiAlertView"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ]
      },
      "PaginatedApiInvoiceView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
            "items": {
              "$ref": "#/components/schemas/ApiInvoiceView"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ]
      },
      "PaginatedAppUserView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
            "items": {
              "$ref": "#/components/schemas/ApiAppUserView"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ]
      },
      "PaginatedAtlasGroupView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasGroupView"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ]
      },
      "PaginatedAzurePeerNetworkView": {
        "type": "object",
        "description": "Group of Network Peering connection settings.",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasAzurePeerNetworkView"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ],
        "title": "AZURE"
      },
      "PaginatedAzurePrivateLinkConnectionView": {
        "type": "object",
        "description": "Group of Private Endpoint Service settings.",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasAzurePrivateLinkConnectionView"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ],
        "title": "AZURE"
      },
      "PaginatedBackupSnapshotExportBucketView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasDiskBackupSnapshotAWSExportBucketView"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ]
      },
      "PaginatedCloudBackupReplicaSetView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasDiskBackupReplicaSetView"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ]
      },
      "PaginatedCloudBackupRestoreJobView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasDiskBackupRestoreJobView"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ]
      },
      "PaginatedCloudBackupShardedClusterSnapshotView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasDiskBackupShardedClusterSnapshotView"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ]
      },
      "PaginatedCloudProviderContainerView": {
        "type": "object",
        "description": "List of Network Peering Containers that Amazon Web Services serves.",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasCloudProviderContainerView"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ],
        "title": "Network Peering Containers"
      },
      "PaginatedClusterDescriptionV15View": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasClusterDescriptionV15View"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ]
      },
      "PaginatedDatabaseUserView": {
        "type": "object",
        "description": "List of MongoDB Database users granted access to databases in the specified project.\n",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.\n",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.\n",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasDatabaseUserViewBase"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ]
      },
      "PaginatedDatabaseView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
            "items": {
              "$ref": "#/components/schemas/ApiDatabaseView"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ]
      },
      "PaginatedDiskPartitionView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
            "items": {
              "$ref": "#/components/schemas/ApiDiskPartitionView"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ]
      },
      "PaginatedEventView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
            "items": {
              "$ref": "#/components/schemas/ApiEventView"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ]
      },
      "PaginatedGCPEndpointServiceView": {
        "type": "object",
        "description": "Group of Private Endpoint Service settings.",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasGCPEndpointServiceView"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ],
        "title": "GCP"
      },
      "PaginatedGCPPeerVpcView": {
        "type": "object",
        "description": "Group of Network Peering connection settings.",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasGCPPeerVpcView"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ],
        "title": "GCP"
      },
      "PaginatedGroupInvitationView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
            "items": {
              "$ref": "#/components/schemas/ApiGroupInvitationView"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ]
      },
      "PaginatedHostView_Atlas": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link_Atlas"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
            "items": {
              "$ref": "#/components/schemas/ApiHostView_Atlas"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ]
      },
      "PaginatedIntegrationView": {
        "type": "object",
        "description": "Collection of settings that describe third-party integrations.",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
            "items": {
              "$ref": "#/components/schemas/ApiIntegrationViewManual"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ]
      },
      "PaginatedLegacyClusterView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasLegacyClusterDescriptionView"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ]
      },
      "PaginatedNetworkAccessView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasNetworkPermissionEntryView"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ]
      },
      "PaginatedOnlineArchiveView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasOnlineArchiveView"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ]
      },
      "PaginatedOrgGroupView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
            "items": {
              "$ref": "#/components/schemas/OrgGroupView"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ]
      },
      "PaginatedOrganizationInvitationView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
            "items": {
              "$ref": "#/components/schemas/ApiOrganizationInvitationView"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ]
      },
      "PaginatedOrganizationView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
            "items": {
              "$ref": "#/components/schemas/ApiOrganizationView"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ]
      },
      "PaginatedRestoreJobView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
            "items": {
              "$ref": "#/components/schemas/ApiRestoreJobView"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ]
      },
      "PaginatedServerlessBackupRestoreJobViewManual": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasServerlessBackupRestoreJobViewManual"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ],
        "title": "Serverless Restore Jobs"
      },
      "PaginatedServerlessBackupSnapshotViewManual": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.\"",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasServerlessBackupSnapshotViewManual"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ]
      },
      "PaginatedServerlessInstancesView": {
        "type": "object",
        "description": "List of MongoDB Database users granted access to databases in the specified project.\n",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.\n",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.\n",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasServerlessClusterDescriptionViewManual"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ]
      },
      "PaginatedSnapshotView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
            "items": {
              "$ref": "#/components/schemas/ApiSnapshotView"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ]
      },
      "PaginatedTeamRoleView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
            "items": {
              "$ref": "#/components/schemas/ApiTeamRoleView"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ]
      },
      "PaginatedTeamView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
            "items": {
              "$ref": "#/components/schemas/ApiTeamView"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ]
      },
      "PaginatedTenantRestoreView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasTenantRestoreView"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ]
      },
      "PaginatedTenantSnapshotView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasTenantSnapshotView"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ]
      },
      "PaginatedUserCertView": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "externalDocs": {
              "description": "Web Linking Specification (RFC 5988)",
              "url": "https://datatracker.ietf.org/doc/html/rfc5988"
            },
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "readOnly": true
          },
          "results": {
            "type": "array",
            "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
            "items": {
              "$ref": "#/components/schemas/ApiAtlasUserCertView"
            },
            "readOnly": true
          },
          "totalCount": {
            "type": "number",
            "description": "Number of documents returned in this response.",
            "minimum": 0,
            "readOnly": true
          }
        },
        "required": [
          "links",
          "results",
          "totalCount"
        ]
      },
      "PartitionFieldView": {
        "type": "object",
        "description": "Metadata to partition this online archive.",
        "properties": {
          "fieldName": {
            "type": "string",
            "description": "Human-readable label that identifies the parameter that MongoDB Cloud uses to partition data. To specify a nested parameter, use the dot notation.",
            "maxLength": 700
          },
          "fieldType": {
            "type": "string",
            "description": "Data type of the parameter that that MongoDB Cloud uses to partition data. Partition parameters of type [UUID](http://bsonspec.org/spec.html) must be of binary subtype 4. MongoDB Cloud skips partition parameters of type UUID with subtype 3.",
            "enum": [
              "date",
              "int",
              "long",
              "objectId",
              "string",
              "uuid"
            ],
            "readOnly": true
          },
          "order": {
            "type": "integer",
            "format": "int32",
            "default": 0,
            "description": "Sequence in which MongoDB Cloud slices the collection data to create partitions. The resource expresses this sequence starting with zero. The value of the **criteria.dateField** parameter defaults as the first item in the partition sequence."
          }
        },
        "required": [
          "fieldName",
          "order"
        ],
        "title": "Online Archive Partition"
      },
      "PemFileInfo": {
        "type": "object",
        "properties": {
          "certificates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/X509Certificate"
            }
          },
          "fileName": {
            "type": "string"
          }
        }
      },
      "PerformanceAdvisorOpStatsView": {
        "type": "object",
        "description": "Details that this resource returned about the specified query.",
        "properties": {
          "ms": {
            "type": "number",
            "description": "Length of time expressed during which the query finds suggested indexes among the managed namespaces in the cluster. This parameter expresses its value in milliseconds. This parameter relates to the **duration** query parameter.",
            "readOnly": true
          },
          "nReturned": {
            "type": "number",
            "description": "Number of results that the query returns.",
            "readOnly": true
          },
          "nScanned": {
            "type": "number",
            "description": "Number of documents that the query read.",
            "readOnly": true
          },
          "ts": {
            "type": "number",
            "description": "Date and time from which the query retrieves the suggested indexes. This parameter expresses its value in the number of seconds that have elapsed since the [UNIX epoch](https://en.wikipedia.org/wiki/Unix_time). This parameter relates to the **since** query parameter.",
            "pattern": "^([0-9]{10,})$",
            "readOnly": true
          }
        },
        "readOnly": true
      },
      "PerformanceAdvisorOperationView": {
        "type": "object",
        "properties": {
          "predicates": {
            "type": "array",
            "description": "List that contains the search criteria that the query uses. To use the values in key-value pairs in these predicates requires **Project Data Access Read Only** permissions or greater. Otherwise, MongoDB Cloud redacts these values.",
            "items": {
              "type": "object",
              "description": "List that contains the search criteria that the query uses. To use the values in key-value pairs in these predicates requires **Project Data Access Read Only** permissions or greater. Otherwise, MongoDB Cloud redacts these values.",
              "readOnly": true
            },
            "readOnly": true
          },
          "stats": {
            "$ref": "#/components/schemas/PerformanceAdvisorOpStatsView"
          }
        }
      },
      "PrivateIPModeView": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone enabled **Connect via Peering Only** mode for the specified project."
          }
        },
        "required": [
          "enabled"
        ]
      },
      "ProjectSettingItemView": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone enabled the regionalized private endpoint setting for the specified project.\n\n- Set this value to `true` to enable regionalized private endpoints. This allows you to create more than one private endpoint in a cloud provider region. You need to enable this setting to connect to multi-region and global MongoDB Cloud sharded clusters. Enabling regionalized private endpoints introduces the following limitations:\n  - Your applications must use the new connection strings for existing multi-region and global sharded clusters. This might cause downtime.\n  - Your MongoDB Cloud project can't contain replica sets nor can you create new replica sets in this project.\n\n  - You can't disable this setting if you have:\n    - more than one private endpoint in more than one region\n    - more than one private endpoint in one region and one private endpoint in one or more regions.\n\n- Set this value to `false` to disable regionalized private endpoints."
          }
        },
        "required": [
          "enabled"
        ]
      },
      "RoleAssignment": {
        "type": "object",
        "properties": {
          "groupId": {
            "$ref": "#/components/schemas/ObjectId"
          },
          "orgId": {
            "$ref": "#/components/schemas/ObjectId"
          },
          "role": {
            "type": "string",
            "enum": [
              "GLOBAL_AUTOMATION_ADMIN",
              "GLOBAL_BACKUP_ADMIN",
              "GLOBAL_METERING_USER",
              "GLOBAL_METRICS_INTERNAL_USER",
              "GLOBAL_MONITORING_ADMIN",
              "GLOBAL_OWNER",
              "GLOBAL_READ_ONLY",
              "GLOBAL_USER_ADMIN",
              "GLOBAL_USER_READ_ONLY",
              "GLOBAL_ACCOUNT_SUSPENSION_ADMIN",
              "GLOBAL_BILLING_ADMIN",
              "GLOBAL_LEGAL_ADMIN",
              "GLOBAL_FEATURE_FLAG_ADMIN",
              "GLOBAL_ATLAS_TSE",
              "GLOBAL_ATLAS_OPERATOR",
              "GLOBAL_ATLAS_ADMIN",
              "GLOBAL_STITCH_ADMIN",
              "GLOBAL_CHARTS_ADMIN",
              "GLOBAL_EXPERIMENT_ASSIGNMENT_USER",
              "GLOBAL_STITCH_INTERNAL_ADMIN",
              "GLOBAL_SECURITY_ADMIN",
              "GLOBAL_QUERY_ENGINE_INTERNAL_ADMIN",
              "GLOBAL_PROACTIVE_SUPPORT_ADMIN",
              "GLOBAL_INFRASTRUCTURE_INTERNAL_ADMIN",
              "GLOBAL_SALESFORCE_ADMIN",
              "GLOBAL_SALESFORCE_READ_ONLY",
              "GLOBAL_APP_SERVICES_CLUSTER_DEBUG_DATA_ACCESS",
              "ORG_MEMBER",
              "ORG_READ_ONLY",
              "ORG_BILLING_ADMIN",
              "ORG_GROUP_CREATOR",
              "ORG_OWNER",
              "GROUP_AUTOMATION_ADMIN",
              "GROUP_BACKUP_ADMIN",
              "GROUP_MONITORING_ADMIN",
              "GROUP_OWNER",
              "GROUP_READ_ONLY",
              "GROUP_USER_ADMIN",
              "GROUP_BILLING_ADMIN",
              "GROUP_DATA_ACCESS_ADMIN",
              "GROUP_DATA_ACCESS_READ_ONLY",
              "GROUP_DATA_ACCESS_READ_WRITE",
              "GROUP_CHARTS_ADMIN",
              "GROUP_CLUSTER_MANAGER",
              "GROUP_SEARCH_INDEX_EDITOR"
            ]
          }
        }
      },
      "RoleMappingView": {
        "type": "object",
        "description": "Mapping settings that link one IdP and MongoDB Cloud.",
        "properties": {
          "externalGroupName": {
            "type": "string",
            "description": "Unique human-readable label that identifies the identity provider group to whichthis role mapping applies.",
            "maxLength": 200,
            "minLength": 1
          },
          "id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies this role mapping.",
            "example": "4faca5b098702de1952f4d09",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "roleAssignments": {
            "type": "array",
            "description": "Atlas roles and the unique identifiers of the groups and organizations associated with each role.",
            "items": {
              "$ref": "#/components/schemas/RoleAssignment"
            },
            "uniqueItems": true
          }
        },
        "required": [
          "externalGroupName",
          "roleAssignments"
        ],
        "title": "Federated Authentication Role Mapping"
      },
      "Serverless_Instance_Connection_Strings": {
        "type": "object",
        "description": "Collection of Uniform Resource Locators that point to the MongoDB database.",
        "properties": {
          "privateEndpoint": {
            "type": "array",
            "description": "List of private endpoint connection strings that you can use to connect to this serverless instance through a private endpoint. This parameter returns only if you created a private endpoint for this serverless instance and it is AVAILABLE.",
            "items": {
              "$ref": "#/components/schemas/Serverless_Instance_Private_Endpoint"
            },
            "readOnly": true
          },
          "standardSrv": {
            "type": "string",
            "description": "Public connection string that you can use to connect to this serverless instance. This connection string uses the `mongodb+srv://` protocol.",
            "externalDocs": {
              "description": "Connection String URI Format",
              "url": "https://docs.mongodb.com/manual/reference/connection-string/"
            },
            "readOnly": true
          }
        },
        "readOnly": true,
        "required": [
          "standardSrv"
        ]
      },
      "Serverless_Instance_Private_Endpoint": {
        "type": "object",
        "properties": {
          "endpoints": {
            "type": "array",
            "description": "List that contains the private endpoints through which you connect to MongoDB Cloud when you use **connectionStrings.privateEndpoint[n].srvConnectionString**.",
            "items": {
              "$ref": "#/components/schemas/Serverless_Instance_Private_Endpoint_Endpoint"
            },
            "readOnly": true
          },
          "srvConnectionString": {
            "type": "string",
            "description": "Private endpoint-aware connection string that uses the `mongodb+srv://` protocol to connect to MongoDB Cloud through a private endpoint. The `mongodb+srv` protocol tells the driver to look up the seed list of hosts in the Domain Name System (DNS).",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "description": "MongoDB process type to which your application connects.\n",
            "enum": [
              "MONGOS"
            ],
            "readOnly": true
          }
        },
        "readOnly": true,
        "required": [
          "endpoints",
          "srvConnectionString",
          "type"
        ]
      },
      "Serverless_Instance_Private_Endpoint_Endpoint": {
        "type": "object",
        "properties": {
          "endpointId": {
            "type": "string",
            "description": "Unique provider identifier of the private endpoint.\n",
            "readOnly": true
          },
          "providerName": {
            "type": "string",
            "description": "Cloud provider where the private endpoint is deployed.\n",
            "enum": [
              "AWS"
            ],
            "readOnly": true
          },
          "region": {
            "type": "string",
            "description": "Region where the private endpoint is deployed.\n",
            "readOnly": true
          }
        },
        "readOnly": true,
        "required": [
          "endpointId",
          "providerName",
          "region"
        ]
      },
      "Serverless_Instance_Provider_Settings": {
        "type": "object",
        "description": "Group of settings that configure the provisioned MongoDB serverless instance. The options available relate to the cloud service provider.",
        "properties": {
          "backingProviderName": {
            "type": "string",
            "description": "Cloud service provider on which MongoDB Cloud provisioned the serverless instance.",
            "enum": [
              "AWS",
              "AZURE",
              "GCP"
            ]
          },
          "providerName": {
            "type": "string",
            "default": "SERVERLESS",
            "description": "Human-readable label that identifies the cloud service provider.",
            "enum": [
              "SERVERLESS"
            ]
          },
          "regionName": {
            "type": "string",
            "description": "Human-readable label that identifies the geographic location of your MongoDB serverless instance. The region you choose can affect network latency for clients accessing your databases. For a complete list of region names, see [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/#std-label-amazon-aws), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), and [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/)."
          }
        },
        "required": [
          "providerName"
        ]
      },
      "Source": {
        "type": "object",
        "description": "Document that describes the source of the migration.",
        "properties": {
          "caCertificatePath": {
            "type": "string",
            "description": "Path to the CA certificate that signed SSL certificates use to authenticate to the source cluster."
          },
          "clusterName": {
            "type": "string",
            "description": "Label that identifies the source cluster name."
          },
          "groupId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the source project.",
            "example": "9b43a5b329223c3a1591a678",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$"
          },
          "managedAuthentication": {
            "type": "boolean",
            "description": "Flag that indicates whether MongoDB Automation manages authentication to the source cluster. If true, do not provide values for username and password."
          },
          "password": {
            "type": "string",
            "description": "Password that authenticates the username to the source cluster.",
            "writeOnly": true
          },
          "ssl": {
            "type": "boolean",
            "description": "Flag that indicates whether you have SSL enabled."
          },
          "username": {
            "type": "string",
            "description": "Label that identifies the SCRAM-SHA user that connects to the source cluster.",
            "writeOnly": true
          }
        },
        "required": [
          "clusterName",
          "groupId",
          "managedAuthentication",
          "ssl"
        ]
      },
      "SourceOrgView": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "description": "The ISO-8601-formatted timestamp when Cloud Manager or Ops Manager created the link.",
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "description": "Error message pertaining to the organization sync. Returns null if there are no errors.",
            "readOnly": true
          },
          "lastSyncedAt": {
            "type": "string",
            "description": "The ISO-8601-formatted timestamp when Cloud Manager or Ops Manager last synced with Atlas.",
            "readOnly": true
          },
          "sourceOrgId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization that contains the data you want to migrate.",
            "example": "7e68e12770616e75e6df43d0",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "targetOrg": {
            "$ref": "#/components/schemas/TargetOrgView"
          }
        },
        "required": [
          "sourceOrgId"
        ]
      },
      "StorageEngine": {
        "type": "object",
        "description": "Storage engine set for the specific index. This value can be set only at creation. This option uses the following format: `\"storageEngine\" : { \"<storage-engine-name>\" : \"<options>\" }` MongoDB validates storage engine configuration options when creating indexes. To support replica sets with members with different storage engines, MongoDB logs these options to the oplog during replication. This option applies to all index types.",
        "externalDocs": {
          "description": "MongoDB Server Storage Engines",
          "url": "https://docs.mongodb.com/manual/core/storage-engines/"
        }
      },
      "SynonymSource": {
        "type": "object",
        "description": "Data set that stores the mapping one or more words map to one or more synonyms of those words.",
        "properties": {
          "collection": {
            "type": "string",
            "description": "Human-readable label that identifies the MongoDB collection that stores words and their applicable synonyms."
          }
        },
        "required": [
          "collection"
        ]
      },
      "TargetOrgRequestView": {
        "type": "object",
        "properties": {
          "accessListIps": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "One IP address access list entry associated with the API key."
            }
          }
        }
      },
      "TargetOrgView": {
        "type": "object",
        "properties": {
          "linkToken": {
            "type": "string",
            "description": "Link token that contains all the information required to complete the link."
          }
        },
        "required": [
          "linkToken"
        ]
      },
      "ValidationView": {
        "type": "object",
        "properties": {
          "_id": {
            "$ref": "#/components/schemas/ObjectId"
          },
          "errorMessage": {
            "type": "string",
            "description": "Reason why the validation job failed.",
            "readOnly": true
          },
          "groupId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the project to validate.",
            "example": "ca4d8a18b96b317422974eec",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "sourceGroupId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the source project.",
            "example": "32b6e34b3d91647abb20e7b8",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$"
          },
          "status": {
            "type": "string",
            "description": "State of the specified validation job returned at the time of the request.",
            "enum": [
              "PENDING",
              "SUCCESS",
              "FAILED"
            ],
            "readOnly": true
          }
        }
      },
      "WeeklyScheduleView": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiAtlasOnlineArchiveScheduleView"
          },
          {
            "type": "object",
            "properties": {
              "dayOfWeek": {
                "type": "integer",
                "format": "int32",
                "description": "Day of the week when the scheduled archive starts. The week starts with Monday (`1`) and ends with Sunday (`7`).",
                "maximum": 7,
                "minimum": 1
              },
              "endHour": {
                "type": "integer",
                "format": "int32",
                "description": "Hour of the day when the scheduled window to run one online archive ends.",
                "maximum": 23,
                "minimum": 0
              },
              "endMinute": {
                "type": "integer",
                "format": "int32",
                "description": "Minute of the hour when the scheduled window to run one online archive ends.",
                "maximum": 59,
                "minimum": 0
              },
              "startHour": {
                "type": "integer",
                "format": "int32",
                "description": "Hour of the day when the when the scheduled window to run one online archive starts.",
                "maximum": 23,
                "minimum": 0
              },
              "startMinute": {
                "type": "integer",
                "format": "int32",
                "description": "Minute of the hour when the scheduled window to run one online archive starts.",
                "maximum": 59,
                "minimum": 0
              }
            }
          }
        ]
      },
      "Weights": {
        "type": "object",
        "description": "Relative importance to place upon provided index parameters. This object expresses this as key/value pairs of index parameter and weight to apply to that parameter. You can specify weights for some or all the indexed parameters. The weight must be an integer between 1 and 99,999. MongoDB 5.0 and later can apply **weights** to **text** indexes only."
      },
      "X509Certificate": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          },
          "notAfter": {
            "type": "string",
            "format": "date-time"
          },
          "notBefore": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "X509CertificateView": {
        "type": "object",
        "properties": {
          "notAfter": {
            "type": "string",
            "description": "Latest date that the certificate is valid."
          },
          "notBefore": {
            "type": "string",
            "description": "Earliest date that the certificate is valid."
          }
        }
      },
      "accessLogs": {
        "type": "object",
        "description": "Authentication attempt, one per object, made against the cluster.",
        "properties": {
          "authResult": {
            "type": "boolean",
            "description": "Flag that indicates whether the response should return successful authentication attempts only."
          },
          "authSource": {
            "type": "string",
            "description": "Database against which someone attempted to authenticate.",
            "readOnly": true
          },
          "failureReason": {
            "type": "string",
            "description": "Reason that the authentication failed. Null if authentication succeeded. ",
            "readOnly": true
          },
          "groupId": {
            "type": "string",
            "description": "Unique 24-hexadecimal character string that identifies the project.",
            "example": "32b6e34b3d91647abb20e7b8",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "readOnly": true
          },
          "hostname": {
            "type": "string",
            "description": "Human-readable label that identifies the hostname of the target node that received the authentication attempt.",
            "readOnly": true
          },
          "ipAddress": {
            "type": "string",
            "description": "Internet Protocol address that attempted to authenticate with the database.",
            "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}\\:){7}[0-9a-f]{1,4}$",
            "readOnly": true
          },
          "logLine": {
            "type": "string",
            "description": "Text of the host log concerning the authentication attempt.",
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when someone made this authentication attempt. MongoDB Cloud represents this timestamp in ISO 8601 format in UTC.",
            "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$",
            "readOnly": true
          },
          "username": {
            "type": "string",
            "description": "Username used to authenticate against the database.",
            "readOnly": true
          }
        },
        "readOnly": true
      },
      "autoScalingComputeBase": {
        "type": "object",
        "description": "Collection of settings that configure how a cluster might scale its instance size and whether the cluster can scale down.\nCluster tiers with Low CPU or NVME storage classes can't use auto-scaling.",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone enabled instance size auto-scaling.\n\n-  Set to `true` to enable instance size auto-scaling. If enabled, you must specify a value for **replicationSpecs[n].regionConfigs[m].autoScaling.compute.maxInstanceSize**.\n-  Set to `false` to disable instance size automatic scaling.\n"
          },
          "scaleDownEnabled": {
            "type": "boolean",
            "description": "Flag that indicates whether the instance size may scale down. MongoDB Cloud requires this parameter if `\"replicationSpecs[n].regionConfigs[m].autoScaling.compute.enabled\" : true`. If you enable this option, specify a value for **replicationSpecs[n].regionConfigs[m].autoScaling.compute.minInstanceSize**."
          }
        },
        "title": "Automatic Compute Scaling Specifications",
        "x-examples": {
          "example-1": {
            "maxInstanceSize": "M100",
            "minInstanceSize": "M100"
          }
        }
      },
      "awsKms": {
        "type": "object",
        "description": "Amazon Web Services (AWS) KMS configuration details and encryption at rest configuration set for the specified project.",
        "externalDocs": {
          "description": "Amazon Web Services Key Management Service",
          "url": "https://www.mongodb.com/docs/atlas/security-aws-kms/"
        },
        "properties": {
          "accessKeyID": {
            "type": "string",
            "description": "Unique alphanumeric string that identifies an Identity and Access Management (IAM) access key with permissions required to access your Amazon Web Services (AWS) Customer Master Key (CMK).",
            "example": "019dd98d94b4bb778e7552e4",
            "maxLength": 128,
            "minLength": 16,
            "pattern": "^([\\w]+)$"
          },
          "customerMasterKeyID": {
            "type": "string",
            "description": "Unique alphanumeric string that identifies the Amazon Web Services (AWS) Customer Master Key (CMK) you used to encrypt and decrypt the MongoDB master keys.",
            "maxLength": 2048,
            "minLength": 1,
            "pattern": "^([\\w]+)$"
          },
          "enabled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone enabled encryption at rest for the specified project through Amazon Web Services (AWS) Key Management Service (KMS). To disable encryption at rest using customer key management and remove the configuration details, pass only this parameter with a value of `false`."
          },
          "region": {
            "$ref": "#/components/schemas/ApiAtlasAWSRegionNameView"
          },
          "roleId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies an Amazon Web Services (AWS) Identity and Access Management (IAM) role. This IAM role has the permissions required to manage your AWS customer master key.",
            "example": "1ffa0028ed80f089383c05bf",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$",
            "writeOnly": true
          },
          "secretAccessKey": {
            "type": "string",
            "description": "Human-readable label of the Identity and Access Management (IAM) secret access key with permissions required to access your Amazon Web Services (AWS) customer master key.",
            "writeOnly": true
          },
          "valid": {
            "type": "boolean",
            "description": "Flag that indicates whether the Amazon Web Services (AWS) Key Management Service (KMS) encryption key can encrypt and decrypt data.",
            "readOnly": true
          }
        }
      },
      "azureKeyVault": {
        "type": "object",
        "description": "Details that define the configuration of Encryption at Rest using Azure Key Vault (AKV).",
        "externalDocs": {
          "description": "Azure Key Vault",
          "url": "https://www.mongodb.com/docs/atlas/security-azure-kms/"
        },
        "properties": {
          "azureEnvironment": {
            "type": "string",
            "description": "Azure environment in which your account credentials reside."
          },
          "clientID": {
            "type": "string",
            "format": "uuid",
            "description": "Unique 36-hexadecimal character string that identifies an Azure application associated with your Azure Active Directory tenant.",
            "maxLength": 36,
            "minLength": 36,
            "pattern": "^[0-9A-F]{8}-([0-9A-F]{4}-){3}[0-9A-F]{12}$"
          },
          "enabled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone enabled encryption at rest for the specified  project. To disable encryption at rest using customer key management and remove the configuration details, pass only this parameter with a value of `false`."
          },
          "keyIdentifier": {
            "type": "string",
            "description": "Web address with a unique key that identifies for your Azure Key Vault.",
            "example": "https://EXAMPLEKeyVault.vault.azure.net/keys/EXAMPLEKey/d891821e3d364e9eb88fbd3d11807b86"
          },
          "keyVaultName": {
            "type": "string",
            "description": "Unique string that identifies the Azure Key Vault that contains your key."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "Name of the Azure resource group that contains your Azure Key Vault."
          },
          "secret": {
            "type": "string",
            "description": "Private data that you need secured and that belongs to the specified Azure Key Vault (AKV) tenant (**azureKeyVault.tenantID**). This data can include any type of sensitive data such as passwords, database connection strings, API keys, and the like. AKV stores this information as encrypted binary data.",
            "externalDocs": {
              "description": "Azure Key Vault Secrets",
              "url": "https://docs.microsoft.com/en-us/azure/key-vault/secrets/about-secrets"
            },
            "writeOnly": true
          },
          "subscriptionID": {
            "type": "string",
            "format": "uuid",
            "description": "Unique 36-hexadecimal character string that identifies your Azure subscription.",
            "maxLength": 36,
            "minLength": 36,
            "pattern": "^[0-9A-F]{8}-([0-9A-F]{4}-){3}[0-9A-F]{12}$"
          },
          "tenantID": {
            "type": "string",
            "format": "uuid",
            "description": "Unique 36-hexadecimal character string that identifies the Azure Active Directory tenant within your Azure subscription.",
            "maxLength": 36,
            "minLength": 36,
            "pattern": "^[0-9A-F]{8}-([0-9A-F]{4}-){3}[0-9A-F]{12}$"
          },
          "valid": {
            "type": "boolean",
            "description": "Flag that indicates whether the Azure encryption key can encrypt and decrypt data.",
            "readOnly": true
          }
        }
      },
      "charFilterhtmlStrip": {
        "type": "object",
        "description": "Filter that strips out HTML constructs.",
        "properties": {
          "ignoredTags": {
            "type": "array",
            "description": "The HTML tags that you want to exclude from filtering.",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this character filter type.",
            "enum": [
              "htmlStrip"
            ]
          }
        },
        "required": [
          "type"
        ],
        "title": "htmlStrip"
      },
      "charFiltericuNormalize": {
        "type": "object",
        "description": "Filter that processes normalized text with the ICU Normalizer. It is based on Lucene's ICUNormalizer2CharFilter.",
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this character filter type.",
            "enum": [
              "icuNormalize"
            ]
          }
        },
        "required": [
          "type"
        ],
        "title": "icuNormalize"
      },
      "charFiltermapping": {
        "type": "object",
        "description": "Filter that applies normalization mappings that you specify to characters.",
        "properties": {
          "mappings": {
            "type": "object",
            "description": "Comma-separated list of mappings. A mapping indicates that one character or group of characters should be substituted for another, using the following format:\n\n`<original> : <replacement>`",
            "properties": {
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this character filter type.",
            "enum": [
              "mapping"
            ]
          }
        },
        "required": [
          "mappings",
          "type"
        ],
        "title": "mapping"
      },
      "charFilterpersian": {
        "type": "object",
        "description": "Filter that replaces instances of a zero-width non-joiner with an ordinary space. It is based on Lucene's PersianCharFilter.",
        "externalDocs": {
          "description": "PersianCharFilter",
          "url": "https://lucene.apache.org/core/8_0_0/analyzers-common/org/apache/lucene/analysis/fa/PersianCharFilter.html"
        },
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this character filter type.",
            "enum": [
              "persian"
            ]
          }
        },
        "required": [
          "type"
        ],
        "title": "persian"
      },
      "collation": {
        "type": "object",
        "description": "One or more settings that specify language-specific rules to compare strings within this index.",
        "externalDocs": {
          "description": "Collation Options",
          "url": "https://docs.mongodb.com/manual/reference/method/db.collection.createIndex/#options"
        },
        "properties": {
          "alternate": {
            "type": "string",
            "default": "non-ignorable",
            "description": "Method to handle whitespace and punctuation as base characters for purposes of comparison.\n\n| Value | Evaluate Whitespace and Punctuation as Base Characters |\n|---|---|\n| `\"non-ignorable\"` | Yes |\n| `\"shifted\"` | No. MongoDB Cloud distinguishes these characters when `\"strength\" > 3`. |\n",
            "enum": [
              "non-ignorable",
              "shifted"
            ]
          },
          "backwards": {
            "type": "boolean",
            "default": false,
            "description": "Flag that indicates whether strings with diacritics sort from back of the string. Some French dictionary orders strings in this way.\n\n| Value | String Comparison Method |\n |---|---|\n| `true` | Compare from back to front. |\n| `false` | Compare from front to back. |\n"
          },
          "caseFirst": {
            "type": "string",
            "default": "off",
            "description": "Method to handle sort order of case differences during tertiary level comparisons.\n\n| Value | Sort Order Method |\n |---|---|\n | `\"upper\"` | Uppercase sorts before lowercase. |\n | `\"lower\"` | Lowercase sorts before uppercase. |\n | `\"off\"` | Similar to \"lower\" with slight differences. |\n",
            "enum": [
              "lower",
              "off",
              "upper"
            ]
          },
          "caseLevel": {
            "type": "boolean",
            "default": false,
            "description": "Flag that indicates whether to include case comparison when `\"strength\" : 1` or `\"strength\" : 2`.\n\n| Value | Compare case at level 1 or 2? | Strength Level | Comparisons Include |\n |---|---|---|---|\n | true | Yes | 1 | Base characters and case. |\n |  |  | 2 | Base characters, diacritics (and possible other secondary differences),   and case. |\n | false | No |  |  |\n"
          },
          "locale": {
            "type": "string",
            "description": "International Components for Unicode (ICU) code that represents a localized language. To specify simple binary comparison, set `\"locale\" : \"simple\"`.",
            "enum": [
              "af",
              "sq",
              "am",
              "ar",
              "hy",
              "as",
              "az",
              "bn",
              "be",
              "bs",
              "bs_Cyrl",
              "bg",
              "my",
              "ca",
              "chr",
              "zh",
              "zh_Hant",
              "hr",
              "cs",
              "da",
              "nl",
              "dz",
              "en",
              "en_US",
              "en_US_POSIX",
              "eo",
              "et",
              "ee",
              "fo",
              "fil",
              "fi_FI",
              "fr",
              "fr_CA",
              "gl",
              "ka",
              "de",
              "de_AT",
              "el",
              "gu",
              "ha",
              "haw",
              "he",
              "hi",
              "hu",
              "is",
              "ig",
              "smn",
              "id",
              "ga",
              "it",
              "ja",
              "kl",
              "kn",
              "kk",
              "km",
              "kok",
              "ko",
              "ky",
              "lk",
              "lo",
              "lv",
              "li",
              "lt",
              "dsb",
              "lb",
              "mk",
              "ms",
              "ml",
              "mt",
              "mr",
              "mn",
              "ne",
              "se",
              "nb",
              "nn",
              "or",
              "om",
              "ps",
              "fa",
              "fa_AF",
              "pl",
              "pt",
              "pa",
              "ro",
              "ru",
              "sr",
              "sr_Latn",
              "si",
              "sk",
              "sl",
              "es",
              "sw",
              "sv",
              "ta",
              "te",
              "th",
              "bo",
              "to",
              "tr",
              "uk",
              "hsb",
              "ur",
              "ug",
              "vi",
              "wae",
              "cy",
              "yi",
              "yo",
              "zu"
            ],
            "pattern": "^([a-z]{2,3}(_[A-Za-z]{2,6})*(\\@collation\\=[a-z]+)?)$"
          },
          "maxVariable": {
            "type": "string",
            "description": "Field that indicates which characters can be ignored when `\"alternate\" : \"shifted\"`. This has no affect if `\"alternate\" : \"non-ignorable\"`.\n\n| Value | Ignore |\n |---|---|\n| `\"punct\"` | Both whitespace and punctuation |\n| `\"space\"` | Whitespace |\n",
            "enum": [
              "punct",
              "space"
            ]
          },
          "normalization": {
            "type": "boolean",
            "default": false,
            "description": "Flag that indicates whether to check if the text requires normalization and then perform it. Most text doesn't require this normalization processing.\n\n| Value | Normalization Method |\n |---|---|\n| `true` | Yes, check if fully normalized and perform normalization to compare text. |\n| `false` | No, don't check. |\n"
          },
          "numericOrdering": {
            "type": "boolean",
            "default": false,
            "description": "Flag that indicates whether to compare sequences of digits as numbers or as strings.\n\n| Value | Comparison Method |\n |---|---|\n| `true` | Compare as numbers. This results in `10 > 2`. |\n| `false` | Compare as strings. This results in `\"10\" < \"2\"`. |\n"
          },
          "strength": {
            "type": "number",
            "default": 3,
            "description": "Degree of comparison to perform when sorting words. MongoDB Cloud accepts the following values:\n\n| Value | Comparison Level | Comparison Method |\n|---|---|---|\n| 1 | Primary | Compares the base characters only, ignoring other differences such as diacritics and case. |\n| 2 | Secondary | Compares base characters (primary) and diacritics (secondary). Primary differences take precedence over secondary differences. |\n| 3 | Tertiary | Compares base characters (primary), diacritics (secondary), and case and variants (tertiary). Differences between base characters takes precedence over secondary differences which take precedence over tertiary differences. |\n| 4 | Quaternary | Compares for the specific use case to consider punctuation when levels 1 through 3 ignore punctuation or for processing Japanese text. |\n| 5 | Identical | Compares for the specific use case of tie breaker. |\n",
            "maximum": 5,
            "minimum": 1
          }
        },
        "required": [
          "locale"
        ],
        "writeOnly": true
      },
      "currentValue": {
        "type": "object",
        "description": "Value of the metric that triggered the alert. The resource returns this parameter for alerts of events impacting hosts.",
        "properties": {
          "number": {
            "type": "number",
            "description": "Amount of the **metricName** recorded at the time of the event. This value triggered the alert.",
            "readOnly": true
          },
          "units": {
            "type": "string",
            "description": "Element used to express the quantity in **currentValue.number**. This can be an element of time, storage capacity, and the like. This metric triggered the alert.",
            "enum": [
              "BITS",
              "BYTES",
              "DAYS",
              "GIGABITS",
              "GIGABYTES",
              "HOURS",
              "KILOBITS",
              "KILOBYTES",
              "MEGABITS",
              "MEGABYTES",
              "MILLISECONDS",
              "MINUTES",
              "PETABYTES",
              "RAW",
              "SECONDS",
              "TERABYTES"
            ],
            "readOnly": true
          }
        },
        "readOnly": true
      },
      "customData": {
        "type": "object",
        "description": "Collection of key-value pairs that represent custom data to add to the metadata file that MongoDB Cloud uploads to the bucket when the export job finishes.",
        "properties": {
          "key": {
            "type": "string",
            "description": "Key for the metadata file that MongoDB Cloud uploads to the bucket when the export job finishes."
          },
          "value": {
            "type": "string",
            "description": "Value for the key to include in file that MongoDB Cloud uploads to the bucket when the export job finishes."
          }
        }
      },
      "featureUsages": {
        "type": "object",
        "description": "MongoDB Cloud features associated with this Amazon Web Services (AWS) Identity and Access Management (IAM) role.",
        "discriminator": {
          "mapping": {
            "ATLAS_DATA_LAKE": "#/components/schemas/ATLAS_DATA_LAKE",
            "ENCRYPTION_AT_REST": "#/components/schemas/ENCRYPTION_AT_REST",
            "EXPORT_SNAPSHOT": "#/components/schemas/EXPORT_SNAPSHOT"
          },
          "propertyName": "featureType"
        },
        "properties": {
          "featureId": {
            "$ref": "#/components/schemas/ApiAtlasCloudProviderAccessFeatureUsageFeatureIdView"
          },
          "featureType": {
            "type": "string"
          }
        },
        "required": [
          "featureType"
        ]
      },
      "googleCloudKms": {
        "type": "object",
        "description": "Details that define the configuration of Encryption at Rest using Google Cloud Key Management Service (KMS).",
        "externalDocs": {
          "description": "Google Cloud Key Management Service",
          "url": "https://www.mongodb.com/docs/atlas/security-gcp-kms/"
        },
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Flag that indicates whether someone enabled encryption at rest for the specified  project. To disable encryption at rest using customer key management and remove the configuration details, pass only this parameter with a value of `false`."
          },
          "keyVersionResourceID": {
            "type": "string",
            "description": "Resource path that displays the key version resource ID for your Google Cloud KMS.",
            "example": "projects/my-project-common-0/locations/us-east4/keyRings/my-key-ring-0/cryptoKeys/my-key-0/cryptoKeyVersions/1"
          },
          "serviceAccountKey": {
            "type": "string",
            "description": "JavaScript Object Notation (JSON) object that contains the Google Cloud Key Management Service (KMS). Format the JSON as a string and not as an object.",
            "externalDocs": {
              "description": "Google Cloud Authentication",
              "url": "https://cloud.google.com/docs/authentication/getting-started"
            },
            "writeOnly": true
          },
          "valid": {
            "type": "boolean",
            "description": "Flag that indicates whether the Google Cloud Key Management Service (KMS) encryption key can encrypt and decrypt data.",
            "readOnly": true
          }
        }
      },
      "partialFilterExpression": {
        "type": "object",
        "description": "Rules that limit the documents that the index references to a filter expression. All MongoDB index types accept a **partialFilterExpression** option. **partialFilterExpression** can include following expressions:\n\n- equality (`\"parameter\" : \"value\"` or using the `$eq` operator)\n- `\"$exists\": true`\n, maximum: `$gt`, `$gte`, `$lt`, `$lte` comparisons\n- `$type`\n- `$and` (top-level only)\n This option applies to all index types."
      },
      "provider": {
        "type": "object",
        "description": "Group of settings that define where the data is stored.",
        "discriminator": {
          "mapping": {
            "ATLAS": "#/components/schemas/ApiAtlasDataLakeAtlasStoreView",
            "HTTP": "#/components/schemas/ApiAtlasDataLakeHTTPStoreView",
            "S3": "#/components/schemas/ApiAtlasDataLakeS3StoreView"
          },
          "propertyName": "provider"
        },
        "properties": {
          "name": {
            "type": "string",
            "description": "Human-readable label that identifies the data store. The **databases.[n].collections.[n].dataSources.[n].storeName** field references this values as part of the mapping configuration. To use MongoDB Cloud as a data store, the data lake requires a serverless instance or an `M10` or higher cluster."
          },
          "provider": {
            "type": "string"
          }
        },
        "required": [
          "provider"
        ]
      },
      "providerName": {
        "type": "object",
        "description": "Update view for a serverless tenant endpoint.",
        "discriminator": {
          "mapping": {
            "AWS": "#/components/schemas/ApiAtlasServerlessAWSTenantEndpointUpdateView",
            "AZURE": "#/components/schemas/ApiAtlasServerlessAzureTenantEndpointUpdateView"
          },
          "propertyName": "providerName"
        },
        "properties": {
          "cloudProviderEndpointId": {
            "type": "string",
            "description": "Unique string that identifies the private endpoint's network interface.",
            "pattern": "^(vpce-[0-9a-f]{17}|\\/subscriptions\\/[0-9a-f]{8}-([0-9a-f]{4}-){3}[0-9a-f]{12}\\/resource[gG]roups\\/private[Ll]ink\\/providers\\/Microsoft\\.Network\\/privateEndpoints\\/[-\\w._()]+)$",
            "writeOnly": true
          },
          "comment": {
            "type": "string",
            "description": "Human-readable comment associated with the private endpoint.",
            "maxLength": 80,
            "writeOnly": true
          },
          "providerName": {
            "type": "string"
          }
        },
        "required": [
          "providerName"
        ]
      },
      "slowQueries": {
        "type": "object",
        "description": "Details of one slow query that the Performance Advisor detected.",
        "properties": {
          "line": {
            "type": "string",
            "description": "Text of the MongoDB log related to this slow query.",
            "readOnly": true
          },
          "namespace": {
            "type": "string",
            "description": "Human-readable label that identifies the namespace on the specified host. The resource expresses this parameter value as `<database>.<collection>`.",
            "readOnly": true
          }
        },
        "readOnly": true
      },
      "tokenFilterasciiFolding": {
        "type": "object",
        "description": "Filter that converts alphabetic, numeric, and symbolic unicode characters that are not in the Basic Latin Unicode block to their ASCII equivalents, if available.",
        "externalDocs": {
          "description": "Basic Latin Unicode block",
          "url": "https://en.wikipedia.org/wiki/Basic_Latin_(Unicode_block)"
        },
        "properties": {
          "originalTokens": {
            "type": "string",
            "default": "omit",
            "description": "Value that indicates whether to include or omit the original tokens in the output of the token filter.\n\nChoose `include` if you want to support queries on both the original tokens as well as the converted forms.\n\n Choose `omit` if you want to query only on the converted forms of the original tokens.",
            "enum": [
              "omit",
              "include"
            ]
          },
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this token filter type.",
            "enum": [
              "asciiFolding"
            ]
          }
        },
        "required": [
          "type"
        ],
        "title": "asciiFolding"
      },
      "tokenFilterdaitchMokotoffSoundex": {
        "type": "object",
        "description": "Filter that creates tokens for words that sound the same based on the Daitch-Mokotoff Soundex phonetic algorithm. This filter can generate multiple encodings for each input, where each encoded token is a 6 digit number.\n\n**NOTE**: Don't use the **daitchMokotoffSoundex** token filter in:\n\n-Synonym or autocomplete mapping definitions\n- Operators where **fuzzy** is enabled. Atlas Search supports the **fuzzy** option only for the **autocomplete**, **term**, and **text** operators.",
        "externalDocs": {
          "description": "Daitch-Mokotoff Soundex phonetic algorithm",
          "url": "https://en.wikipedia.org/wiki/Daitch%E2%80%93Mokotoff_Soundex"
        },
        "properties": {
          "originalTokens": {
            "type": "string",
            "default": "include",
            "description": "Value that indicates whether to include or omit the original tokens in the output of the token filter.\n\nChoose `include` if you want to support queries on both the original tokens as well as the converted forms.\n\n Choose `omit` if you want to query only on the converted forms of the original tokens.",
            "enum": [
              "omit",
              "include"
            ]
          },
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this token filter type.",
            "enum": [
              "daitchMokotoffSoundex"
            ]
          }
        },
        "required": [
          "type"
        ],
        "title": "daitchMokotoffSoundex"
      },
      "tokenFilteredgeGram": {
        "type": "object",
        "description": "Filter that tokenizes input from the left side, or \"edge\", of a text input into n-grams of configured sizes. You can't use this token filter in synonym or autocomplete mapping definitions.",
        "properties": {
          "maxGram": {
            "type": "integer",
            "description": "Value that specifies the maximum length of generated n-grams. This value must be greater than or equal to **minGram**."
          },
          "minGram": {
            "type": "integer",
            "description": "Value that specifies the minimum length of generated n-grams. This value must be less than or equal to **maxGram**."
          },
          "termNotInBounds": {
            "type": "string",
            "default": "omit",
            "description": "Value that indicates whether to index tokens shorter than **minGram** or longer than **maxGram**.",
            "enum": [
              "omit",
              "include"
            ]
          },
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this token filter type.",
            "enum": [
              "edgeGram"
            ]
          }
        },
        "required": [
          "maxGram",
          "minGram",
          "type"
        ],
        "title": "edgeGram"
      },
      "tokenFiltericuFolding": {
        "type": "object",
        "description": "Filter that applies character folding from Unicode Technical Report #30.",
        "externalDocs": {
          "description": "Unicode Technical Report #30",
          "url": "http://www.unicode.org/reports/tr30/tr30-4.html"
        },
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this token filter type.",
            "enum": [
              "icuFolding"
            ]
          }
        },
        "required": [
          "type"
        ],
        "title": "icuFolding"
      },
      "tokenFiltericuNormalizer": {
        "type": "object",
        "description": "Filter that normalizes tokens using a standard Unicode Normalization Mode.",
        "externalDocs": {
          "description": "Unicode Normalization Mode",
          "url": "https://unicode.org/reports/tr15/"
        },
        "properties": {
          "normalizationForm": {
            "type": "string",
            "default": "nfc",
            "description": "Normalization form to apply.",
            "enum": [
              "nfd",
              "nfc",
              "nfkd",
              "nfkc"
            ]
          },
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this token filter type.",
            "enum": [
              "icuNormalizer"
            ]
          }
        },
        "required": [
          "type"
        ],
        "title": "icuNormalizer"
      },
      "tokenFilterlength": {
        "type": "object",
        "description": "Filter that removes tokens that are too short or too long.",
        "properties": {
          "max": {
            "type": "integer",
            "default": 255,
            "description": "Number that specifies the maximum length of a token. Value must be greater than or equal to **min**."
          },
          "min": {
            "type": "integer",
            "default": 0,
            "description": "Number that specifies the minimum length of a token. This value must be less than or equal to **max**."
          },
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this token filter type.",
            "enum": [
              "length"
            ]
          }
        },
        "required": [
          "type"
        ],
        "title": "length"
      },
      "tokenFilterlowercase": {
        "type": "object",
        "description": "Filter that normalizes token text to lowercase.",
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this token filter type.",
            "enum": [
              "lowercase"
            ]
          }
        },
        "required": [
          "type"
        ],
        "title": "lowercase"
      },
      "tokenFilternGram": {
        "type": "object",
        "description": "Filter that tokenizes input into n-grams of configured sizes. You can't use this token filter in synonym or autocomplete mapping definitions.",
        "properties": {
          "maxGram": {
            "type": "integer",
            "description": "Value that specifies the maximum length of generated n-grams. This value must be greater than or equal to **minGram**."
          },
          "minGram": {
            "type": "integer",
            "description": "Value that specifies the minimum length of generated n-grams. This value must be less than or equal to **maxGram**."
          },
          "termNotInBounds": {
            "type": "string",
            "default": "omit",
            "description": "Value that indicates whether to index tokens shorter than **minGram** or longer than **maxGram**.",
            "enum": [
              "omit",
              "include"
            ]
          },
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this token filter type.",
            "enum": [
              "nGram"
            ]
          }
        },
        "required": [
          "maxGram",
          "minGram",
          "type"
        ],
        "title": "nGram"
      },
      "tokenFilterregex": {
        "type": "object",
        "description": "Filter that applies a regular expression to each token, replacing matches with a specified string.",
        "properties": {
          "matches": {
            "type": "string",
            "description": "Value that indicates whether to replace only the first matching pattern or all matching patterns.",
            "enum": [
              "all",
              "first"
            ]
          },
          "pattern": {
            "type": "string",
            "description": "Regular expression pattern to apply to each token."
          },
          "replacement": {
            "type": "string",
            "description": "Replacement string to substitute wherever a matching pattern occurs."
          },
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this token filter type.",
            "enum": [
              "regex"
            ]
          }
        },
        "required": [
          "matches",
          "pattern",
          "replacement",
          "type"
        ],
        "title": "regex"
      },
      "tokenFilterreverse": {
        "type": "object",
        "description": "Filter that reverses each string token.",
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this token filter type.",
            "enum": [
              "reverse"
            ]
          }
        },
        "required": [
          "type"
        ],
        "title": "reverse"
      },
      "tokenFiltershingle": {
        "type": "object",
        "description": "Filter that constructs shingles (token n-grams) from a series of tokens. You can't use this token filter in synonym or autocomplete mapping definitions.",
        "properties": {
          "maxShingleSize": {
            "type": "integer",
            "description": "Value that specifies the maximum number of tokens per shingle. This value must be greater than or equal to **minShingleSize**."
          },
          "minShingleSize": {
            "type": "integer",
            "description": "Value that specifies the minimum number of tokens per shingle. This value must be less than or equal to **maxShingleSize**."
          },
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this token filter type.",
            "enum": [
              "shingle"
            ]
          }
        },
        "required": [
          "maxShingleSize",
          "minShingleSize",
          "type"
        ],
        "title": "shingle"
      },
      "tokenFiltersnowballStemming": {
        "type": "object",
        "description": "Filter that stems tokens using a Snowball-generated stemmer.",
        "externalDocs": {
          "description": "Snowball-generated stemmer",
          "url": "https://snowballstem.org/"
        },
        "properties": {
          "stemmerName": {
            "type": "string",
            "description": "Snowball-generated stemmer to use.",
            "enum": [
              "arabic",
              "armenian",
              "basque",
              "catalan",
              "danish",
              "dutch",
              "english",
              "finnish",
              "french",
              "german",
              "german2",
              "hungarian",
              "irish",
              "italian",
              "kp",
              "lithuanian",
              "lovins",
              "norwegian",
              "porter",
              "portuguese",
              "romanian",
              "russian",
              "spanish",
              "swedish",
              "turkish"
            ]
          },
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this token filter type.",
            "enum": [
              "snowballStemming"
            ]
          }
        },
        "required": [
          "stemmerName",
          "type"
        ],
        "title": "snowballStemming"
      },
      "tokenFilterstopword": {
        "type": "object",
        "description": "Filter that removes tokens that correspond to the specified stop words. This token filter doesn't analyze the stop words that you specify.",
        "properties": {
          "ignoreCase": {
            "type": "boolean",
            "default": true,
            "description": "Flag that indicates whether to ignore the case of stop words when filtering the tokens to remove."
          },
          "tokens": {
            "type": "array",
            "description": "The stop words that correspond to the tokens to remove. Value must be one or more stop words.",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this token filter type.",
            "enum": [
              "stopword"
            ]
          }
        },
        "required": [
          "tokens",
          "type"
        ],
        "title": "stopword"
      },
      "tokenFiltertrim": {
        "type": "object",
        "description": "Filter that trims leading and trailing whitespace from tokens.",
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this token filter type.",
            "enum": [
              "trim"
            ]
          }
        },
        "required": [
          "type"
        ],
        "title": "trim"
      },
      "tokenizeredgeGram": {
        "type": "object",
        "description": "Tokenizer that splits input from the left side, or \"edge\", of a text input into n-grams of given sizes. You can't use the edgeGram tokenizer in synonym or autocomplete mapping definitions.",
        "properties": {
          "maxGram": {
            "type": "integer",
            "description": "Characters to include in the longest token that Atlas Search creates."
          },
          "minGram": {
            "type": "integer",
            "description": "Characters to include in the shortest token that Atlas Search creates."
          },
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this tokenizer type.",
            "enum": [
              "edgeGram"
            ]
          }
        },
        "required": [
          "maxGram",
          "minGram",
          "type"
        ],
        "title": "edgeGram"
      },
      "tokenizerkeyword": {
        "type": "object",
        "description": "Tokenizer that combines the entire input as a single token.",
        "properties": {
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this tokenizer type.",
            "enum": [
              "keyword"
            ]
          }
        },
        "required": [
          "type"
        ],
        "title": "keyword"
      },
      "tokenizernGram": {
        "type": "object",
        "description": "Tokenizer that splits input into text chunks, or \"n-grams\", of into given sizes. You can't use the nGram tokenizer in synonym or autocomplete mapping definitions.",
        "properties": {
          "maxGram": {
            "type": "integer",
            "description": "Characters to include in the longest token that Atlas Search creates."
          },
          "minGram": {
            "type": "integer",
            "description": "Characters to include in the shortest token that Atlas Search creates."
          },
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this tokenizer type.",
            "enum": [
              "edgeGram"
            ]
          }
        },
        "required": [
          "maxGram",
          "minGram",
          "type"
        ],
        "title": "nGram"
      },
      "tokenizerregexCaptureGroup": {
        "type": "object",
        "description": "Tokenizer that uses a regular expression pattern to extract tokens.",
        "properties": {
          "group": {
            "type": "integer",
            "description": "Index of the character group within the matching expression to extract into tokens. Use `0` to extract all character groups."
          },
          "pattern": {
            "type": "string",
            "description": "Regular expression to match against."
          },
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this tokenizer type.",
            "enum": [
              "regexCaptureGroup"
            ]
          }
        },
        "required": [
          "group",
          "pattern",
          "type"
        ],
        "title": "regexCaptureGroup"
      },
      "tokenizerregexSplit": {
        "type": "object",
        "description": "Tokenizer that splits tokens using a regular-expression based delimiter.",
        "properties": {
          "pattern": {
            "type": "string",
            "description": "Regular expression to match against."
          },
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this tokenizer type.",
            "enum": [
              "regexSplit"
            ]
          }
        },
        "required": [
          "pattern",
          "type"
        ],
        "title": "regexSplit"
      },
      "tokenizerstandard": {
        "type": "object",
        "description": "Tokenizer that splits tokens based on word break rules from the Unicode Text Segmentation algorithm.",
        "externalDocs": {
          "description": "Unicode Text Segmentation Algorithm",
          "url": "https://www.unicode.org/L2/L2019/19034-uax29-34-draft.pdf"
        },
        "properties": {
          "maxTokenLength": {
            "type": "integer",
            "default": 255,
            "description": "Maximum number of characters in a single token. Tokens greater than this length are split at this length into multiple tokens."
          },
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this tokenizer type.",
            "enum": [
              "standard"
            ]
          }
        },
        "required": [
          "type"
        ],
        "title": "standard"
      },
      "tokenizeruaxUrlEmail": {
        "type": "object",
        "description": "Tokenizer that creates tokens from URLs and email addresses. Although this tokenizer uses word break rules from the Unicode Text Segmentation algorithm, we recommend using it only when the indexed field value includes URLs and email addresses. For fields that don't include URLs or email addresses, use the **standard** tokenizer to create tokens based on word break rules.",
        "externalDocs": {
          "description": "Unicode Text Segmentation Algorithm",
          "url": "https://www.unicode.org/L2/L2019/19034-uax29-34-draft.pdf"
        },
        "properties": {
          "maxTokenLength": {
            "type": "integer",
            "default": 255,
            "description": "Maximum number of characters in a single token. Tokens greater than this length are split at this length into multiple tokens."
          },
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this tokenizer type.",
            "enum": [
              "uaxUrlEmail"
            ]
          }
        },
        "required": [
          "type"
        ],
        "title": "uaxUrlEmail"
      },
      "tokenizerwhitespace": {
        "type": "object",
        "description": "Tokenizer that creates tokens based on occurrences of whitespace between words.",
        "properties": {
          "maxTokenLength": {
            "type": "integer",
            "default": 255,
            "description": "Maximum number of characters in a single token. Tokens greater than this length are split at this length into multiple tokens."
          },
          "type": {
            "type": "string",
            "description": "Human-readable label that identifies this tokenizer type.",
            "enum": [
              "whitespace"
            ]
          }
        },
        "required": [
          "type"
        ],
        "title": "whitespace"
      }
    },
    "securitySchemes": {
      "DigestAuth": {
        "scheme": "digest",
        "type": "http"
      }
    }
  }
}