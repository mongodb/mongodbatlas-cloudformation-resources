{
  "additionalProperties": false,
  "definitions": {
    "": {
      "additionalProperties": false
    },
    "ApiAtlasAWSCloudProviderContainerView": {
      "type": "object",
      "properties": {
        "ApiKeys": {
          "$ref": "#/definitions/ApiKeyDefinition"
        },
        "AtlasCidrBlock": {
          "type": "string",
          "description": "IP addresses expressed in Classless Inter-Domain Routing (CIDR) notation that MongoDB Cloud uses for the network peering containers in your project. MongoDB Cloud assigns all of the project's clusters deployed to this cloud provider an IP address from this range. MongoDB Cloud locks this value if an M10 or greater cluster or a network peering connection exists in this project.\n\nThese CIDR blocks must fall within the ranges reserved per RFC 1918. AWS and Azure further limit the block to between the `/24` and  `/21` ranges.\n\nTo modify the CIDR block, the target project cannot have:\n\n- Any M10 or greater clusters\n- Any other VPC peering connections\n\n You can also create a new project and create a network peering connection to set the desired MongoDB Cloud network peering container CIDR block for that project. MongoDB Cloud limits the number of MongoDB nodes per network peering connection based on the CIDR block and the region selected for the project.\n\n **Example:** A project in an Amazon Web Services (AWS) region supporting three availability zones and an MongoDB CIDR network peering container block of limit of `/24` equals 27 three-node replica sets.",
          "pattern": "^((([0-9]{1,3}\\.){3}[0-9]{1,3})|([\\:]{0,2}([0-9a-f]{1,4}\\:){0,7}[0-9a-f]{1,4}[\\:]{0,2}))((%2[fF]|\\/)[0-9]{1,3})+$"
        },
        "RegionName": {
          "type": "string",
          "description": "Geographic area that Amazon Web Services (AWS) defines to which MongoDB Cloud deployed this network peering container.",
          "enum": [
            "US_EAST_1",
            "US_EAST_2",
            "US_WEST_1",
            "US_WEST_2",
            "CA_CENTRAL_1",
            "EU_NORTH_1",
            "EU_WEST_1",
            "EU_WEST_2",
            "EU_WEST_3",
            "EU_CENTRAL_1",
            "SA_EAST_1",
            "AP_EAST_1",
            "AP_SOUTHEAST_2",
            "AP_SOUTHEAST_3",
            "AP_NORTHEAST_1",
            "AP_NORTHEAST_2",
            "AP_NORTHEAST_3",
            "AP_SOUTHEAST_1",
            "AP_SOUTH_1",
            "CN_NORTH_1",
            "CN_NORTHWEST_1",
            "ME_SOUTH_1",
            "AF_SOUTH_1",
            "EU_SOUTH_1",
            "GLOBAL",
            "US_GOV_WEST_1",
            "US_GOV_EAST_1"
          ]
        },
        "VpcId": {
          "type": "string",
          "description": "Unique string that identifies the MongoDB Cloud VPC on AWS.",
          "minLength": 5,
          "pattern": "^vpc-[0-9a-f]{17}$"
        }
      },
      "additionalProperties": false
    },
    "ApiAtlasAzureCloudProviderContainerView": {
      "type": "object",
      "properties": {
        "ApiKeys": {
          "$ref": "#/definitions/ApiKeyDefinition"
        },
        "AtlasCidrBlock": {
          "type": "string",
          "description": "IP addresses expressed in Classless Inter-Domain Routing (CIDR) notation that MongoDB Cloud uses for the network peering containers in your project. MongoDB Cloud assigns all of the project's clusters deployed to this cloud provider an IP address from this range. MongoDB Cloud locks this value if an M10 or greater cluster or a network peering connection exists in this project.\n\nThese CIDR blocks must fall within the ranges reserved per RFC 1918. AWS and Azure further limit the block to between the `/24` and  `/21` ranges.\n\nTo modify the CIDR block, the target project cannot have:\n\n- Any M10 or greater clusters\n- Any other VPC peering connections\n\n You can also create a new project and create a network peering connection to set the desired MongoDB Cloud network peering container CIDR block for that project. MongoDB Cloud limits the number of MongoDB nodes per network peering connection based on the CIDR block and the region selected for the project.\n\n **Example:** A project in an Amazon Web Services (AWS) region supporting three availability zones and an MongoDB CIDR network peering container block of limit of `/24` equals 27 three-node replica sets.",
          "pattern": "^((([0-9]{1,3}\\.){3}[0-9]{1,3})|([\\:]{0,2}([0-9a-f]{1,4}\\:){0,7}[0-9a-f]{1,4}[\\:]{0,2}))((%2[fF]|\\/)[0-9]{1,3})+$"
        },
        "AzureSubscriptionId": {
          "type": "string",
          "description": "Unique string that identifies the Azure subscription in which the MongoDB Cloud VNet resides.",
          "pattern": "^[0-9A-F]{8}-([0-9A-F]{4}-){3}[0-9A-F]{12}$"
        },
        "Region": {
          "type": "string",
          "description": "Azure region to which MongoDB Cloud deployed this network peering container.",
          "enum": [
            "US_CENTRAL",
            "US_EAST",
            "US_EAST_2",
            "US_NORTH_CENTRAL",
            "US_WEST",
            "US_SOUTH_CENTRAL",
            "EUROPE_NORTH",
            "EUROPE_WEST",
            "US_WEST_CENTRAL",
            "US_WEST_2",
            "US_WEST_3",
            "CANADA_EAST",
            "CANADA_CENTRAL",
            "BRAZIL_SOUTH",
            "BRAZIL_SOUTHEAST",
            "AUSTRALIA_EAST",
            "AUSTRALIA_SOUTH_EAST",
            "AUSTRALIA_CENTRAL",
            "AUSTRALIA_CENTRAL_2",
            "UAE_NORTH",
            "GERMANY_CENTRAL",
            "GERMANY_NORTH_EAST",
            "GERMANY_WEST_CENTRAL",
            "GERMANY_NORTH",
            "SWITZERLAND_NORTH",
            "SWITZERLAND_WEST",
            "SWEDEN_CENTRAL",
            "SWEDEN_SOUTH",
            "UK_SOUTH",
            "UK_WEST",
            "INDIA_CENTRAL",
            "INDIA_WEST",
            "INDIA_SOUTH",
            "CHINA_EAST",
            "CHINA_NORTH",
            "ASIA_EAST",
            "JAPAN_EAST",
            "JAPAN_WEST",
            "ASIA_SOUTH_EAST",
            "KOREA_CENTRAL",
            "KOREA_SOUTH",
            "FRANCE_CENTRAL",
            "FRANCE_SOUTH",
            "SOUTH_AFRICA_NORTH",
            "SOUTH_AFRICA_WEST",
            "NORWAY_EAST",
            "NORWAY_WEST",
            "UAE_CENTRAL"
          ]
        },
        "VnetName": {
          "type": "string",
          "description": "Unique string that identifies the Azure VNet in which MongoDB Cloud clusters in this network peering container exist. The response returns **null** if no clusters exist in this network peering container.",
          "maxLength": 38,
          "minLength": 38,
          "pattern": "^([-\\w._()])+$"
        }
      },
      "additionalProperties": false
    },
    "ApiAtlasCloudProviderContainerView": {
      "type": "object",
      "properties": {
        "ApiKeys": {
          "$ref": "#/definitions/ApiKeyDefinition"
        },
        "Id": {
          "type": "string",
          "description": "Unique 24-hexadecimal digit string that identifies the network peering container.",
          "maxLength": 24,
          "minLength": 24,
          "pattern": "^([a-f0-9]{24})$"
        },
        "ProviderName": {
          "type": "string",
          "description": "Cloud service provider that serves the requested network peering containers.",
          "enum": ["AWS", "GCP", "AZURE", "TENANT", "SERVERLESS"]
        },
        "Provisioned": {
          "type": "boolean",
          "description": "Flag that indicates whether MongoDB Cloud clusters exist in the specified network peering container."
        }
      },
      "additionalProperties": false
    },
    "ApiAtlasGCPCloudProviderContainerView": {
      "type": "object",
      "properties": {
        "ApiKeys": {
          "$ref": "#/definitions/ApiKeyDefinition"
        },
        "AtlasCidrBlock": {
          "type": "string",
          "description": "IP addresses expressed in Classless Inter-Domain Routing (CIDR) notation that MongoDB Cloud uses for the network peering containers in your project. MongoDB Cloud assigns all of the project's clusters deployed to this cloud provider an IP address from this range. MongoDB Cloud locks this value if an M10 or greater cluster or a network peering connection exists in this project.\n\nThese CIDR blocks must fall within the ranges reserved per RFC 1918. GCP further limits the block to a lower bound of the `/18` range.\n\nTo modify the CIDR block, the target project cannot have:\n\n- Any M10 or greater clusters\n- Any other VPC peering connections\n\n You can also create a new project and create a network peering connection to set the desired MongoDB Cloud network peering container CIDR block for that project. MongoDB Cloud limits the number of MongoDB nodes per network peering connection based on the CIDR block and the region selected for the project.\n\n **Example:** A project in an Google Cloud (GCP) region supporting three availability zones and an MongoDB CIDR network peering container block of limit of `/24` equals 27 three-node replica sets.",
          "pattern": "^((([0-9]{1,3}\\.){3}[0-9]{1,3})|([\\:]{0,2}([0-9a-f]{1,4}\\:){0,7}[0-9a-f]{1,4}[\\:]{0,2}))((%2[fF]|\\/)[0-9]{1,3})+$"
        },
        "GcpProjectId": {
          "type": "string",
          "description": "Unique string that identifies the GCP project in which MongoDB Cloud clusters in this network peering container exist. The response returns **null** if no clusters exist in this network peering container.",
          "maxLength": 26,
          "minLength": 26,
          "pattern": "^p-[0-9a-z]{24}$"
        },
        "NetworkName": {
          "type": "string",
          "description": "Human-readable label that identifies the network in which MongoDB Cloud clusters in this network peering container exist. MongoDB Cloud returns **null** if no clusters exist in this network peering container.",
          "maxLength": 36,
          "minLength": 36,
          "pattern": "^nt-[0-9a-f]{24}-[0-9a-z]{8}$"
        },
        "Regions": {
          "type": "array",
          "description": "List of GCP regions to which you want to deploy this MongoDB Cloud network peering container.  In this MongoDB Cloud project, you can deploy clusters only to the GCP regions in this list. To deploy MongoDB Cloud clusters to other GCP regions, create additional projects.",
          "items": {
            "type": "string",
            "enum": [
              "ASIA_EAST_2",
              "ASIA_NORTHEAST_2",
              "ASIA_NORTHEAST_3",
              "ASIA_SOUTH_1",
              "ASIA_SOUTH_2",
              "ASIA_SOUTHEAST_2",
              "AUSTRALIA_SOUTHEAST_1",
              "AUSTRALIA_SOUTHEAST_2",
              "CENTRAL_US",
              "EASTERN_ASIA_PACIFIC",
              "EASTERN_US",
              "EUROPE_CENTRAL_2",
              "EUROPE_NORTH_1",
              "EUROPE_WEST_2",
              "EUROPE_WEST_3",
              "EUROPE_WEST_4",
              "EUROPE_WEST_6",
              "NORTH_AMERICA_NORTHEAST_1",
              "NORTH_AMERICA_NORTHEAST_2",
              "NORTHEASTERN_ASIA_PACIFIC",
              "SOUTH_AMERICA_EAST_1",
              "SOUTH_AMERICA_WEST_1",
              "SOUTHEASTERN_ASIA_PACIFIC",
              "US_EAST_4",
              "US_WEST_2",
              "US_WEST_3",
              "US_WEST_4",
              "WESTERN_EUROPE",
              "WESTERN_US"
            ]
          }
        }
      },
      "additionalProperties": false
    },
    "ApiKeyDefinition": {
      "type": "object",
      "properties": {
        "PrivateKey": {
          "type": "string"
        },
        "PublicKey": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "Link": {
      "type": "object",
      "properties": {
        "ApiKeys": {
          "$ref": "#/definitions/ApiKeyDefinition"
        },
        "Href": {
          "type": "string",
          "description": "Uniform Resource Locator (URL) that points another API resource to which this response has some relationship. This URL often begins with `https://mms.mongodb.com`."
        },
        "Rel": {
          "type": "string",
          "description": "Uniform Resource Locator (URL) that defines the semantic relationship between this resource and another API resource. This URL often begins with `https://mms.mongodb.com`."
        }
      },
      "additionalProperties": false
    }
  },
  "description": "Returns, adds, edits, and removes network peering containers.",
  "handlers": {
    "create": {
      "permissions": []
    },
    "read": {
      "permissions": []
    },
    "update": {
      "permissions": []
    },
    "delete": {
      "permissions": []
    }
  },
  "primaryIdentifier": [
    "/definitions/ApiAtlasAWSCloudProviderContainerView/VpcId",
    "/definitions/ApiAtlasAzureCloudProviderContainerView/AzureSubscriptionId",
    "/definitions/ApiAtlasAzureCloudProviderContainerView/VnetName",
    "/definitions/ApiAtlasCloudProviderContainerView/Id",
    "/definitions/ApiAtlasGCPCloudProviderContainerView/GcpProjectId",
    "/properties/ContainerId",
    "/properties/GroupId",
    "/properties/Id"
  ],
  "properties": {
    "": {},
    "ApiKeys": {
      "$ref": "#/definitions/ApiKeyDefinition"
    },
    "ContainerId": {
      "type": "string",
      "description": "Unique 24-hexadecimal digit string that identifies the MongoDB Cloud network container that you want to remove.",
      "maxLength": 24,
      "minLength": 24,
      "pattern": "^([a-f0-9]{24})$"
    },
    "GroupId": {
      "type": "string",
      "description": "Unique 24-hexadecimal digit string that identifies your project.",
      "maxLength": 24,
      "minLength": 24,
      "pattern": "^([a-f0-9]{24})$"
    },
    "Id": {
      "type": "string",
      "description": "Unique 24-hexadecimal digit string that identifies the network peering container.",
      "maxLength": 24,
      "minLength": 24,
      "pattern": "^([a-f0-9]{24})$"
    },
    "IncludeCount": {
      "type": "boolean",
      "description": "Flag that indicates whether the response returns the total number of items (**totalCount**) in the response."
    },
    "ItemsPerPage": {
      "type": "integer",
      "description": "Number of items that the response returns per page."
    },
    "Links": {
      "type": "array",
      "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
      "items": {
        "$ref": "#/definitions/Link",
        "type": "object"
      }
    },
    "PageNum": {
      "type": "integer",
      "description": "Number of the page that displays the current set of the total objects that the response returns."
    },
    "ProviderName": {
      "type": "string",
      "description": "Cloud service provider that serves the requested network peering containers.",
      "enum": ["AWS", "GCP", "AZURE", "TENANT", "SERVERLESS"]
    },
    "Provisioned": {
      "type": "boolean",
      "description": "Flag that indicates whether MongoDB Cloud clusters exist in the specified network peering container."
    },
    "Results": {
      "type": "array",
      "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
      "items": {
        "$ref": "#/definitions/ApiAtlasCloudProviderContainerView",
        "type": "object"
      }
    },
    "TotalCount": {
      "type": "number",
      "description": "Number of documents returned in this response."
    }
  },
  "readOnlyProperties": [
    "/definitions/ApiAtlasAWSCloudProviderContainerView/VpcId",
    "/definitions/ApiAtlasAzureCloudProviderContainerView/AzureSubscriptionId",
    "/definitions/ApiAtlasAzureCloudProviderContainerView/VnetName",
    "/definitions/ApiAtlasCloudProviderContainerView/Id",
    "/definitions/ApiAtlasCloudProviderContainerView/Provisioned",
    "/definitions/ApiAtlasGCPCloudProviderContainerView/GcpProjectId",
    "/definitions/ApiAtlasGCPCloudProviderContainerView/NetworkName",
    "/properties/Id",
    "/properties/Links",
    "/properties/Provisioned",
    "/properties/Results",
    "/properties/TotalCount"
  ],
  "typeName": "MongoDB::Atlas::NetworkContainer",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git"
}
