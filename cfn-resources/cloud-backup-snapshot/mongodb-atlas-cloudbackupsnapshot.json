{
  "typeName": "MongoDB::Atlas::CloudBackupSnapshot",
  "description": "Returns, takes, and removes Cloud Backup snapshots.",
  "additionalProperties": false,
  "definitions": {
    "ApiAtlasDiskBackupReplicaSetView": {
      "type": "object",
      "properties": {
        "CloudProvider": {
          "type": "string",
          "description": "Human-readable label that identifies the cloud provider that stores this snapshot. The resource returns this parameter when `\"type\": \"replicaSet\".`",
          "enum": [
            "AWS",
            "AZURE",
            "GCP"
          ]
        },
        "CreatedAt": {
          "type": "string",
          "description": "Date and time when MongoDB Cloud took the snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
          "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$"
        },
        "Description": {
          "type": "string",
          "description": "Human-readable phrase or sentence that explains the purpose of the snapshot. The resource returns this parameter when `\"status\": \"onDemand\"`."
        },
        "ExpiresAt": {
          "type": "string",
          "description": "Date and time when MongoDB Cloud deletes the snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
          "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$"
        },
        "FrequencyType": {
          "type": "string",
          "description": "Human-readable label that identifies how often this snapshot triggers.",
          "enum": [
            "hourly",
            "daily",
            "weekly",
            "monthly"
          ]
        },
        "Id": {
          "type": "string",
          "description": "Unique 24-hexadecimal digit string that identifies the snapshot.",
          "maxLength": 24,
          "minLength": 24,
          "pattern": "^([a-f0-9]{24})$"
        },
        "MasterKeyUUID": {
          "type": "string",
          "description": "Unique string that identifies the Amazon Web Services (AWS) Key Management Service (KMS) Customer Master Key (CMK) used to encrypt the snapshot. The resource returns this value when `\"encryptionEnabled\" : true`."
        },
        "MongodVersion": {
          "type": "string",
          "description": "Version of the MongoDB host that this snapshot backs up.",
          "pattern": "([\\d]+\\.[\\d]+\\.[\\d]+)"
        },
        "PolicyItems": {
          "type": "array",
          "insertionOrder": false,
          "description": "List that contains unique identifiers for the policy items.",
          "items": {
            "type": "string"
          }
        },
        "ReplicaSetName": {
          "type": "string",
          "description": "Human-readable label that identifies the replica set from which MongoDB Cloud took this snapshot. The resource returns this parameter when `\"type\": \"replicaSet\"`"
        },
        "SnapshotType": {
          "type": "string",
          "description": "Human-readable label that identifies when this snapshot triggers.",
          "enum": [
            "onDemand",
            "scheduled"
          ]
        },
        "Status": {
          "type": "string",
          "description": "Human-readable label that indicates the stage of the backup process for this snapshot.",
          "enum": [
            "queued",
            "inProgress",
            "completed",
            "failed"
          ]
        },
        "StorageSizeBytes": {
          "type": "string",
          "description": "Number of bytes taken to store the backup snapshot."
        },
        "Type": {
          "type": "string",
          "description": "Human-readable label that categorizes the cluster as a replica set or sharded cluster.",
          "enum": [
            "REPLICA_SET",
            "SHARDED_CLUSTER"
          ]
        }
      },
      "additionalProperties": false
    },
    "ApiAtlasDiskBackupShardedClusterSnapshotMemberView": {
      "type": "object",
      "properties": {
        "CloudProvider": {
          "type": "string",
          "description": "Human-readable label that identifies the cloud provider that stores this snapshot. The resource returns this parameter when `\"type\": \"replicaSet\".`",
          "enum": [
            "AWS",
            "AZURE",
            "GCP"
          ]
        },
        "Id": {
          "type": "string",
          "description": "Unique 24-hexadecimal digit string that identifies the snapshot.",
          "maxLength": 24,
          "minLength": 24,
          "pattern": "^([a-f0-9]{24})$"
        },
        "ReplicaSetName": {
          "type": "string",
          "description": "Human-readable label that identifies the shard or config host from which MongoDB Cloud took this snapshot."
        }
      },
      "additionalProperties": false
    },
    "ApiAtlasDiskBackupShardedClusterSnapshotView": {
      "type": "object",
      "properties": {
        "CreatedAt": {
          "type": "string",
          "description": "Date and time when MongoDB Cloud took the snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
          "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$"
        },
        "Description": {
          "type": "string",
          "description": "Human-readable phrase or sentence that explains the purpose of the snapshot. The resource returns this parameter when `\"status\": \"onDemand\"`."
        },
        "ExpiresAt": {
          "type": "string",
          "description": "Date and time when MongoDB Cloud deletes the snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
          "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$"
        },
        "FrequencyType": {
          "type": "string",
          "description": "Human-readable label that identifies how often this snapshot triggers.",
          "enum": [
            "hourly",
            "daily",
            "weekly",
            "monthly"
          ]
        },
        "Id": {
          "type": "string",
          "description": "Unique 24-hexadecimal digit string that identifies the snapshot.",
          "maxLength": 24,
          "minLength": 24,
          "pattern": "^([a-f0-9]{24})$"
        },
        "MasterKeyUUID": {
          "type": "string",
          "description": "Unique string that identifies the Amazon Web Services (AWS) Key Management Service (KMS) Customer Master Key (CMK) used to encrypt the snapshot. The resource returns this value when `\"encryptionEnabled\" : true`."
        },
        "Members": {
          "type": "array",
          "insertionOrder": false,
          "description": "List that includes the snapshots and the cloud provider that stores the snapshots. The resource returns this parameter when `\"type\" : \"SHARDED_CLUSTER\"`.",
          "items": {
            "$ref": "#/definitions/ApiAtlasDiskBackupShardedClusterSnapshotMemberView",
            "type": "object"
          }
        },
        "MongodVersion": {
          "type": "string",
          "description": "Version of the MongoDB host that this snapshot backs up.",
          "pattern": "([\\d]+\\.[\\d]+\\.[\\d]+)"
        },
        "PolicyItems": {
          "type": "array",
          "insertionOrder": false,
          "description": "List that contains unique identifiers for the policy items.",
          "items": {
            "type": "string"
          }
        },
        "SnapshotIds": {
          "type": "array",
          "insertionOrder": false,
          "description": "List that contains the unique identifiers of the snapshots created for the shards and config host for a sharded cluster. The resource returns this parameter when `\"type\": \"SHARDED_CLUSTER\"`. These identifiers should match the ones specified in the **members[n].id** parameters. This allows you to map a snapshot to its shard or config host name.",
          "items": {
            "type": "string"
          }
        },
        "SnapshotType": {
          "type": "string",
          "description": "Human-readable label that identifies when this snapshot triggers.",
          "enum": [
            "onDemand",
            "scheduled"
          ]
        },
        "Status": {
          "type": "string",
          "description": "Human-readable label that indicates the stage of the backup process for this snapshot.",
          "enum": [
            "queued",
            "inProgress",
            "completed",
            "failed"
          ]
        },
        "StorageSizeBytes": {
          "type": "string",
          "description": "Number of bytes taken to store the backup snapshot."
        },
        "Type": {
          "type": "string",
          "description": "Human-readable label that categorizes the cluster as a replica set or sharded cluster.",
          "enum": [
            "REPLICA_SET",
            "SHARDED_CLUSTER"
          ]
        }
      },
      "additionalProperties": false
    },
    "apiKeyDefinition": {
      "type": "object",
      "properties": {
        "PrivateKey": {
          "type": "string"
        },
        "PublicKey": {
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  },
  "properties": {
    "Profile": {
      "type": "string",
      "description": "The profile is defined in AWS Secret manager. See [Secret Manager Profile setup](../../../examples/profile-secret.yaml).",
      "default": "default"
    },
    "CloudProvider": {
      "type": "string",
      "description": "Human-readable label that identifies the cloud provider that stores this snapshot. The resource returns this parameter when `\"type\": \"replicaSet\".`",
      "enum": [
        "AWS",
        "AZURE",
        "GCP"
      ]
    },
    "InstanceType": {
      "description": "Type of instance specified on the Instance Name serverless or cluster",
      "type": "string",
      "enum": [
        "serverless",
        "cluster"
      ]
    },
    "InstanceName": {
      "description": "The instance name of the Serverless/Cluster whose snapshot you want to restore or you want to retrieve restore snapshot.",
      "type": "string"
    },
    "CreatedAt": {
      "type": "string",
      "description": "Date and time when MongoDB Cloud took the snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
      "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$"
    },
    "Description": {
      "type": "string",
      "description": "Human-readable phrase or sentence that explains the purpose of the snapshot. The resource returns this parameter when `\"status\": \"onDemand\"`."
    },
    "ExpiresAt": {
      "type": "string",
      "description": "Date and time when MongoDB Cloud deletes the snapshot. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
      "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z)$"
    },
    "FrequencyType": {
      "type": "string",
      "description": "Human-readable label that identifies how often this snapshot triggers.",
      "enum": [
        "hourly",
        "daily",
        "weekly",
        "monthly"
      ]
    },
    "ProjectId": {
      "type": "string",
      "description": "Unique 24-hexadecimal digit string that identifies your project.",
      "maxLength": 24,
      "minLength": 24,
      "pattern": "^([a-f0-9]{24})$"
    },
    "Id": {
      "type": "string",
      "description": "Unique 24-hexadecimal digit string that identifies the snapshot.",
      "maxLength": 24,
      "minLength": 24,
      "pattern": "^([a-f0-9]{24})$"
    },
    "IncludeCount": {
      "type": "boolean",
      "description": "Flag that indicates whether the response returns the total number of items (**totalCount**) in the response."
    },
    "ItemsPerPage": {
      "type": "integer",
      "description": "Number of items that the response returns per page."
    },
    "MasterKeyUUID": {
      "type": "string",
      "description": "Unique string that identifies the Amazon Web Services (AWS) Key Management Service (KMS) Customer Master Key (CMK) used to encrypt the snapshot. The resource returns this value when `\"encryptionEnabled\" : true`."
    },
    "Members": {
      "type": "array",
      "insertionOrder": false,
      "description": "List that includes the snapshots and the cloud provider that stores the snapshots. The resource returns this parameter when `\"type\" : \"SHARDED_CLUSTER\"`.",
      "items": {
        "$ref": "#/definitions/ApiAtlasDiskBackupShardedClusterSnapshotMemberView",
        "type": "object"
      }
    },
    "MongodVersion": {
      "type": "string",
      "description": "Version of the MongoDB host that this snapshot backs up.",
      "pattern": "([\\d]+\\.[\\d]+\\.[\\d]+)"
    },
    "PageNum": {
      "type": "integer",
      "description": "Number of the page that displays the current set of the total objects that the response returns."
    },
    "PolicyItems": {
      "type": "array",
      "insertionOrder": false,
      "description": "List that contains unique identifiers for the policy items.",
      "items": {
        "type": "string"
      }
    },
    "ReplicaSetName": {
      "type": "string",
      "description": "Human-readable label that identifies the replica set from which MongoDB Cloud took this snapshot. The resource returns this parameter when `\"type\": \"replicaSet\"`"
    },
    "Results": {
      "type": "array",
      "insertionOrder": false,
      "description": "List of returned documents that MongoDB Cloud provides when completing this request.",
      "items": {
        "$ref": "#/definitions/ApiAtlasDiskBackupShardedClusterSnapshotView",
        "type": "object"
      }
    },
    "RetentionInDays": {
      "type": "integer",
      "description": "Number of days that MongoDB Cloud should retain the on-demand snapshot. Must be at least **1**"
    },
    "SnapshotId": {
      "type": "string",
      "description": "Unique 24-hexadecimal digit string that identifies the desired snapshot.",
      "maxLength": 24,
      "minLength": 24,
      "pattern": "^([a-f0-9]{24})$"
    },
    "SnapshotIds": {
      "type": "array",
      "insertionOrder": false,
      "description": "List that contains the unique identifiers of the snapshots created for the shards and config host for a sharded cluster. The resource returns this parameter when `\"type\": \"SHARDED_CLUSTER\"`. These identifiers should match the ones specified in the **members[n].id** parameters. This allows you to map a snapshot to its shard or config host name.",
      "items": {
        "type": "string"
      }
    },
    "SnapshotType": {
      "type": "string",
      "description": "Human-readable label that identifies when this snapshot triggers.",
      "enum": [
        "onDemand",
        "scheduled"
      ]
    },
    "Status": {
      "type": "string",
      "description": "Human-readable label that indicates the stage of the backup process for this snapshot.",
      "enum": [
        "queued",
        "inProgress",
        "completed",
        "failed"
      ]
    },
    "StorageSizeBytes": {
      "type": "string",
      "description": "Number of bytes taken to store the backup snapshot."
    },
    "TotalCount": {
      "type": "number",
      "description": "Number of documents returned in this response."
    },
    "Type": {
      "type": "string",
      "description": "Human-readable label that categorizes the cluster as a replica set or sharded cluster.",
      "enum": [
        "REPLICA_SET",
        "SHARDED_CLUSTER"
      ]
    }
  },
  "handlers": {
    "create": {
      "permissions": [
        "secretsmanager:GetSecretValue"
      ]
    },
    "read": {
      "permissions": [
        "secretsmanager:GetSecretValue"
      ]
    },
    "delete": {
      "permissions": [
        "secretsmanager:GetSecretValue"
      ]
    },
    "list": {
      "permissions": [
        "secretsmanager:GetSecretValue"
      ]
    }
  },
  "readOnlyProperties": [
    "/properties/SnapshotId",
    "/properties/SnapshotIds",
    "/properties/MasterKeyUUID",
    "/properties/Type",
    "/properties/ExpiresAt",
    "/properties/StorageSizeBytes",
    "/properties/Id",
    "/properties/CreatedAt",
    "/properties/CloudProvider",
    "/properties/MongodVersion",
    "/properties/ReplicaSetName",
    "/properties/Status"
  ],
  "createOnlyProperties": [
    "/properties/ProjectId",
    "/properties/InstanceName",
    "/properties/InstanceType",
    "/properties/Profile"
  ],
  "required": [
    "ProjectId",
    "InstanceName",
    "InstanceType"
  ],
  "primaryIdentifier": [
    "/properties/ProjectId",
    "/properties/InstanceName",
    "/properties/InstanceType",
    "/properties/SnapshotId",
    "/properties/Profile"
  ],
  "sourceUrl": "https://github.com/mongodb/mongodbatlas-cloudformation-resources/tree/master/cfn-resources/cloud-backup-snapshot",
  "documentationUrl": "https://github.com/mongodb/mongodbatlas-cloudformation-resources/blob/master/cfn-resources/cloud-backup-snapshot/README.md",
  "tagging": {
    "taggable": false
  }
}
