{
  "typeName": "MongoDB::Atlas::FederatedSettingOrgConfigs",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git",
  "description": "Returns, adds, edits, and removes federation-related features such as role mappings and connected organization configurations.",
  "additionalProperties": false,
  "definitions": {
    "FederatedUserView": {
      "type": "object",
      "properties": {
        "EmailAddress": {
          "type": "string",
          "description": "Email address of the MongoDB Cloud user linked to the federated organization.",
          "pattern": "^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$"
        },
        "FederationSettingsId": {
          "type": "string",
          "description": "Unique 24-hexadecimal digit string that identifies the federation to which this MongoDB Cloud user belongs.",
          "maxLength": 24,
          "minLength": 24,
          "pattern": "^([a-f0-9]{24})$"
        },
        "FirstName": {
          "type": "string",
          "description": "First or given name that belongs to the MongoDB Cloud user."
        },
        "LastName": {
          "type": "string",
          "description": "Last name, family name, or surname that belongs to the MongoDB Cloud user."
        },
        "UserId": {
          "type": "string",
          "description": "Unique 24-hexadecimal digit string that identifies this user.",
          "maxLength": 24,
          "minLength": 24,
          "pattern": "^([a-f0-9]{24})$"
        }
      },
      "additionalProperties": false
    },
    "RoleAssignment": {
      "type": "object",
      "properties": {
        "ProjectId": {
          "type": "string"
        },
        "OrgId": {
          "type": "string"
        },
        "Role": {
          "type": "string",
          "enum": [
            "GLOBAL_AUTOMATION_ADMIN",
            "GLOBAL_BACKUP_ADMIN",
            "GLOBAL_METERING_USER",
            "GLOBAL_METRICS_INTERNAL_USER",
            "GLOBAL_MONITORING_ADMIN",
            "GLOBAL_OWNER",
            "GLOBAL_READ_ONLY",
            "ORG_OWNER",
            "ORG_MEMBER"
          ]
        }
      },
      "additionalProperties": false
    },
    "RoleMappingView": {
      "type": "object",
      "properties": {
        "ExternalGroupName": {
          "type": "string",
          "description": "Unique human-readable label that identifies the identity provider group to whichthis role mapping applies.",
          "maxLength": 200,
          "minLength": 1
        },
        "Id": {
          "type": "string",
          "description": "Unique 24-hexadecimal digit string that identifies this role mapping.",
          "maxLength": 24,
          "minLength": 24,
          "pattern": "^([a-f0-9]{24})$"
        },
        "RoleAssignments": {
          "type": "array",
          "insertionOrder": false,
          "description": "Atlas roles and the unique identifiers of the groups and organizations associated with each role.",
          "items": {
            "$ref": "#/definitions/RoleAssignment",
            "type": "object"
          }
        }
      },
      "additionalProperties": false
    }
  },
  "properties": {
    "Profile": {
      "type": "string",
      "description": "The profile is defined in AWS Secret manager. See [Secret Manager Profile setup](../../../examples/profile-secret.yaml).",
      "default": "default"
    },
    "DomainAllowList": {
      "type": "array",
      "insertionOrder": false,
      "description": "Approved domains that restrict users who can join the organization based on their email address.",
      "items": {
        "type": "string"
      }
    },
    "DomainRestrictionEnabled": {
      "type": "boolean",
      "description": "Value that indicates whether domain restriction is enabled for this connected org."
    },
    "TestMode": {
      "type": "string"
    },
    "FederationSettingsId": {
      "type": "string",
      "description": "Unique 24-hexadecimal digit string that identifies your federation.",
      "maxLength": 24,
      "minLength": 24,
      "pattern": "^([a-f0-9]{24})$"
    },
    "IdentityProviderId": {
      "type": "string",
      "description": "Unique 20-hexadecimal digit string that identifies the identity provider that this connected org config is associated with.",
      "maxLength": 20,
      "minLength": 20
    },
    "OrgId": {
      "type": "string",
      "description": "Unique 24-hexadecimal digit string that identifies the connected organization configuration to remove.",
      "maxLength": 24,
      "minLength": 24,
      "pattern": "^([a-f0-9]{24})$"
    },
    "PostAuthRoleGrants": {
      "type": "array",
      "insertionOrder": false,
      "description": "Atlas roles that are granted to a user in this organization after authenticating.",
      "items": {
        "type": "string",
        "enum": [
          "GLOBAL_AUTOMATION_ADMIN",
          "GLOBAL_BACKUP_ADMIN",
          "GLOBAL_METERING_USER",
          "GLOBAL_METRICS_INTERNAL_USER",
          "GLOBAL_MONITORING_ADMIN",
          "GLOBAL_OWNER",
          "ORG_OWNER",
          "ORG_MEMBER"
        ]
      }
    },
    "RoleMappings": {
      "type": "array",
      "insertionOrder": false,
      "description": "Role mappings that are configured in this organization.",
      "items": {
        "$ref": "#/definitions/RoleMappingView",
        "type": "object"
      }
    },
    "UserConflicts": {
      "type": "array",
      "insertionOrder": false,
      "description": "List that contains the users who have an email address that doesn't match any domain on the allowed list.",
      "items": {
        "$ref": "#/definitions/FederatedUserView",
        "type": "object"
      }
    }
  },
  "readOnlyProperties": [
    "/properties/RoleAssignment/OrgId",
    "/properties/TestMode",
    "/properties/FederationSettingsId",
    "/properties/RoleAssignment/ProjectId",
    "/properties/RoleMappingView/Id",
    "/properties/FederatedUserView/UserId"
  ],
  "primaryIdentifier": [
    "/properties/FederationSettingsId",
    "/properties/OrgId",
    "/properties/Profile"
  ],
  "createOnlyProperties": [
    "/properties/OrgId",
    "/properties/Profile"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "secretsmanager:GetSecretValue"
      ]
    },
    "read": {
      "permissions": [
        "secretsmanager:GetSecretValue"
      ]
    },
    "update": {
      "permissions": [
        "secretsmanager:GetSecretValue"
      ]
    },
    "delete": {
      "permissions": [
        "secretsmanager:GetSecretValue"
      ]
    }
  }
}
